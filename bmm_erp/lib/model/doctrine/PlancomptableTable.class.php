<?php

/**
 * PlancomptableTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PlancomptableTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object PlancomptableTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Plancomptable');
    }

    public function getByDossier($dossier, $exercice_id) {
        $q = $this->createQuery('c')
                ->leftJoin('c.Plandossiercomptable pdc')
                ->where('pdc.id_dossier = ?', $dossier)
                ->andWhere('pdc.id_exercice=' . $exercice_id)
                ->andWhere('LENGTH(trim(c.numerocompte)) >= 7');
        $q->orderBy('trim(c.numerocompte)');

        return $q->execute();
    }

    public function findbyStandar() {
        $standa = 1;
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where('p.standard =' . $standa)
                ->andWhere('length(p.numerocompte)<6')
             //   ->andWhere('p.id_dossier=' . $_SESSION['dossier_id'])
                ->orderBy('p.numerocompte')
                ->GroupBy('p.id , p.numerocompte')
        ;
        return $query->execute();
    }

    public function getAllStandard() {
        $standa = 1;
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where('p.standard =1')
                ->andWhere('length(p.numerocompte)<6')
                ->andWhere('p.id_dossier=' . $_SESSION['dossier_id'])
                ->orderBy('p.numerocompte')
                ->GroupBy('p.id , p.numerocompte')
        ;
//        die($query);
        return $query->execute();
    }
    public function findClasseOrderByNumero() {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where('p.id_compte IS NULL')
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findByClasseOrderByNumero($compte) {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where("p.numerocompte LIKE '" . $compte . "%'")
                ->andWhere('p.id_dossier IS NULL')
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findOrderByNumeroSousClasse($compte) {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where("p.numerocompte LIKE '" . $compte . "%'")
                ->andWhere('p.id_dossier = ?', $_SESSION['dossier_id'])
                ->andWhere('length(p.numerocompte)>=7')
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findOrderByNumero() {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p');

//        if (!isset($_SESSION['dossier_id']))
        $query = $query->where('p.id_dossier IS NULL');
//        else
//            $query = $query->where('p.id_dossier = ?', $_SESSION['dossier_id']);

        $query = $query->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findNumerocompteAndIdDossier($code, $id_dossier) {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p');

        if ($id_dossier)
            $query = $query->where('p.id_dossier =' . $id_dossier);
        if ($code)
            $query = $query->where('trim(p.numerocompte) =' . "'trim(" . $code . ")'");


        $query = $query->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findListeByClasseOrderByNumero($id_classe) {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where('p.id_classe = ?', $id_classe);

        if (!isset($_SESSION['dossier_id']))
            $query = $query->where('p.id_dossier IS NULL');
        else
            $query = $query->where('p.id_dossier = ?', $_SESSION['dossier_id']);

        $query = $query->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function findStandard() {
        $query = $this->createQuery('p');
        $query->select('p.*')
                ->from('Plancomptable p')
                ->where('p.id_dossier IS NULL')
                ->andWhere('p.standard = 0')
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function getPlanComptableOrderByNumeroForSelect() {
        $query = $this->createQuery('p');
        $query->select('p.id as id, p.numerocompte as numerocompte, p.libelle as libelle')
                ->from('Plancomptable p')
                ->leftJoin('p.Plandossiercomptable plc')
                ->where('p.id_dossier = ?', $_SESSION['dossier_id'])
                ->andWhere(" length(plc.numerocompte)>=7")
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function getPlanComptableOrderByNumero() {
        $query = $this->createQuery('p');
        $query->select('p.id as id, p.numerocompte as numerocompte, p.libelle as libelle, p.standard as standard, p.date as date, c.libelle as libellecompte')
                ->from('Plancomptable p')
                ->leftJoin('p.Plandossiercomptable pdc')
                ->leftJoin('p.Classecompte c')
                ->Where('p.standard = 0')
                ->where('p.id_dossier =' . $_SESSION['dossier_id'])
                ->andWhere('pdc.id_exercice =' . $_SESSION['exercice_id'])
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function InsertQueryArray($id_dossier) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "INSERT INTO plancomptable(
	 numerocompte, typesolde, lettrage, standard, date, id_classe, id_devise, id_compte, id_user, libelle, id_dossier, ensommeil, senspardefaut)
	 (select  numerocompte, typesolde, lettrage, standard, date, id_classe, id_devise, id_compte, id_user, libelle, " . $id_dossier . " as id_dossier, ensommeil, senspardefaut from plancomptable
        where id_dossier is null)";
        $conn->execute($query);
    }

    public function loadByDossier($dossier_id, $numero = '', $intitule = '') {
        $query = $this->createQuery('p')
                ->select('p.id as id, p.numerocompte as numerocompte, p.libelle as libelle, c.libelle as libellecompte')
                ->from('Plancomptable p')
                ->leftJoin('p.Classecompte c')
                ->where('p.id IN (SELECT pd.id_plan FROM Plandossiercomptable pd WHERE pd.id_dossier =' . $dossier_id . ')');
        if ($numero != '') {
            $query = $query->andWhere("p.numerocompte LIKE '%" . $numero . "%'");
        }
        if ($intitule != '') {
            $query = $query->andWhere("p.libelle LIKE '%" . $intitule . "%'");
        }
        $query = $query->orderBy('p.numerocompte');

        return $query->execute();
    }

    public function loadByJournal($journal_id, $numero = '', $intitule = '') {
        $query = $this->createQuery('p')
                ->select('p.id as id, p.numerocompte as numerocompte, p.libelle as libelle, c.libelle as libellecompte')
                ->from('Plancomptable p')
                ->leftJoin('p.Classecompte c')
                ->where('p.id IN (SELECT pd.id_souscompte FROM  Souscomptejournal pd  WHERE  pd.id_journal =' . $journal_id . ')')
                ->andWhere('p.id_dossier = ?', $_SESSION['dossier_id']);
        if ($numero != '') {
            $query = $query->andWhere("p.numero_compte LIKE '%" . $numero . "%'");
        }
        if ($intitule != '') {
            $query = $query->andWhere("p.libelle LIKE '%" . $intitule . "%'");
        }
        $query = $query->orderBy('p.numerocompte');

        return $query->execute();
    }

    public function findByJournalOrderByNumero($id) {
        $query = $this->createQuery('p');
        $query->select('p.id as id, p.numerocompte as numerocompte, p.libelle as libelle')
                ->from('Plancomptable p')
                ->leftJoin('p.Souscomptejournal s')
                ->where('s.id_journal = ' . $id)
                ->andWhere('p.id_dossier = ?', $_SESSION['dossier_id'])
                ->orderBy('p.numerocompte');
        return $query->execute();
    }

    public function loadByInterval($compte_min = '', $compte_max = '') {
        $q = $this->createQuery('c');

        if ($compte_min != '')
            $q->andWhere('TRIM(c.numerocompte) >= ?', trim($compte_min));
        if ($compte_max != '')
            $q->andWhere('TRIM(c.numerocompte) <= ?', trim($compte_max));

        $q->orderBy('c.numerocompte');

        return $q->execute();
    }

    public function loadByParametreId($parametre_id) {
        $q = $this->createQuery('c')
                ->leftJoin('c.Plandossiercomptable pdc')
                ->leftJoin('pdc.Parametrebilancompte p')
                ->where('p.id_parametrebilan = ?', $parametre_id)
                ->orderBy('c.numerocompte');

        return $q->execute();
    }

}
