<?php

/**
 * ClientTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ClientTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ClientTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Client');
    }

    public function getAllPagerComptabilite($raisonSociale = '', $code = '', $compte = '') {
        $q = $this->createQuery('c')
                ->select('c.id as id, c.reference as reference, c.rs as rs, p.numerocompte as numerocompte, p.libelle as libellecompte')
                ->from('Client c')
                ->leftJoin('c.Plancomptable p')
              //  ->where('c.id_dossier = ' . $_SESSION['dossier_id'])
                ->orderBy('c.id asc')
        ;

        return $q;
    }

    public function getByListeLibelle($libelles) {
        $q = $this->createQuery('c')
                ->whereIn('upper(trim(c.rs))', (array) $libelles)
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
                ->execute();
        return $q;
    }

    public function getByListeCode($codes) {
        $q = $this->createQuery('c')
                ->whereIn('upper(trim(c.codeclt))', (array) $codes)
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id']);
        return $q->execute();
    }

    public function getByListeCodeAndLibelle($codes, $libelles) {
        $q = $this->createQuery('c')
                ->whereIn('upper(trim(c.codeclt))', (array) $codes)
                ->andWhereIn('upper(trim(c.rs))', (array) $libelles)
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id']);
        return $q->execute();
    }

    public function loadByInterval($client_min = '', $client_max = '') {
        $q = Doctrine_Core::getTable('Client')
                ->createQuery('a')
                ->where("a.id_dossier = ?", $_SESSION['dossier_id']);

        if ($client_min != "")
            $q = $q->AndWhere('a.id >=' . $client_min);

        if ($client_max != '')
            $q->andWhere('a.id <= ' . $client_max);
        $q = $q->orderby('id asc');
        return $q->execute();
    }

    public function loadByIntervalCompta($client_min = '', $client_max = '') {
        $q = $this->createQuery('a')
                ->select('a.id as id, a.rs as rs ,a.id_plancomptable as id_plan')
                ->from('Client a,Facturecomptablevente f')
//                ->leftJoin('a.Facturecomptablevente f')
//                ->leftJoin('f.Piececomptable fp')
                ->where("a.id_dossier = ?", $_SESSION['dossier_id'])
                ->andWhere('f.id_piececomptable is  null or a.id not in (select id_client from Facturecomptablevente )')
//                ->andWhere('f.id_client = a.id ')
//                ->andWhere('a.id  not in (select id_client from facturecomptablevente where facturecomptablevente.saisie = 1 )')
//                ->andWhere("f.saisie <> 1")
//                ->andWhere('f.id_client=a.id')
        ;

        if ($client_min != "")
            $q = $q->AndWhere('a.id >=' . $client_min);

        if ($client_max != '')
            $q->andWhere('a.id <= ' . $client_max);
        $q = $q->orderby('id asc');
        return $q->execute();
    }

}
