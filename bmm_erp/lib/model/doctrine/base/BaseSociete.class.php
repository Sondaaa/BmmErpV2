<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Societe', 'doctrine');

/**
 * BaseSociete
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $rs
 * @property string $matfiscal
 * @property string $logo
 * @property string $observation
 * @property string $codepostal
 * @property integer $id_gouvernera
 * @property string $tel
 * @property string $telephone
 * @property string $gsm
 * @property string $fax
 * @property integer $br
 * @property integer $id_pays
 * @property string $adresse
 
 * @property string $ministere
 * @property string $mail
 * @property integer $annee
 * @property string $activite
 * @property integer $idunique
 * @property string $typecotisation
 * @property integer $nbremoisannuel
 * @property Gouvernera $Gouvernera
 * @property Pays $Pays
 * @property Doctrine_Collection $Parametragesociete
 * @property Doctrine_Collection $Lignesociete
 * @property Doctrine_Collection $Site
 * 
 * @method integer             getId()                 Returns the current record's "id" value
 * @method string              getRs()                 Returns the current record's "rs" value
 * @method string              getMatfiscal()          Returns the current record's "matfiscal" value
 * @method string              getLogo()               Returns the current record's "logo" value
 * @method string              getObservation()        Returns the current record's "observation" value
 * @method string              getCodepostal()         Returns the current record's "codepostal" value
 * @method integer             getIdGouvernera()       Returns the current record's "id_gouvernera" value
 * @method string              getTel()                Returns the current record's "tel" value
 
 * @method string              getTelephone()                Returns the current record's "telephone" value
 * @method string              getGsm()                Returns the current record's "gsm" value
 * @method string              getFax()                Returns the current record's "fax" value
 
 * @method string              getMinistere()          Returns the current record's "ministere" value
 * @method integer             getIdPays()             Returns the current record's "id_pays" value
 * @method string              getAdresse()            Returns the current record's "adresse" value
 * @method string              getMail()               Returns the current record's "mail" value
 * @method string              getActivite()           Returns the current record's "activite" value
 * @method integer             getIdunique()           Returns the current record's "idunique" value
 * @method string              getTypecotisation()     Returns the current record's "typecotisation" value
 * @method integer             getNbremoisannuel()     Returns the current record's "nbremoisannuel" value
 * @method integer             getAnnee()              Returns the current record's "annee" value
 * @method Gouvernera          getGouvernera()         Returns the current record's "Gouvernera" value
 * @method Pays                getPays()               Returns the current record's "Pays" value
 * @method Doctrine_Collection getParametragesociete() Returns the current record's "Parametragesociete" collection
 * @method integer             getBr()                 Returns the current record's "br" value
 * @method Doctrine_Collection getLignesociete()       Returns the current record's "Lignesociete" collection
 * @method Doctrine_Collection getSite()               Returns the current record's "Site" collection
 * @method Societe             setId()                 Sets the current record's "id" value
 * @method Societe             setRs()                 Sets the current record's "rs" value
 * @method Societe             setMatfiscal()          Sets the current record's "matfiscal" value
 * @method Societe             setLogo()               Sets the current record's "logo" value
 * @method Societe             setObservation()        Sets the current record's "observation" value
 * @method Societe             setCodepostal()         Sets the current record's "codepostal" value
 * @method Societe             setIdGouvernera()       Sets the current record's "id_gouvernera" value
 * @method Societe             setTel()                Sets the current record's "tel" value
 
 * @method Societe             setTelephone()          Sets the current record's "telephone" value
 * @method Societe             setGsm()                Sets the current record's "gsm" value
 
 * @method Societe             setMinistere()                Sets the current record's "ministere" value
 * @method Societe             setFax()                Sets the current record's "fax" value
  * @method Societe             setAnnee()              Sets the current record's "annee" value
 * @method Societe             setIdPays()             Sets the current record's "id_pays" value
 * @method Societe             setAdresse()            Sets the current record's "adresse" value
 * @method Societe             setMail()               Sets the current record's "mail" value
 * @method Societe             setActivite()           Sets the current record's "activite" value
 * @method Societe             setIdunique()           Sets the current record's "idunique" value
 * @method Societe             setTypecotisation()     Sets the current record's "typecotisation" value
 * @method Societe             setNbremoisannuel()     Sets the current record's "nbremoisannuel" value
 * @method Societe             setGouvernera()         Sets the current record's "Gouvernera" value
 * @method Societe             setPays()               Sets the current record's "Pays" value
 * @method Societe             setParametragesociete() Sets the current record's "Parametragesociete" collection
 * @method Societe             setLignesociete()       Sets the current record's "Lignesociete" collection
  * @method Societe             setBr()                 Sets the current record's "br" value
 * @method Societe             setSite()               Sets the current record's "Site" collection
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSociete extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('societe');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'societe_id',
             'length' => 4,
             ));
        $this->hasColumn('rs', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
			 
			  $this->hasColumn('ministere', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('matfiscal', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('logo', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('codepostal', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_gouvernera', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tel', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
			 
			  $this->hasColumn('telephone', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('gsm', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('fax', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_pays', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('adresse', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mail', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('activite', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 200,
             ));
        $this->hasColumn('idunique', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('typecotisation', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('nbremoisannuel', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
			  $this->hasColumn('br', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
			 $this->hasColumn('annee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Gouvernera', array(
             'local' => 'id_gouvernera',
             'foreign' => 'id'));

        $this->hasOne('Pays', array(
             'local' => 'id_pays',
             'foreign' => 'id'));

        $this->hasMany('Parametragesociete', array(
             'local' => 'id',
             'foreign' => 'id_societe'));

        $this->hasMany('Lignesociete', array(
             'local' => 'id',
             'foreign' => 'id_societe'));

        $this->hasMany('Site', array(
             'local' => 'id',
             'foreign' => 'id_societe'));
    }
}