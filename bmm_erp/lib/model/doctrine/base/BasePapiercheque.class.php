<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Papiercheque', 'doctrine');

/**
 * BasePapiercheque
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_carnet
 * @property float $refpapier
 * @property decimal $mntcheque
 * @property date $datesignature
 * @property string $cible
 * @property boolean $etat
 * @property integer $annule
 * @property Carnetcheque $Carnetcheque
 * @property Doctrine_Collection $Mouvementbanciare
 * 
 * @method integer              getId()            Returns the current record's "id" value
 * @method integer              getIdCarnet()      Returns the current record's "id_carnet" value
 * @method float                getRefpapier()     Returns the current record's "refpapier" value
 * @method decimal              getMntcheque()     Returns the current record's "mntcheque" value
 * @method date                 getDatesignature() Returns the current record's "datesignature" value
 * @method string               getCible()         Returns the current record's "cible" value
 * @method boolean              getEtat()          Returns the current record's "etat" value
 * @method integer              getAnnule()        Returns the current record's "annule" value
 * @method Carnetcheque         getCarnetcheque()  Returns the current record's "Carnetcheque" value
 * @method Doctrine_Collection  getMouvementbanciare() Returns the current record's "Mouvementbanciare" collection
 * @method Papiercheque         setId()            Sets the current record's "id" value
 * @method Papiercheque         setIdCarnet()      Sets the current record's "id_carnet" value
 * @method Papiercheque         setRefpapier()     Sets the current record's "refpapier" value
 * @method Papiercheque         setMntcheque()     Sets the current record's "mntcheque" value
 * @method Papiercheque         setDatesignature() Sets the current record's "datesignature" value
 * @method Papiercheque         setCible()         Sets the current record's "cible" value
 * @method Papiercheque         setEtat()          Sets the current record's "etat" value
 * @method Papiercheque        setAnnule()            Sets the current record's "annule" value
 * @method Papiercheque         setCarnetcheque()  Sets the current record's "Carnetcheque" value
 * @method Papiercheque        setMouvementbanciare() Sets the current record's "Mouvementbanciare" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePapiercheque extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('papiercheque');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'papiercheque_id',
             'length' => 4,
             ));
        $this->hasColumn('id_carnet', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('refpapier', 'float', null, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mntcheque', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('datesignature', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('cible', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('etat', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('annule', 'integer', 2, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 2,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Carnetcheque', array(
             'local' => 'id_carnet',
             'foreign' => 'id'));
        
        $this->hasMany('Mouvementbanciare', array(
             'local' => 'id',
             'foreign' => 'id_cheque'));
    }
}