<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Instrumentpaiment', 'doctrine');

/**
 * BaseInstrumentpaiment
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property string $refinstrument
 * @property Doctrine_Collection $Mouvementbanciare
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method string              getLibelle()           Returns the current record's "libelle" value
 * @method string              getRefinstrument()     Returns the current record's "refinstrument" value
 * @method Doctrine_Collection getMouvementbanciare() Returns the current record's "Mouvementbanciare" collection
 * @method Instrumentpaiment   setId()                Sets the current record's "id" value
 * @method Instrumentpaiment   setLibelle()           Sets the current record's "libelle" value
 * @method Instrumentpaiment   setRefinstrument()     Sets the current record's "refinstrument" value
 * @method Instrumentpaiment   setMouvementbanciare() Sets the current record's "Mouvementbanciare" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseInstrumentpaiment extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('instrumentpaiment');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'instrumentpaiment_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('refinstrument', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Mouvementbanciare', array(
             'local' => 'id',
             'foreign' => 'id_instrument'));
    }
}