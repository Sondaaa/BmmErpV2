<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Gouvernera', 'doctrine');

/**
 * BaseGouvernera
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $gouvernera
 * @property integer $id_pays
 * @property Doctrine_Collection $Adresse
 * @property Pays $Pays
 * @property Doctrine_Collection $Agents
 * @property Doctrine_Collection $Adressefrs
 * @property Doctrine_Collection $Magasin
 * @property Doctrine_Collection $Immobilisation
 * @property Doctrine_Collection $Expdest
 * @property Doctrine_Collection $Societe
 * @property Doctrine_Collection $Fournisseur
 * @property Doctrine_Collection $Emplacement
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getGouvernera()     Returns the current record's "gouvernera" value
 * @method integer             getIdPays()         Returns the current record's "id_pays" value
 * @method Doctrine_Collection getAdresse()        Returns the current record's "Adresse" collection
 * @method Pays                getPays()           Returns the current record's "Pays" value
 * @method Doctrine_Collection getAgents()         Returns the current record's "Agents" collection
 * @method Doctrine_Collection getAdressefrs()     Returns the current record's "Adressefrs" collection
 * @method Doctrine_Collection getMagasin()        Returns the current record's "Magasin" collection
 * @method Doctrine_Collection getImmobilisation() Returns the current record's "Immobilisation" collection
 * @method Doctrine_Collection getExpdest()        Returns the current record's "Expdest" collection
 * @method Doctrine_Collection getSociete()        Returns the current record's "Societe" collection
 * @method Doctrine_Collection getFournisseur()    Returns the current record's "Fournisseur" collection
 * @method Doctrine_Collection getEmplacement()    Returns the current record's "Emplacement" collection
 * @method Gouvernera          setId()             Sets the current record's "id" value
 * @method Gouvernera          setGouvernera()     Sets the current record's "gouvernera" value
 * @method Gouvernera          setIdPays()         Sets the current record's "id_pays" value
 * @method Gouvernera          setAdresse()        Sets the current record's "Adresse" collection
 * @method Gouvernera          setPays()           Sets the current record's "Pays" value
 * @method Gouvernera          setAgents()         Sets the current record's "Agents" collection
 * @method Gouvernera          setAdressefrs()     Sets the current record's "Adressefrs" collection
 * @method Gouvernera          setMagasin()        Sets the current record's "Magasin" collection
 * @method Gouvernera          setImmobilisation() Sets the current record's "Immobilisation" collection
 * @method Gouvernera          setExpdest()        Sets the current record's "Expdest" collection
 * @method Gouvernera          setSociete()        Sets the current record's "Societe" collection
 * @method Gouvernera          setFournisseur()    Sets the current record's "Fournisseur" collection
 * @method Gouvernera          setEmplacement()    Sets the current record's "Emplacement" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseGouvernera extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('gouvernera');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'gouvernera_id',
             'length' => 4,
             ));
        $this->hasColumn('gouvernera', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_pays', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Adresse', array(
             'local' => 'id',
             'foreign' => 'id_couvernera'));

        $this->hasOne('Pays', array(
             'local' => 'id_pays',
             'foreign' => 'id'));

        $this->hasMany('Agents', array(
             'local' => 'id',
             'foreign' => 'id_gouvn'));

        $this->hasMany('Adressefrs', array(
             'local' => 'id',
             'foreign' => 'id_gouv'));

        $this->hasMany('Magasin', array(
             'local' => 'id',
             'foreign' => 'id_gouvernera'));

        $this->hasMany('Immobilisation', array(
             'local' => 'id',
             'foreign' => 'id_gouvernera'));

        $this->hasMany('Expdest', array(
             'local' => 'id',
             'foreign' => 'id_gouvernera'));

        $this->hasMany('Societe', array(
             'local' => 'id',
             'foreign' => 'id_gouvernera'));

        $this->hasMany('Fournisseur', array(
             'local' => 'id',
             'foreign' => 'id_gouv'));

        $this->hasMany('Emplacement', array(
             'local' => 'id',
             'foreign' => 'id_gouvernera'));
    }
}