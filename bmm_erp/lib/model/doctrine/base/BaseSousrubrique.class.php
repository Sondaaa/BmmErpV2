<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Sousrubrique', 'doctrine');

/**
 * BaseSousrubrique
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $code
 * @property string $libelle
 * @property integer $id_rubrique
 * @property Rubriqueformation $Rubriqueformation
 * @property Doctrine_Collection $Planing
 * @property Doctrine_Collection $Ristourne
 * @property Doctrine_Collection $Baserustourne
 * @property Doctrine_Collection $Regroupementtheme
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getCode()              Returns the current record's "code" value
 * @method string              getLibelle()           Returns the current record's "libelle" value
 * @method integer             getIdRubrique()        Returns the current record's "id_rubrique" value
 * @method Rubriqueformation   getRubriqueformation() Returns the current record's "Rubriqueformation" value
 * @method Doctrine_Collection getPlaning()           Returns the current record's "Planing" collection
 * @method Doctrine_Collection getModalitedecalcul()  Returns the current record's "Modalitedecalcul" collection
 * 
 * @method Doctrine_Collection getRistourne()         Returns the current record's "Ristourne" collection
 * @method Doctrine_Collection getBaserustourne()     Returns the current record's "Baserustourne" collection
 * @method Doctrine_Collection getRegroupementtheme() Returns the current record's "Regroupementtheme" collection
 * @method Sousrubrique        setId()                Sets the current record's "id" value
 * @method Sousrubrique        setCode()              Sets the current record's "code" value
 * @method Sousrubrique        setLibelle()           Sets the current record's "libelle" value
 * @method Sousrubrique        setIdRubrique()        Sets the current record's "id_rubrique" value
 * @method Sousrubrique        setRubriqueformation() Sets the current record's "Rubriqueformation" value
 * @method Sousrubrique        setPlaning()           Sets the current record's "Planing" collection
 * @method Sousrubrique        setModalitedecalcul()  Sets the current record's "Modalitedecalcul" collection
 * @method Sousrubrique        setRistourne()         Sets the current record's "Ristourne" collection
 * @method Sousrubrique        setBaserustourne()     Sets the current record's "Baserustourne" collection
 * @method Sousrubrique        setRegroupementtheme() Sets the current record's "Regroupementtheme" collection
 * 
 * @package    PhpProjectTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSousrubrique extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sousrubrique');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'sousrubrique_id',
             'length' => 4,
             ));
        $this->hasColumn('code', 'integer', 4, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_rubrique', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Rubriqueformation', array(
             'local' => 'id_rubrique',
             'foreign' => 'id'));

        $this->hasMany('Planing', array(
             'local' => 'id',
             'foreign' => 'id_sousrubriique'));

        $this->hasMany('Ristourne', array(
             'local' => 'id',
             'foreign' => 'id_sousrubrique'));

        $this->hasMany('Baserustourne', array(
             'local' => 'id',
             'foreign' => 'id_sousrubrique'));

        $this->hasMany('Regroupementtheme', array(
             'local' => 'id',
             'foreign' => 'id_sousrubrique'));
         $this->hasMany('Modalitedecalcul', array(
             'local' => 'id',
             'foreign' => 'id_sousrubrique'));
        
    }
}