<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Maquette', 'doctrine');

/**
 * BaseMaquette
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $libelle
 * @property date $date
 * @property integer $id_journal
 * @property integer $id_naturepiece
 * @property integer $id_user
 * @property Journalcomptable $Journalcomptable
 * @property Naturepiece $Naturepiece
 * @property Utilisateur $Utilisateur
 * @property Doctrine_Collection $Lignemaquette
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getCode()             Returns the current record's "code" value
 * @method string              getLibelle()          Returns the current record's "libelle" value
 * @method date                getDate()             Returns the current record's "date" value
 * @method integer             getIdJournal()        Returns the current record's "id_journal" value
 * @method integer             getIdNaturepiece()    Returns the current record's "id_naturepiece" value
 * @method integer             getIdUser()           Returns the current record's "id_user" value
 * @method Journalcomptable    getJournalcomptable() Returns the current record's "Journalcomptable" value
 * @method Naturepiece         getNaturepiece()      Returns the current record's "Naturepiece" value
 * @method Utilisateur         getUtilisateur()      Returns the current record's "Utilisateur" value
 * @method Doctrine_Collection getLignemaquette()    Returns the current record's "Lignemaquette" collection
 * @method Maquette            setId()               Sets the current record's "id" value
 * @method Maquette            setCode()             Sets the current record's "code" value
 * @method Maquette            setLibelle()          Sets the current record's "libelle" value
 * @method Maquette            setDate()             Sets the current record's "date" value
 * @method Maquette            setIdJournal()        Sets the current record's "id_journal" value
 * @method Maquette            setIdNaturepiece()    Sets the current record's "id_naturepiece" value
 * @method Maquette            setIdUser()           Sets the current record's "id_user" value
 * @method Maquette            setJournalcomptable() Sets the current record's "Journalcomptable" value
 * @method Maquette            setNaturepiece()      Sets the current record's "Naturepiece" value
 * @method Maquette            setUtilisateur()      Sets the current record's "Utilisateur" value
 * @method Maquette            setLignemaquette()    Sets the current record's "Lignemaquette" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMaquette extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('maquette');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'maquette_id',
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 20,
             ));
        $this->hasColumn('libelle', 'string', 225, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 225,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_journal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_naturepiece', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Journalcomptable', array(
             'local' => 'id_journal',
             'foreign' => 'id'));

        $this->hasOne('Naturepiece', array(
             'local' => 'id_naturepiece',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur', array(
             'local' => 'id_user',
             'foreign' => 'id'));

        $this->hasMany('Lignemaquette', array(
             'local' => 'id',
             'foreign' => 'id_maquette'));
    }
}