<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Demandeprivilege', 'doctrine');

/**
 * BaseDemandeprivilege
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $typedoc
 * @property string $objet
 * @property string $id_objet
 * @property string $description
 * @property integer $id_userdemande
 * @property string $etat
 * @property boolean $valide
 * @property timestamp $datevalidation
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Utilisateur $Utilisateur
 * 
 * @method integer          getId()             Returns the current record's "id" value
 * @method string           getTypedoc()        Returns the current record's "typedoc" value
 * @method string           getObjet()          Returns the current record's "objet" value
 * @method string           getIdObjet()        Returns the current record's "id_objet" value
 * @method string           getDescription()    Returns the current record's "description" value
 * @method integer          getIdUserdemande()  Returns the current record's "id_userdemande" value
 * @method string           getEtat()           Returns the current record's "etat" value
 * @method boolean          getValide()         Returns the current record's "valide" value
 * @method timestamp        getDatevalidation() Returns the current record's "datevalidation" value
 * @method timestamp        getCreatedAt()      Returns the current record's "created_at" value
 * @method timestamp        getUpdatedAt()      Returns the current record's "updated_at" value
 * @method Utilisateur      getUtilisateur()    Returns the current record's "Utilisateur" value
 * @method Demandeprivilege setId()             Sets the current record's "id" value
 * @method Demandeprivilege setTypedoc()        Sets the current record's "typedoc" value
 * @method Demandeprivilege setObjet()          Sets the current record's "objet" value
 * @method Demandeprivilege setIdObjet()        Sets the current record's "id_objet" value
 * @method Demandeprivilege setDescription()    Sets the current record's "description" value
 * @method Demandeprivilege setIdUserdemande()  Sets the current record's "id_userdemande" value
 * @method Demandeprivilege setEtat()           Sets the current record's "etat" value
 * @method Demandeprivilege setValide()         Sets the current record's "valide" value
 * @method Demandeprivilege setDatevalidation() Sets the current record's "datevalidation" value
 * @method Demandeprivilege setCreatedAt()      Sets the current record's "created_at" value
 * @method Demandeprivilege setUpdatedAt()      Sets the current record's "updated_at" value
 * @method Demandeprivilege setUtilisateur()    Sets the current record's "Utilisateur" value
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDemandeprivilege extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('demandeprivilege');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'demandeprivilege_id',
             'length' => 4,
             ));
        $this->hasColumn('typedoc', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('objet', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_objet', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_userdemande', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('etat', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('valide', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('datevalidation', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur', array(
             'local' => 'id_userdemande',
             'foreign' => 'id'));
    }
}