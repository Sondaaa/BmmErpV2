<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rapportcontrole', 'doctrine');

/**
 * BaseRapportcontrole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $datecreation
 * @property integer $id_chantiercontrole
 * @property integer $id_projet
 * @property integer $id_naturetravaux
 * @property decimal $total
 * @property string $observation
 * @property integer $id_servicecontrole
 * @property Chantiercontrole $Chantiercontrole
 * @property Projet $Projet
 * @property Naturetravaux $Naturetravaux
 * @property Servicecontrole $Servicecontrole
 * @property Doctrine_Collection $Lignerapportcontrole
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method date                getDatecreation()         Returns the current record's "datecreation" value
 * @method integer             getIdChantiercontrole()   Returns the current record's "id_chantiercontrole" value
 * @method integer             getIdProjet()             Returns the current record's "id_projet" value
 * @method integer             getIdNaturetravaux()      Returns the current record's "id_naturetravaux" value
 * @method decimal             getTotal()                Returns the current record's "total" value
 * @method string              getObservation()          Returns the current record's "observation" value
 * @method integer             getIdServicecontrole()    Returns the current record's "id_servicecontrole" value
 * @method Chantiercontrole    getChantiercontrole()     Returns the current record's "Chantiercontrole" value
 * @method Projet              getProjet()               Returns the current record's "Projet" value
 * @method Naturetravaux       getNaturetravaux()        Returns the current record's "Naturetravaux" value
 * @method Servicecontrole     getServicecontrole()      Returns the current record's "Servicecontrole" value
 * @method Doctrine_Collection getLignerapportcontrole() Returns the current record's "Lignerapportcontrole" collection
 * @method Rapportcontrole     setId()                   Sets the current record's "id" value
 * @method Rapportcontrole     setDatecreation()         Sets the current record's "datecreation" value
 * @method Rapportcontrole     setIdChantiercontrole()   Sets the current record's "id_chantiercontrole" value
 * @method Rapportcontrole     setIdProjet()             Sets the current record's "id_projet" value
 * @method Rapportcontrole     setIdNaturetravaux()      Sets the current record's "id_naturetravaux" value
 * @method Rapportcontrole     setTotal()                Sets the current record's "total" value
 * @method Rapportcontrole     setObservation()          Sets the current record's "observation" value
 * @method Rapportcontrole     setIdServicecontrole()    Sets the current record's "id_servicecontrole" value
 * @method Rapportcontrole     setChantiercontrole()     Sets the current record's "Chantiercontrole" value
 * @method Rapportcontrole     setProjet()               Sets the current record's "Projet" value
 * @method Rapportcontrole     setNaturetravaux()        Sets the current record's "Naturetravaux" value
 * @method Rapportcontrole     setServicecontrole()      Sets the current record's "Servicecontrole" value
 * @method Rapportcontrole     setLignerapportcontrole() Sets the current record's "Lignerapportcontrole" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRapportcontrole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rapportcontrole');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'rapportcontrole_id',
             'length' => 4,
             ));
        $this->hasColumn('datecreation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_chantiercontrole', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_projet', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_naturetravaux', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('total', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_servicecontrole', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Chantiercontrole', array(
             'local' => 'id_chantiercontrole',
             'foreign' => 'id'));

        $this->hasOne('Projet', array(
             'local' => 'id_projet',
             'foreign' => 'id'));

        $this->hasOne('Naturetravaux', array(
             'local' => 'id_naturetravaux',
             'foreign' => 'id'));

        $this->hasOne('Servicecontrole', array(
             'local' => 'id_servicecontrole',
             'foreign' => 'id'));

        $this->hasMany('Lignerapportcontrole', array(
             'local' => 'id',
             'foreign' => 'id_rapportcontrole'));
    }
}