<?php

// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Dossiercomptable', 'doctrine');

/**
 * BaseDossiercomptable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $code
 * @property string $raisonsociale
 * @property string $telephoneun
 * @property string $telephonedeux
 * @property string $fax
 * @property string $email
 * @property string $matriculefiscale
 * @property string $registrecommerce
 * @property date $datedebutouverture
 * @property date $datecloture
 * @property integer $nombrechiffrenumerocompte
 * @property integer $nombrechiffreapresvirgule
 * @property date $datecreationentreprise
 * @property date $datefinouverture
 * @property integer $id_devise
 * @property integer $id_formejuridique
 * @property integer $id_adresse
 * @property integer $id_secteuractivite
 * @property integer $tauxaccidentcotisation
 * @property integer $id_activite
 * @property integer $id_user
 * @property integer $id_lignecontribition
 * @property Lignecontribitionsociale $Lignecontribitionsociale
 * @property integer $id_compteattente
 * @property integer $id_comptevente
 * @property integer $id_compteachat
 * @property boolean $archive
 * @property integer $id_exercice
 * @property integer $tauxtfp
 * @property integer $tauxfoprolos
 * @property integer $id_typeregime
 * @property date $dateentreenproduction
 * @property date $datefinavantage
 * @property integer $nbravantage
 * @property string $calculheuresupp
 * @property boolean $qualificationcnss
 * @property boolean $situationprofess
  * @property boolean $etat
 * @property boolean $dateembauche
 * @property boolean $tfp
 * @property boolean $foprolos
 * @property integer $id_contribution
 * @property boolean $rib
 * @property boolean $etat
 * @property boolean $soldeconge
 * @property boolean $periode
 * @property boolean $mntlibelleprime
 * @property boolean $lignessp
 * @property boolean $editgrille
 * @property boolean $reparation
 * @property boolean $controlerevenue
 * @property boolean $journalpaie
 * @property boolean $assurancejouralpaie
 * @property Activitetiers $Activitetiers
 * @property Adresse $Adresse
 * @property Plancomptable $CompteAttente
 * @property Plancomptable $CompteAchat
 * @property Plancomptable $CompteVente
 * @property Regimehoraire $Regimehoraire
 * @property Devise $Devise
 * @property Exercice $Exercice
 * @property Formejuridique $Formejuridique
 * @property Secteuractivite $Secteuractivite
 * @property Utilisateur $Utilisateur
 * @property Regimehoraire $Regimehoraire
 * @property Doctrine_Collection $Dossierexercice
 * @property Doctrine_Collection $Journalcomptable
 * @property Doctrine_Collection $Plandossiercomptable
 * @property Doctrine_Collection $Ligneregimehoraire
 * @property Doctrine_Collection $Facturecomptableachat
 * @property Doctrine_Collection $Facturecomptablevente
 * 
 * @method integer             getId()                        Returns the current record's "id" value
 * @method date                getDate()                      Returns the current record's "date" value
 * @method string              getCode()                      Returns the current record's "code" value
 * @method string              getRaisonsociale()             Returns the current record's "raisonsociale" value
 * @method string              getTelephoneun()               Returns the current record's "telephoneun" value
 * @method string              getTelephonedeux()             Returns the current record's "telephonedeux" value
 * @method string              getFax()                       Returns the current record's "fax" value
 * @method string              getEmail()                     Returns the current record's "email" value
 * @method string              getMatriculefiscale()          Returns the current record's "matriculefiscale" value
 * @method string              getRegistrecommerce()          Returns the current record's "registrecommerce" value
 * @method integer             getIdLignecontribition()       Returns the current record's "id_lignecontribition" value
 * @method date                getDatedebutouverture()        Returns the current record's "datedebutouverture" value
 * @method date                getDatecloture()               Returns the current record's "datecloture" value
 * @method integer             getNombrechiffrenumerocompte() Returns the current record's "nombrechiffrenumerocompte" value
 * @method integer             getNombrechiffreapresvirgule() Returns the current record's "nombrechiffreapresvirgule" value
 
 * @method date                getDatecreationentreprise()    Returns the current record's "datecreationentreprise" value
 * @method date                getDatefinouverture()          Returns the current record's "datefinouverture" value
 * @method integer             getIdDevise()                  Returns the current record's "id_devise" value
 * @method integer             getIdFormejuridique()          Returns the current record's "id_formejuridique" value
 * @method integer             getIdAdresse()                 Returns the current record's "id_adresse" value
 * @method integer             getIdSecteuractivite()         Returns the current record's "id_secteuractivite" value
 * @method decimal             getTauxaccidentcotisation()    Returns the current record's "tauxaccidentcotisation" value
 * @method integer             getIdActivite()                Returns the current record's "id_activite" value
 * @method integer             getIdUser()                    Returns the current record's "id_user" value
 * @method integer             getIdCompteattente()           Returns the current record's "id_compteattente" value
 * @method integer             getIdComptevente()             Returns the current record's "id_comptevente" value
 * @method integer             getIdCompteachat()             Returns the current record's "id_compteachat" value
 * @method boolean             getArchive()                   Returns the current record's "archive" value
 * @method Lignecontribitionsociale getLignecontribitionsociale()  Returns the current record's "Lignecontribitionsociale" value
 * @method integer             getIdExercice()                Returns the current record's "id_exercice" value
 * @method integer             getTauxtfp()                   Returns the current record's "tauxtfp" value
 * @method integer             getTauxfoprolos()              Returns the current record's "tauxfoprolos" value
 * @method integer             getIdTyperegime()              Returns the current record's "id_typeregime" value
 * @method date                getDateentreenproduction()     Returns the current record's "dateentreenproduction" value
 * @method date                getDatefinavantage()           Returns the current record's "datefinavantage" value
 * @method integer             getNbravantage()               Returns the current record's "nbravantage" value
 * @method string              getCalculheuresupp()           Returns the current record's "calculheuresupp" value
 * @method boolean             getQualificationcnss()         Returns the current record's "qualificationcnss" value
 * @method boolean             getSituationprofess()          Returns the current record's "situationprofess" value
 * @method boolean             getDateembauche()              Returns the current record's "dateembauche" value
 * @method boolean             getRib()                       Returns the current record's "rib" value
 * @method boolean             getSoldeconge()                Returns the current record's "soldeconge" value
 * @method boolean             getPeriode()                   Returns the current record's "periode" value
 * @method boolean             getMntlibelleprime()           Returns the current record's "mntlibelleprime" value
 * @method boolean             getLignessp()                  Returns the current record's "lignessp" value
 * @method boolean             getEditgrille()                Returns the current record's "editgrille" value
 * @method boolean             getReparation()                Returns the current record's "reparation" value
 * @method boolean             getControlerevenue()           Returns the current record's "controlerevenue" value
 * @method boolean             getJournalpaie()               Returns the current record's "journalpaie" value
 * @method boolean             getAssurancejouralpaie()       Returns the current record's "assurancejouralpaie" value
 * @method Activitetiers       getActivitetiers()             Returns the current record's "Activitetiers" value
 * @method Adresse             getAdresse()                   Returns the current record's "Adresse" value
 * @method Plancomptable       getCompteAttente()             Returns the current record's "CompteAttente" value
 * @method Plancomptable       getCompteVente()               Returns the current record's "CompteVente" value
 * @method Plancomptable       getCompteAchat()               Returns the current record's "CompteAchat" value
 * @method Devise              getDevise()                    Returns the current record's "Devise" value
 * @method boolean             getTfp()                       Returns the current record's "tfp" value
 * @method boolean             getFoprolos()                  Returns the current record's "foprolos" value
 * @method integer             getIdContribution()            Returns the current record's "id_contribution" value
 * @method Exercice            getExercice()                  Returns the current record's "Exercice" value
 * @method Formejuridique      getFormejuridique()            Returns the current record's "Formejuridique" value
 * @method Secteuractivite     getSecteuractivite()           Returns the current record's "Secteuractivite" value
 * @method Utilisateur         getUtilisateur()               Returns the current record's "Utilisateur" value
 * @method boolean                  getEtat()                      Returns the current record's "etat" value
 * @method Regimehoraire       getRegimehoraire()             Returns the current record's "Regimehoraire" value
 * @method Doctrine_Collection getDossierexercice()           Returns the current record's "Dossierexercice" collection
 * @method Doctrine_Collection getJournalcomptable()          Returns the current record's "Journalcomptable" collection
 * @method Doctrine_Collection getPlandossiercomptable()      Returns the current record's "Plandossiercomptable" collection
 * @method Dossiercomptable    setIdLignecontribition()       Sets the current record's "id_lignecontribition" value
 * @method Dossiercomptable    setLignecontribitionsociale()  Sets the current record's "Lignecontribitionsociale" value
 * @method Doctrine_Collection getFacturecomptableachat()     Returns the current record's "Facturecomptableachat" collection
 * @method Doctrine_Collection getFacturecomptablevente()     Returns the current record's "Facturecomptablevente" collection
 * @method Contribitionpatronale getContribitionpatronale()   Returns the current record's "Contribitionpatronale" value
 * @method Dossiercomptable    setId()                        Sets the current record's "id" value
 * @method Dossiercomptable    setDate()                      Sets the current record's "date" value
 * @method Dossiercomptable    setCode()                      Sets the current record's "code" value
 * @method Dossiercomptable    setRaisonsociale()             Sets the current record's "raisonsociale" value
 * @method Dossiercomptable    setTelephoneun()               Sets the current record's "telephoneun" value
 * @method Dossiercomptable    setTelephonedeux()             Sets the current record's "telephonedeux" value
 * @method Dossiercomptable    setFax()                       Sets the current record's "fax" value
 * @method Dossiercomptable    setEmail()                     Sets the current record's "email" value
 * @method Dossiercomptable    setMatriculefiscale()          Sets the current record's "matriculefiscale" value
 
 * @method Dossiercomptable    setRegistrecommerce()          Sets the current record's "registrecommerce" value
 * @method Dossiercomptable    setDatedebutouverture()        Sets the current record's "datedebutouverture" value
 * @method Dossiercomptable    setDatecloture()               Sets the current record's "datecloture" value
 * @method Dossiercomptable    setNombrechiffrenumerocompte() Sets the current record's "nombrechiffrenumerocompte" value
 * @method Dossiercomptable    setNombrechiffreapresvirgule() Sets the current record's "nombrechiffreapresvirgule" value
 * @method Dossiercomptable    setDatecreationentreprise()    Sets the current record's "datecreationentreprise" value
 * @method Dossiercomptable    setDatefinouverture()          Sets the current record's "datefinouverture" value
 * @method Dossiercomptable         setEtat()                      Sets the current record's "etat" value
 * @method Dossiercomptable    setIdDevise()                  Sets the current record's "id_devise" value
 * @method Dossiercomptable    setIdFormejuridique()          Sets the current record's "id_formejuridique" value
 * @method Dossiercomptable    setIdAdresse()                 Sets the current record's "id_adresse" value
 * @method Dossiercomptable    setIdSecteuractivite()         Sets the current record's "id_secteuractivite" value
 * @method Dossiercomptable    setIdActivite()                Sets the current record's "id_activite" value
 * @method Dossiercomptable    setIdUser()                    Sets the current record's "id_user" value
 * @method Dossiercomptable    setIdCompteattente()           Sets the current record's "id_compteattente" value
 * @method Dossiercomptable    setTauxaccidentcotisation()    Sets the current record's "tauxaccidentcotisation" value
  * @method Dossiercomptable         setEtat()                      Sets the current record's "etat" value
 * @method Dossiercomptable    setIdComptevente()             Sets the current record's "id_comptevente" value
 * @method Dossiercomptable    setIdCompteachat()             Sets the current record's "id_compteachat" value
 * @method Dossiercomptable    setArchive()                   Sets the current record's "archive" value
 * @method Dossiercomptable    setIdExercice()                Sets the current record's "id_exercice" value
 * @method Dossiercomptable    setTauxtfp()                   Sets the current record's "tauxtfp" value
 * @method Dossiercomptable    setTauxfoprolos()              Sets the current record's "tauxfoprolos" value
 * @method Dossiercomptable    setIdTyperegime()              Sets the current record's "id_typeregime" value
 * @method Dossiercomptable    setDateentreenproduction()     Sets the current record's "dateentreenproduction" value
 * @method Dossiercomptable    setDatefinavantage()           Sets the current record's "datefinavantage" value
 * @method Dossiercomptable    setNbravantage()               Sets the current record's "nbravantage" value
 * @method Dossiercomptable    setCalculheuresupp()           Sets the current record's "calculheuresupp" value
 * @method Dossiercomptable    setQualificationcnss()         Sets the current record's "qualificationcnss" value
 * @method Dossiercomptable    setSituationprofess()          Sets the current record's "situationprofess" value
 * @method Dossiercomptable    setDateembauche()              Sets the current record's "dateembauche" value
 * @method Dossiercomptable    setControlerevenue()           Sets the current record's "controlerevenue" value
 * @method Dossiercomptable    setRib()                       Sets the current record's "rib" value
 * @method Dossiercomptable    setSoldeconge()                Sets the current record's "soldeconge" value
 * @method Dossiercomptable     setTfp()                       Sets the current record's "tfp" value
 * @method Dossiercomptable    setFoprolos()                  Sets the current record's "foprolos" value
 * @method Dossiercomptable    setIdContribution()            Sets the current record's "id_contribution" value
 * @method Dossiercomptable    setPeriode()                   Sets the current record's "periode" value
 * @method Dossiercomptable    setMntlibelleprime()           Sets the current record's "mntlibelleprime" value
 * @method Dossiercomptable    setLignessp()                  Sets the current record's "lignessp" value
 * @method Dossiercomptable    setEditgrille()                Sets the current record's "editgrille" value
 * @method Dossiercomptable    setReparation()                Sets the current record's "reparation" value
 * @method Dossiercomptable    setJournalpaie()               Sets the current record's "journalpaie" value
 * @method Dossiercomptable    setAssurancejouralpaie()       Sets the current record's "assurancejouralpaie" value
 * @method Dossiercomptable    setActivitetiers()             Sets the current record's "Activitetiers" value
 * @method Dossiercomptable    setAdresse()                   Sets the current record's "Adresse" value
 * @method Dossiercomptable    setPlancomptable()             Sets the current record's "Plancomptable" value
 * @method Dossiercomptable    setPlancomptable4()            Sets the current record's "Plancomptable_4" value
 * @method Dossiercomptable    setPlancomptable5()            Sets the current record's "Plancomptable_5" value
 * @method Dossiercomptable    setLigneregimehoraire()        Sets the current record's "Ligneregimehoraire" collection
 * @method Dossiercomptable    setDevise()                    Sets the current record's "Devise" value
 * @method Dossiercomptable    setExercice()                  Sets the current record's "Exercice" value
 * @method Dossiercomptable    setFormejuridique()            Sets the current record's "Formejuridique" value
 * @method Dossiercomptable    setSecteuractivite()           Sets the current record's "Secteuractivite" value
 * @method Dossiercomptable    setUtilisateur()               Sets the current record's "Utilisateur" value
 * @method Dossiercomptable    setRegimehoraire()             Sets the current record's "Regimehoraire" value
 * @method Dossiercomptable    setDossierexercice()           Sets the current record's "Dossierexercice" collection
 * @method Dossiercomptable    setJournalcomptable()          Sets the current record's "Journalcomptable" collection
 * @method Dossiercomptable    setPlandossiercomptable()      Sets the current record's "Plandossiercomptable" collection
 * @method Dossiercomptable    setFacturecomptableachat()     Sets the current record's "Facturecomptableachat" collection
 * @method Dossiercomptable    setFacturecomptablevente()     Sets the current record's "Facturecomptablevente" collection
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDossiercomptable extends sfDoctrineRecord {

    public function setTableDefinition() {
        $this->setTableName('dossiercomptable');
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => true,
            'sequence' => 'dossiercomptable_id',
            'length' => 4,
        ));
        $this->hasColumn('date', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => true,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('code', 'string', 20, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 20,
        ));
        $this->hasColumn('raisonsociale', 'string', 200, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 200,
        ));
        $this->hasColumn('telephoneun', 'string', 50, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 50,
        ));
        $this->hasColumn('telephonedeux', 'string', 20, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 20,
        ));
        $this->hasColumn('fax', 'string', 20, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 20,
        ));
        $this->hasColumn('email', 'string', 70, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 70,
        ));
        $this->hasColumn('matriculefiscale', 'string', 70, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 70,
        ));
        $this->hasColumn('registrecommerce', 'string', 70, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 70,
        ));
        $this->hasColumn('datedebutouverture', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('datecloture', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('nombrechiffrenumerocompte', 'integer', 2, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => true,
            'default' => '8',
            'primary' => false,
            'length' => 2,
        ));
        $this->hasColumn('nombrechiffreapresvirgule', 'integer', 2, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => true,
            'default' => '8',
            'primary' => false,
            'length' => 2,
        ));
        $this->hasColumn('datecreationentreprise', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('datefinouverture', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('id_devise', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_formejuridique', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_adresse', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_secteuractivite', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_activite', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_user', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_compteattente', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_comptevente', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_compteachat', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('archive', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'default' => 'false',
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('id_exercice', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('tauxtfp', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('tauxfoprolos', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_typeregime', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('dateentreenproduction', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('datefinavantage', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('nbravantage', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('calculheuresupp', 'string', 255, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 255,
        ));
        $this->hasColumn('qualificationcnss', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('situationprofess', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('dateembauche', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('rib', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('soldeconge', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('periode', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('mntlibelleprime', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('lignessp', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('editgrille', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('reparation', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('controlerevenue', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('journalpaie', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('assurancejouralpaie', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('tfp', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('foprolos', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('id_contribution', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('tauxaccidentcotisation', 'decimal', 18, array(
            'type' => 'decimal',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 18,
        ));
        $this->hasColumn('id_lignecontribition', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
		 $this->hasColumn('etat', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
			 'default' => 'true',
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp() {
        parent::setUp();
        $this->hasOne('Activitetiers', array(
            'local' => 'id_activite',
            'foreign' => 'id'));

        $this->hasOne('Adresse', array(
            'local' => 'id_adresse',
            'foreign' => 'id'));

        $this->hasOne('Plancomptable as CompteAchat', array(
            'local' => 'id_compteachat',
            'foreign' => 'id'));

        $this->hasOne('Plancomptable as CompteAttente', array(
            'local' => 'id_compteattente',
            'foreign' => 'id'));

        $this->hasOne('Plancomptable as CompteVente', array(
            'local' => 'id_comptevente',
            'foreign' => 'id'));

        $this->hasOne('Devise', array(
            'local' => 'id_devise',
            'foreign' => 'id'));

        $this->hasOne('Exercice', array(
            'local' => 'id_exercice',
            'foreign' => 'id'));
        $this->hasOne('Lignecontribitionsociale', array(
            'local' => 'id_lignecontribition',
            'foreign' => 'id'));


        $this->hasOne('Formejuridique', array(
            'local' => 'id_formejuridique',
            'foreign' => 'id'));

        $this->hasOne('Secteuractivite', array(
            'local' => 'id_secteuractivite',
            'foreign' => 'id'));
        $this->hasOne('Contribitionpatronale', array(
            'local' => 'id_contribution',
            'foreign' => 'id'));

        $this->hasOne('Utilisateur', array(
            'local' => 'id_user',
            'foreign' => 'id'));

        $this->hasOne('Regimehoraire', array(
            'local' => 'id_typeregime',
            'foreign' => 'id'));

        $this->hasMany('Dossierexercice', array(
            'local' => 'id',
            'foreign' => 'id_dossier',
            'OnDelete'=>'CASCADE'));

        $this->hasMany('Journalcomptable', array(
            'local' => 'id',
            'foreign' => 'id_dossier'));

        $this->hasMany('Plandossiercomptable', array(
            'local' => 'id',
            'foreign' => 'id_dossier'));

        $this->hasMany('Facturecomptableachat', array(
            'local' => 'id',
            'foreign' => 'id_dossier'));

        $this->hasMany('Facturecomptablevente', array(
            'local' => 'id',
            'foreign' => 'id_dossier'));
    }

}
