<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Referentielcomptable', 'doctrine');

/**
 * BaseReferentielcomptable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property string $url
 * @property integer $id_utilisateur
 * @property integer $id_dossier
 * @property string $standard
 * @property string $description
 * @property Utilisateur $Utilisateur
 * @property Dossiercomptable $Dossiercomptable
 * 
 * @method integer              getId()               Returns the current record's "id" value
 * @method string               getLibelle()          Returns the current record's "libelle" value
 * @method string               getUrl()              Returns the current record's "url" value
 * @method integer              getIdUtilisateur()    Returns the current record's "id_utilisateur" value
 * @method integer              getIdDossier()        Returns the current record's "id_dossier" value
 * @method string               getStandard()         Returns the current record's "standard" value
 * @method string               getDescription()      Returns the current record's "description" value
 * @method Utilisateur          getUtilisateur()      Returns the current record's "Utilisateur" value
 * @method Dossiercomptable     getDossiercomptable() Returns the current record's "Dossiercomptable" value
 * @method Referentielcomptable setId()               Sets the current record's "id" value
 * @method Referentielcomptable setLibelle()          Sets the current record's "libelle" value
 * @method Referentielcomptable setUrl()              Sets the current record's "url" value
 * @method Referentielcomptable setIdUtilisateur()    Sets the current record's "id_utilisateur" value
 * @method Referentielcomptable setIdDossier()        Sets the current record's "id_dossier" value
 * @method Referentielcomptable setStandard()         Sets the current record's "standard" value
 * @method Referentielcomptable setDescription()      Sets the current record's "description" value
 * @method Referentielcomptable setUtilisateur()      Sets the current record's "Utilisateur" value
 * @method Referentielcomptable setDossiercomptable() Sets the current record's "Dossiercomptable" value
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseReferentielcomptable extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('referentielcomptable');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'referentielcomptable_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('url', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_utilisateur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('standard', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Utilisateur', array(
             'local' => 'id_utilisateur',
             'foreign' => 'id'));

        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));
    }
}