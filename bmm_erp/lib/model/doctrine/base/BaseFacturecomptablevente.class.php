<?php

// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Facturecomptablevente', 'doctrine');

/**
 * BaseFacturecomptablevente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $reference
 * @property decimal $totalht
 * @property decimal $totaltva
 * @property decimal $timbre
 * @property decimal $totalttc
 * @property integer $id_dossier
 * @property date $dateimportation
 * @property integer $saisie
 * @property integer $id_facture
 * @property integer $id_client
 * @property integer $id_devise
 * @property integer $id_piececomptable
 * @property integer $numero
 * @property decimal $totalhtax
 * @property decimal $tfodec
 * @property Devise $Devise
 * @property Documentvente $Documentvente
 * @property Dossiercomptable $Dossiercomptable
 * @property Client $Client
 * @property Piececomptable $Piececomptable
 * @property Doctrine_Collection $Lignepiececomptable
 * @property Doctrine_Collection $Lignefacturecomptablevente
 * 
 * @method integer               getId()                         Returns the current record's "id" value
 * @method date                  getDate()                       Returns the current record's "date" value
 * @method string                getReference()                  Returns the current record's "reference" value
 * @method decimal               getTotalht()                    Returns the current record's "totalht" value
 * @method decimal               getTotaltva()                   Returns the current record's "totaltva" value
 * @method decimal               getTimbre()                     Returns the current record's "timbre" value
 * @method decimal               getTotalttc()                   Returns the current record's "totalttc" value
 * @method integer               getIdDossier()                  Returns the current record's "id_dossier" value
 * @method date                  getDateimportation()            Returns the current record's "dateimportation" value
 * @method integer               getSaisie()                     Returns the current record's "saisie" value
 * @method integer               getIdFacture()                  Returns the current record's "id_facture" value
 * @method integer               getIdClient()                   Returns the current record's "id_client" value
 * @method integer               getIdDevise()                   Returns the current record's "id_devise" value
 * @method integer               getIdPiececomptable()           Returns the current record's "id_piececomptable" value
 * @method integer               getNumero()                     Returns the current record's "numero" value
 * @method Devise                getDevise()                     Returns the current record's "Devise" value
 * @method Documentvente         getDocumentvente()              Returns the current record's "Documentvente" value
  * @method decimal               getTotalhtax()                  Returns the current record's "totalhtax" value
 * @method decimal               getTfodec()                     Returns the current record's "tfodec" value
 * @method Dossiercomptable      getDossiercomptable()           Returns the current record's "Dossiercomptable" value
 * @method Client                getClient()                     Returns the current record's "Client" value
 * @method Piececomptable        getPiececomptable()             Returns the current record's "Piececomptable" value
 * @method Doctrine_Collection   getLignepiececomptable()        Returns the current record's "Lignepiececomptable" collection
 * @method Doctrine_Collection   getLignefacturecomptablevente() Returns the current record's "Lignefacturecomptablevente" collection
 * @method Facturecomptablevente setId()                         Sets the current record's "id" value
 * @method Facturecomptablevente setDate()                       Sets the current record's "date" value
 * @method Facturecomptablevente setReference()                  Sets the current record's "reference" value
 * @method Facturecomptablevente setTotalht()                    Sets the current record's "totalht" value
 * @method Facturecomptablevente setTotaltva()                   Sets the current record's "totaltva" value
 * @method Facturecomptablevente setTimbre()                     Sets the current record's "timbre" value
 * @method Facturecomptablevente setTotalttc()                   Sets the current record's "totalttc" value
 * @method Facturecomptablevente setIdDossier()                  Sets the current record's "id_dossier" value
 * @method Facturecomptablevente setDateimportation()            Sets the current record's "dateimportation" value
 * @method Facturecomptablevente setSaisie()                     Sets the current record's "saisie" value
 * @method Facturecomptablevente setIdFacture()                  Sets the current record's "id_facture" value
 * @method Facturecomptablevente setIdClient()                   Sets the current record's "id_client" value
 * @method Facturecomptablevente setIdDevise()                   Sets the current record's "id_devise" value
 * @method Facturecomptablevente setIdPiececomptable()           Sets the current record's "id_piececomptable" value
 * @method Facturecomptableachat setNumero()                     Sets the current record's "numero" value
 * @method Facturecomptablevente setDevise()                     Sets the current record's "Devise" value
 * @method Facturecomptablevente setTotalhtax()                  Sets the current record's "totalhtax" value
 * @method Facturecomptablevente setTfodec()                     Sets the current record's "tfodec" value
 * @method Facturecomptablevente setDocumentvente()              Sets the current record's "Documentvente" value
 * @method Facturecomptablevente setDossiercomptable()           Sets the current record's "Dossiercomptable" value
 * @method Facturecomptablevente setClient()                     Sets the current record's "Client" value
 * @method Facturecomptablevente setPiececomptable()             Sets the current record's "Piececomptable" value
 * @method Facturecomptablevente setLignepiececomptable()        Sets the current record's "Lignepiececomptable" collection
 * @method Facturecomptablevente setLignefacturecomptablevente() Sets the current record's "Lignefacturecomptablevente" collection
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacturecomptablevente extends sfDoctrineRecord {

    public function setTableDefinition() {
        $this->setTableName('facturecomptablevente');
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => true,
            'sequence' => 'facturecomptablevente_id',
            'length' => 4,
        ));
        $this->hasColumn('date', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('reference', 'string', 100, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 100,
        ));
        $this->hasColumn('totalht', 'decimal', 18, array(
            'type' => 'decimal',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'default' => '0',
            'primary' => false,
            'length' => 18,
        ));
        $this->hasColumn('totaltva', 'decimal', 18, array(
            'type' => 'decimal',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 18,
        ));
        $this->hasColumn('timbre', 'decimal', 18, array(
            'type' => 'decimal',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 18,
        ));
        $this->hasColumn('totalttc', 'decimal', 18, array(
            'type' => 'decimal',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 18,
        ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('dateimportation', 'date', 25, array(
            'type' => 'date',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('saisie', 'integer', 2, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 2,
        ));
        $this->hasColumn('id_facture', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_client', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_devise', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_piececomptable', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('numero', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => false,
            'length' => 4,
        ));
		 $this->hasColumn('totalhtax', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('tfodec', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
    }

    public function setUp() {
        parent::setUp();
        $this->hasOne('Devise', array(
            'local' => 'id_devise',
            'foreign' => 'id'));

        $this->hasOne('Documentvente', array(
            'local' => 'id_facture',
            'foreign' => 'id'));

        $this->hasOne('Dossiercomptable', array(
            'local' => 'id_dossier',
            'foreign' => 'id'));

        $this->hasOne('Client', array(
            'local' => 'id_client',
            'foreign' => 'id'));

        $this->hasOne('Piececomptable', array(
            'local' => 'id_piececomptable',
            'foreign' => 'id'));

        $this->hasMany('Lignepiececomptable', array(
            'local' => 'id',
            'foreign' => 'id_facturevente'));

        $this->hasMany('Lignefacturecomptablevente', array(
            'local' => 'id',
            'foreign' => 'id_facturecomptablevente'));
    }

}
