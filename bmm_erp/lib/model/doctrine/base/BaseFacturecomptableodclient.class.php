<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Facturecomptableodclient', 'doctrine');

/**
 * BaseFacturecomptableodclient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $reference
 * @property decimal $totalht
 * @property decimal $totaltva
 * @property decimal $timbre
 * @property decimal $totalttc
 * @property integer $id_dossier
 * @property date $dateimportation
 * @property integer $saisie
 * @property integer $id_facture
 * @property integer $id_client
 * @property integer $id_devise
 * @property integer $id_piececomptable
 * @property integer $numero
 * @property integer $id_compteretenue
 * @property Piececomptable $Piececomptable
 * @property Client $Client
 * @property Dossiercomptable $Dossiercomptable
 * @property Devise $Devise
 * @property Plancomptable $Plancomptable
 * 
 * @method integer                  getId()                Returns the current record's "id" value
 * @method date                     getDate()              Returns the current record's "date" value
 * @method string                   getReference()         Returns the current record's "reference" value
 * @method decimal                  getTotalht()           Returns the current record's "totalht" value
 * @method decimal                  getTotaltva()          Returns the current record's "totaltva" value
 * @method decimal                  getTimbre()            Returns the current record's "timbre" value
 * @method decimal                  getTotalttc()          Returns the current record's "totalttc" value
 * @method integer                  getIdDossier()         Returns the current record's "id_dossier" value
 * @method date                     getDateimportation()   Returns the current record's "dateimportation" value
 * @method integer                  getSaisie()             Returns the current record's "saisie" value
 * @method integer                  getIdFacture()         Returns the current record's "id_facture" value
 * @method integer                  getIdClient()          Returns the current record's "id_client" value
 * @method integer                  getIdDevise()          Returns the current record's "id_devise" value
 * @method integer                  getIdPiececomptable()  Returns the current record's "id_piececomptable" value
 * @method integer                  getNumero()            Returns the current record's "numero" value
 * @method integer                  getIdCompteretenue()   Returns the current record's "id_compteretenue" value
 * @method Piececomptable           getPiececomptable()    Returns the current record's "Piececomptable" value
 * @method Client                   getClient()            Returns the current record's "Client" value
 * @method Dossiercomptable         getDossiercomptable()  Returns the current record's "Dossiercomptable" value
 * @method Devise                   getDevise()            Returns the current record's "Devise" value
 * @method Plancomptable            getPlancomptable()     Returns the current record's "Plancomptable" value
 * @method Facturecomptableodclient setId()                Sets the current record's "id" value
 * @method Facturecomptableodclient setDate()              Sets the current record's "date" value
 * @method Facturecomptableodclient setReference()         Sets the current record's "reference" value
 * @method Facturecomptableodclient setTotalht()           Sets the current record's "totalht" value
 * @method Facturecomptableodclient setTotaltva()          Sets the current record's "totaltva" value
 * @method Facturecomptableodclient setTimbre()            Sets the current record's "timbre" value
 * @method Facturecomptableodclient setTotalttc()          Sets the current record's "totalttc" value
 * @method Facturecomptableodclient setIdDossier()         Sets the current record's "id_dossier" value
 * @method Facturecomptableodclient setDateimportation()   Sets the current record's "dateimportation" value
 * @method Facturecomptableodclient setSaisie()             Sets the current record's "saisie" value
 * @method Facturecomptableodclient setIdFacture()         Sets the current record's "id_facture" value
 * @method Facturecomptableodclient setIdClient()          Sets the current record's "id_client" value
 * @method Facturecomptableodclient setIdDevise()          Sets the current record's "id_devise" value
 * @method Facturecomptableodclient setIdPiececomptable()  Sets the current record's "id_piececomptable" value
 * @method Facturecomptableodclient setNumero()            Sets the current record's "numero" value
 * @method Facturecomptableodclient setIdCompteretenue()   Sets the current record's "id_compteretenue" value
 * @method Facturecomptableodclient setPiececomptable()    Sets the current record's "Piececomptable" value
 * @method Facturecomptableodclient setClient()            Sets the current record's "Client" value
 * @method Facturecomptableodclient setDossiercomptable()  Sets the current record's "Dossiercomptable" value
 * @method Facturecomptableodclient setDevise()            Sets the current record's "Devise" value
 * @method Facturecomptableodclient setPlancomptable()     Sets the current record's "Plancomptable" value
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacturecomptableodclient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facturecomptableodclient');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'facturecomptableodclient_id',
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('totalht', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totaltva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('timbre', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totalttc', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dateimportation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('saisie', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('id_facture', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_client', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_devise', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_piececomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_compteretenue', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Piececomptable', array(
             'local' => 'id_piececomptable',
             'foreign' => 'id'));

        $this->hasOne('Client', array(
             'local' => 'id_client',
             'foreign' => 'id'));

        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Devise', array(
             'local' => 'id_devise',
             'foreign' => 'id'));

        $this->hasOne('Plancomptable', array(
             'local' => 'id_compteretenue',
             'foreign' => 'id'));
    }
}