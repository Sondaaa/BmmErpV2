<?php

// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Besoinsdeformation', 'doctrine');

/**
 * BaseBesoinsdeformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property string $besoins
 * @property string $competance
 * @property integer $annee
 * @property integer $id_contrat
 * @property integer $id_poste
 * @property integer $id_unite
 * @property Agents $Agents
 * @property Contrat $Contrat
 * @property Doctrine_Collection $Ligneplaning
 * @property Doctrine_Collection $Evaluation
 * @property Doctrine_Collection $Evaluation_3
 * 
 * @method integer             getId()           Returns the current record's "id" value
 * @method integer             getIdAgents()     Returns the current record's "id_agents" value
 * @method string              getBesoins()      Returns the current record's "besoins" value
 * @method string              getCompetance()   Returns the current record's "competance" value
 * @method integer             getAnnee()        Returns the current record's "annee" value
 * @method integer             getIdContrat()    Returns the current record's "id_contrat" value
 * @method Agents              getAgents()       Returns the current record's "Agents" value
 * @method Contrat             getContrat()      Returns the current record's "Contrat" value
 * @method Posterh             getPosterh()      Returns the current record's "Posterh" value
 * @method Unite               getUnite()        Returns the current record's "Unite" value
 * @method integer             getIdPoste()        Returns the current record's "id_poste" value
 * @method integer             getIdUnite()    Returns the current record's "id_unite" value
 * @method Doctrine_Collection getLigneplaning() Returns the current record's "Ligneplaning" collection
 * @method Doctrine_Collection getEvaluation()   Returns the current record's "Evaluation" collection
 * @method Doctrine_Collection getEvaluation3()  Returns the current record's "Evaluation_3" collection
 * @method Besoinsdeformation  setId()           Sets the current record's "id" value
 * @method Besoinsdeformation  setIdAgents()     Sets the current record's "id_agents" value
 * @method Besoinsdeformation  setBesoins()      Sets the current record's "besoins" value
 * @method Besoinsdeformation  setCompetance()   Sets the current record's "competance" value
 * @method Besoinsdeformation  setAnnee()        Sets the current record's "annee" value
 * @method Besoinsdeformation  setIdContrat()    Sets the current record's "id_contrat" value
 * @method Besoinsdeformation   setIdPoste()    Sets the current record's "id_poste" value
 * @method Besoinsdeformation   setIdUnite()    Sets the current record's "id_unite" value

 * @method Besoinsdeformation  setAgents()       Sets the current record's "Agents" value
 * @method Besoinsdeformation  setContrat()      Sets the current record's "Contrat" value
 * @method Besoinsdeformation  setPosterh()      Sets the current record's "Posterh" value
 * @method Besoinsdeformation  setUnite()        Sets the current record's "Unite" value

 * @method Besoinsdeformation  setLigneplaning() Sets the current record's "Ligneplaning" collection
 * @method Besoinsdeformation  setEvaluation()   Sets the current record's "Evaluation" collection
 * @method Besoinsdeformation  setEvaluation3()  Sets the current record's "Evaluation_3" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBesoinsdeformation extends sfDoctrineRecord {

    public function setTableDefinition() {
        $this->setTableName('besoinsdeformation');
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => true,
            'sequence' => 'besoinsdeformation_id',
            'length' => 4,
        ));
        $this->hasColumn('id_agents', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('besoins', 'string', null, array(
            'type' => 'string',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => '',
        ));
        $this->hasColumn('competance', 'string', null, array(
            'type' => 'string',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => '',
        ));
        $this->hasColumn('annee', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_contrat', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_poste', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_unite', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
    }

    public function setUp() {
        parent::setUp();
        $this->hasOne('Agents', array(
            'local' => 'id_agents',
            'foreign' => 'id'));

        $this->hasOne('Contrat', array(
            'local' => 'id_contrat',
            'foreign' => 'id'));
        $this->hasOne('Posterh', array(
            'local' => 'id_poste',
            'foreign' => 'id'));
        $this->hasOne('Unite', array(
            'local' => 'id_unite',
            'foreign' => 'id'));


        $this->hasMany('Ligneplaning', array(
            'local' => 'id',
            'foreign' => 'id_besoins'));

        $this->hasMany('Evaluation', array(
            'local' => 'id',
            'foreign' => 'id_formation'));

        $this->hasMany('Evaluation as Evaluation_3', array(
            'local' => 'id',
            'foreign' => 'id_formation'));
    }

}
