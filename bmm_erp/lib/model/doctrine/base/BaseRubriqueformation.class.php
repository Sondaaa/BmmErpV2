<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rubriqueformation', 'doctrine');

/**
 * BaseRubriqueformation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $code
 * @property string $libelle
 * @property integer $id_domaine
 * @property Domaineuntilisation $Domaineuntilisation
 * @property Doctrine_Collection $Sousrubrique
 * 
 * @method integer             getId()                  Returns the current record's "id" value
 * @method integer             getCode()                Returns the current record's "code" value
 * @method string              getLibelle()             Returns the current record's "libelle" value
 * @method integer             getIdDomaine()           Returns the current record's "id_domaine" value
 * @method Domaineuntilisation getDomaineuntilisation() Returns the current record's "Domaineuntilisation" value
 * @method Doctrine_Collection getSousrubrique()        Returns the current record's "Sousrubrique" collection
 * @method Rubriqueformation   setId()                  Sets the current record's "id" value
 * @method Rubriqueformation   setCode()                Sets the current record's "code" value
 * @method Rubriqueformation   setLibelle()             Sets the current record's "libelle" value
 * @method Rubriqueformation   setIdDomaine()           Sets the current record's "id_domaine" value
 * @method Rubriqueformation   setDomaineuntilisation() Sets the current record's "Domaineuntilisation" value
 * @method Rubriqueformation   setSousrubrique()        Sets the current record's "Sousrubrique" collection
 * 
 * @package    PhpProjectTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRubriqueformation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rubriqueformation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'rubriqueformation_id',
             'length' => 4,
             ));
        $this->hasColumn('code', 'integer', 4, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_domaine', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Domaineuntilisation', array(
             'local' => 'id_domaine',
             'foreign' => 'id'));

        $this->hasMany('Sousrubrique', array(
             'local' => 'id',
             'foreign' => 'id_rubrique'));
    }
}