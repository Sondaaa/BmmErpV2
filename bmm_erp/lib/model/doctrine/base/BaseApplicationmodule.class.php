<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Applicationmodule', 'doctrine');

/**
 * BaseApplicationmodule
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_application
 * @property Application $Application
 * @property Doctrine_Collection $Applicationmoduleaction
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getLibelle()                 Returns the current record's "libelle" value
 * @method integer             getIdApplication()           Returns the current record's "id_application" value
 * @method Application         getApplication()             Returns the current record's "Application" value
 * @method Doctrine_Collection getApplicationmoduleaction() Returns the current record's "Applicationmoduleaction" collection
 * @method Applicationmodule   setId()                      Sets the current record's "id" value
 * @method Applicationmodule   setLibelle()                 Sets the current record's "libelle" value
 * @method Applicationmodule   setIdApplication()           Sets the current record's "id_application" value
 * @method Applicationmodule   setApplication()             Sets the current record's "Application" value
 * @method Applicationmodule   setApplicationmoduleaction() Sets the current record's "Applicationmoduleaction" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseApplicationmodule extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('applicationmodule');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'applicationmodule_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_application', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Application', array(
             'local' => 'id_application',
             'foreign' => 'id'));

        $this->hasMany('Applicationmoduleaction', array(
             'local' => 'id',
             'foreign' => 'id_applicationmodule'));
    }
}