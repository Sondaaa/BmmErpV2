<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ligneuniterepartition', 'doctrine');

/**
 * BaseLigneuniterepartition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $jourmod
 * @property decimal $montantmod
 * @property decimal $coefficient
 * @property decimal $intrant
 * @property decimal $mecanisation
 * @property decimal $fraisgeneraux
 * @property decimal $total
 * @property string $compteapproprie
 * @property integer $id_uniterepartition
 * @property Uniterepartitioncharge $Uniterepartitioncharge
 * 
 * @method integer                getId()                     Returns the current record's "id" value
 * @method integer                getJourmod()                Returns the current record's "jourmod" value
 * @method decimal                getMontantmod()             Returns the current record's "montantmod" value
 * @method decimal                getCoefficient()            Returns the current record's "coefficient" value
 * @method decimal                getIntrant()                Returns the current record's "intrant" value
 * @method decimal                getMecanisation()           Returns the current record's "mecanisation" value
 * @method decimal                getFraisgeneraux()          Returns the current record's "fraisgeneraux" value
 * @method decimal                getTotal()                  Returns the current record's "total" value
 * @method string                 getCompteapproprie()        Returns the current record's "compteapproprie" value
 * @method integer                getIdUniterepartition()     Returns the current record's "id_uniterepartition" value
 * @method Uniterepartitioncharge getUniterepartitioncharge() Returns the current record's "Uniterepartitioncharge" value
 * @method Ligneuniterepartition  setId()                     Sets the current record's "id" value
 * @method Ligneuniterepartition  setJourmod()                Sets the current record's "jourmod" value
 * @method Ligneuniterepartition  setMontantmod()             Sets the current record's "montantmod" value
 * @method Ligneuniterepartition  setCoefficient()            Sets the current record's "coefficient" value
 * @method Ligneuniterepartition  setIntrant()                Sets the current record's "intrant" value
 * @method Ligneuniterepartition  setMecanisation()           Sets the current record's "mecanisation" value
 * @method Ligneuniterepartition  setFraisgeneraux()          Sets the current record's "fraisgeneraux" value
 * @method Ligneuniterepartition  setTotal()                  Sets the current record's "total" value
 * @method Ligneuniterepartition  setCompteapproprie()        Sets the current record's "compteapproprie" value
 * @method Ligneuniterepartition  setIdUniterepartition()     Sets the current record's "id_uniterepartition" value
 * @method Ligneuniterepartition  setUniterepartitioncharge() Sets the current record's "Uniterepartitioncharge" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLigneuniterepartition extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ligneuniterepartition');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'ligneuniterepartition_id',
             'length' => 4,
             ));
        $this->hasColumn('jourmod', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('montantmod', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('coefficient', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('intrant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mecanisation', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('fraisgeneraux', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('total', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('compteapproprie', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_uniterepartition', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Uniterepartitioncharge', array(
             'local' => 'id_uniterepartition',
             'foreign' => 'id'));
    }
}