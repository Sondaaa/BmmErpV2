<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Baserustourne', 'doctrine');

/**
 * BaseBaserustourne
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_sousrubrique
 * @property Sousrubrique $Sousrubrique
 * 
 * @method integer       getId()              Returns the current record's "id" value
 * @method string        getLibelle()         Returns the current record's "libelle" value
 * @method integer       getIdSousrubrique()  Returns the current record's "id_sousrubrique" value
 * @method Sousrubrique  getSousrubrique()    Returns the current record's "Sousrubrique" value
 * @method Baserustourne setId()              Sets the current record's "id" value
 * @method Baserustourne setLibelle()         Sets the current record's "libelle" value
 * @method Baserustourne setIdSousrubrique()  Sets the current record's "id_sousrubrique" value
 * @method Baserustourne setSousrubrique()    Sets the current record's "Sousrubrique" value
 * 
 * @package    PhpProjectTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBaserustourne extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('baserustourne');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'baserustourne_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_sousrubrique', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Sousrubrique', array(
             'local' => 'id_sousrubrique',
             'foreign' => 'id'));
    }
}