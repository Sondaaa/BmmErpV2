<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Salairedebase', 'doctrine');

/**
 * BaseSalairedebase
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_categorie
 * @property integer $id_echelle
 * @property integer $id_echelon
 * @property decimal $motant
 * @property integer $id_grade
 * @property integer $id_souscorps
 * @property date $datefermeture
 * @property date $dateouverture
 * @property Categorierh $Categorierh
 * @property Echelle $Echelle
 * @property Echelon $Echelon
 * @property Grade $Grade
 * @property Souscorps $Souscorps
 * @property Doctrine_Collection $Contrat
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method integer             getIdCategorie()   Returns the current record's "id_categorie" value
 * @method integer             getIdEchelle()     Returns the current record's "id_echelle" value
 * @method integer             getIdEchelon()     Returns the current record's "id_echelon" value
 * @method decimal             getMotant()        Returns the current record's "motant" value
 * @method integer             getIdGrade()       Returns the current record's "id_grade" value
 * @method integer             getIdSouscorps()   Returns the current record's "id_souscorps" value
 * @method date                getDatefermeture() Returns the current record's "datefermeture" value
 * @method date                getDateouverture() Returns the current record's "dateouverture" value
 * @method Categorierh         getCategorierh()   Returns the current record's "Categorierh" value
 * @method Echelle             getEchelle()       Returns the current record's "Echelle" value
 * @method Echelon             getEchelon()       Returns the current record's "Echelon" value
 * @method Grade               getGrade()         Returns the current record's "Grade" value
 * @method Souscorps           getSouscorps()     Returns the current record's "Souscorps" value
 * @method Corps               getCorps()         Returns the current record's "Corps" value
 * @method Doctrine_Collection getContrat()       Returns the current record's "Contrat" collection
 * @method Salairedebase       setId()            Sets the current record's "id" value
 * @method Salairedebase       setIdCategorie()   Sets the current record's "id_categorie" value
 * @method Salairedebase       setIdEchelle()     Sets the current record's "id_echelle" value
 * @method Salairedebase       setIdEchelon()     Sets the current record's "id_echelon" value
 * @method Salairedebase       setMotant()        Sets the current record's "motant" value
 * @method Salairedebase       setIdGrade()       Sets the current record's "id_grade" value
 * @method Salairedebase       setIdSouscorps()   Sets the current record's "id_souscorps" value
 * @method Salairedebase       setIdCorps()       Sets the current record's "id_corps" value
 * 
 * @method Salairedebase       setDatefermeture() Sets the current record's "datefermeture" value
 * @method Salairedebase       setDateouverture() Sets the current record's "dateouverture" value
 * @method Salairedebase       setCategorierh()   Sets the current record's "Categorierh" value
 * @method Salairedebase       setEchelle()       Sets the current record's "Echelle" value
 * @method Salairedebase       setEchelon()       Sets the current record's "Echelon" value
 * @method Salairedebase       setGrade()         Sets the current record's "Grade" value
 * @method Salairedebase       setSouscorps()     Sets the current record's "Souscorps" value
 * @method Salairedebase       setCorps()         Sets the current record's "Corps" value
 * @method Salairedebase       setContrat()       Sets the current record's "Contrat" collection
 * 
 * @package    PhpProjectTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSalairedebase extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('salairedebase');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'salairedebase_id',
             'length' => 4,
             ));
        $this->hasColumn('id_categorie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_echelle', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_echelon', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('motant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_grade', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_souscorps', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
         $this->hasColumn('id_corps', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datefermeture', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('dateouverture', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Categorierh', array(
             'local' => 'id_categorie',
             'foreign' => 'id'));

        $this->hasOne('Echelle', array(
             'local' => 'id_echelle',
             'foreign' => 'id'));

        $this->hasOne('Echelon', array(
             'local' => 'id_echelon',
             'foreign' => 'id'));

        $this->hasOne('Grade', array(
             'local' => 'id_grade',
             'foreign' => 'id'));

        $this->hasOne('Souscorps', array(
             'local' => 'id_souscorps',
             'foreign' => 'id'));
          $this->hasOne('Corps', array(
             'local' => 'id_corps',
             'foreign' => 'id'));

        $this->hasMany('Contrat', array(
             'local' => 'id',
             'foreign' => 'id_salairedebase'));
    }
}