<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Caiseepiecemonnaie', 'doctrine');

/**
 * BaseCaiseepiecemonnaie
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property decimal $valeur
 * @property integer $id_piece
 * @property integer $id_mouvement
 * @property integer $qte
 * @property Piecemonnaie $Piecemonnaie
 * @property Mouvementbanciare $Mouvementbanciare
 * 
 * @method integer            getId()                Returns the current record's "id" value
 * @method string             getLibelle()           Returns the current record's "libelle" value
 * @method decimal            getValeur()            Returns the current record's "valeur" value
 * @method integer            getIdPiece()           Returns the current record's "id_piece" value
 * @method integer            getIdMouvement()       Returns the current record's "id_mouvement" value
 * @method integer            getQte()               Returns the current record's "qte" value
 * @method Piecemonnaie       getPiecemonnaie()      Returns the current record's "Piecemonnaie" value
 * @method Mouvementbanciare  getMouvementbanciare() Returns the current record's "Mouvementbanciare" value
 * @method Caiseepiecemonnaie setId()                Sets the current record's "id" value
 * @method Caiseepiecemonnaie setLibelle()           Sets the current record's "libelle" value
 * @method Caiseepiecemonnaie setValeur()            Sets the current record's "valeur" value
 * @method Caiseepiecemonnaie setIdPiece()           Sets the current record's "id_piece" value
 * @method Caiseepiecemonnaie setIdMouvement()       Sets the current record's "id_mouvement" value
 * @method Caiseepiecemonnaie setQte()               Sets the current record's "qte" value
 * @method Caiseepiecemonnaie setPiecemonnaie()      Sets the current record's "Piecemonnaie" value
 * @method Caiseepiecemonnaie setMouvementbanciare() Sets the current record's "Mouvementbanciare" value
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCaiseepiecemonnaie extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('caiseepiecemonnaie');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'caiseepiecemonnaie_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('valeur', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => 'NULL::numeric',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_piece', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_mouvement', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('qte', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Piecemonnaie', array(
             'local' => 'id_piece',
             'foreign' => 'id'));

        $this->hasOne('Mouvementbanciare', array(
             'local' => 'id_mouvement',
             'foreign' => 'id'));
    }
}