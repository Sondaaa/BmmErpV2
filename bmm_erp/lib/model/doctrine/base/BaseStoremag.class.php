<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Storemag', 'doctrine');

/**
 * BaseStoremag
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_mag
 * @property integer $id_projet
 * @property Magasin $Magasin
 * @property Projet $Projet
 * @property Doctrine_Collection $Stock
 * 
 * @method integer             getId()        Returns the current record's "id" value
 * @method string              getLibelle()   Returns the current record's "libelle" value
 * @method integer             getIdMag()     Returns the current record's "id_mag" value
 * @method integer             getIdProjet()  Returns the current record's "id_projet" value
 * @method Magasin             getMagasin()   Returns the current record's "Magasin" value
 * @method Projet              getProjet()    Returns the current record's "Projet" value
 * @method Doctrine_Collection getStock()     Returns the current record's "Stock" collection
 * @method Storemag            setId()        Sets the current record's "id" value
 * @method Storemag            setLibelle()   Sets the current record's "libelle" value
 * @method Storemag            setIdMag()     Sets the current record's "id_mag" value
 * @method Storemag            setIdProjet()  Sets the current record's "id_projet" value
 * @method Storemag            setMagasin()   Sets the current record's "Magasin" value
 * @method Storemag            setProjet()    Sets the current record's "Projet" value
 * @method Storemag            setStock()     Sets the current record's "Stock" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseStoremag extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('storemag');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'storemag_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 254, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 254,
             ));
        $this->hasColumn('id_mag', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_projet', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Magasin', array(
             'local' => 'id_mag',
             'foreign' => 'id'));

        $this->hasOne('Projet', array(
             'local' => 'id_projet',
             'foreign' => 'id'));

        $this->hasMany('Stock', array(
             'local' => 'id',
             'foreign' => 'id_store'));
    }
}