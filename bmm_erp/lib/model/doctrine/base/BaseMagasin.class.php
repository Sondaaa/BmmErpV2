<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Magasin', 'doctrine');

/**
 * BaseMagasin
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_pay
 * @property integer $id_gouvernera
 * @property integer $id_emplacement
 * @property integer $id_site
 * @property integer $id_mag
 * @property string $code
 * @property Emplacement $Emplacement
 * @property Gouvernera $Gouvernera
 * @property Doctrine_Collection $Magasin
 * @property Pays $Pays
 * @property Site $Site
 * @property Doctrine_Collection $Storemag
 * @property Doctrine_Collection $Lignemagbureau
 * @property Doctrine_Collection $Stock
 * @property Doctrine_Collection $Documentachat
 * @property Doctrine_Collection $Documentachat_13
 * @property Doctrine_Collection $Lignedocachat
 * @property Doctrine_Collection $Bureaux
 * @property Doctrine_Collection $Inventairestock
 * @property Doctrine_Collection $Ligneusermag
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method string              getLibelle()          Returns the current record's "libelle" value
 * @method integer             getIdPay()            Returns the current record's "id_pay" value
 * @method integer             getIdGouvernera()     Returns the current record's "id_gouvernera" value
 * @method integer             getIdEmplacement()    Returns the current record's "id_emplacement" value
 * @method integer             getIdSite()           Returns the current record's "id_site" value
 * @method integer             getIdMag()            Returns the current record's "id_mag" value
 * @method string              getCode()             Returns the current record's "code" value
 * @method Emplacement         getEmplacement()      Returns the current record's "Emplacement" value
 * @method Gouvernera          getGouvernera()       Returns the current record's "Gouvernera" value
 * @method Doctrine_Collection getMagasin()          Returns the current record's "Magasin" collection
 * @method Pays                getPays()             Returns the current record's "Pays" value
 * @method Site                getSite()             Returns the current record's "Site" value
 * @method Doctrine_Collection getStoremag()         Returns the current record's "Storemag" collection
 * @method Doctrine_Collection getLignemagbureau()   Returns the current record's "Lignemagbureau" collection
 * @method Doctrine_Collection getStock()            Returns the current record's "Stock" collection
 * @method Doctrine_Collection getDocumentachat()    Returns the current record's "Documentachat" collection
 * @method Doctrine_Collection getDocumentachat13()  Returns the current record's "Documentachat_13" collection
 * @method Doctrine_Collection getLignedocachat()    Returns the current record's "Lignedocachat" collection
 * @method Doctrine_Collection getBureaux()          Returns the current record's "Bureaux" collection
 * @method Doctrine_Collection getInventairestock()  Returns the current record's "Inventairestock" collection
 * @method Doctrine_Collection getLigneusermag()     Returns the current record's "Ligneusermag" collection
 * @method Magasin             setId()               Sets the current record's "id" value
 * @method Magasin             setLibelle()          Sets the current record's "libelle" value
 * @method Magasin             setIdPay()            Sets the current record's "id_pay" value
 * @method Magasin             setIdGouvernera()     Sets the current record's "id_gouvernera" value
 * @method Magasin             setIdEmplacement()    Sets the current record's "id_emplacement" value
 * @method Magasin             setIdSite()           Sets the current record's "id_site" value
 * @method Magasin             setIdMag()            Sets the current record's "id_mag" value
 * @method Magasin             setCode()             Sets the current record's "code" value
 * @method Magasin             setEmplacement()      Sets the current record's "Emplacement" value
 * @method Magasin             setGouvernera()       Sets the current record's "Gouvernera" value
 * @method Magasin             setMagasin()          Sets the current record's "Magasin" collection
 * @method Magasin             setPays()             Sets the current record's "Pays" value
 * @method Magasin             setSite()             Sets the current record's "Site" value
 * @method Magasin             setStoremag()         Sets the current record's "Storemag" collection
 * @method Magasin             setLignemagbureau()   Sets the current record's "Lignemagbureau" collection
 * @method Magasin             setStock()            Sets the current record's "Stock" collection
 * @method Magasin             setDocumentachat()    Sets the current record's "Documentachat" collection
 * @method Magasin             setDocumentachat13()  Sets the current record's "Documentachat_13" collection
 * @method Magasin             setLignedocachat()    Sets the current record's "Lignedocachat" collection
 * @method Magasin             setBureaux()          Sets the current record's "Bureaux" collection
 * @method Magasin             setInventairestock()  Sets the current record's "Inventairestock" collection
 * @method Magasin             setLigneusermag()     Sets the current record's "Ligneusermag" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMagasin extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('magasin');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'magasin_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 254, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 254,
             ));
        $this->hasColumn('id_pay', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_gouvernera', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_emplacement', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_mag', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 7, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 7,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Emplacement', array(
             'local' => 'id_emplacement',
             'foreign' => 'id'));

        $this->hasOne('Gouvernera', array(
             'local' => 'id_gouvernera',
             'foreign' => 'id'));

        $this->hasMany('Magasin', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasOne('Pays', array(
             'local' => 'id_pay',
             'foreign' => 'id'));

        $this->hasOne('Site', array(
             'local' => 'id_site',
             'foreign' => 'id'));

        $this->hasMany('Storemag', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Lignemagbureau', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Stock', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Documentachat', array(
             'local' => 'id',
             'foreign' => 'idmagdepart'));

        $this->hasMany('Documentachat as Documentachat_13', array(
             'local' => 'id',
             'foreign' => 'idmagarrive'));

        $this->hasMany('Lignedocachat', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Bureaux', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Inventairestock', array(
             'local' => 'id',
             'foreign' => 'id_mag'));

        $this->hasMany('Ligneusermag', array(
             'local' => 'id',
             'foreign' => 'id_mag'));
    }
}