<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Caissesbanques', 'doctrine');

/**
 * BaseCaissesbanques
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $libelle
 * @property string $codecb
 * @property string $referencecb
 * @property decimal $mntouverture
 * @property decimal $mntprov
 * @property decimal $mntdefini
 * @property date $dateouvert
 * @property string $rib
 * @property string $description
 * @property string $adresse
 * @property integer $id_typecb
 * @property string $libellebanque
 * @property integer $id
 * @property integer $id_nature
 * @property string $iban
 * @property string $codebic
 * @property integer $id_devise
 * @property integer $id_plancomptable
 * @property integer $id_dossier
 * @property Dossiercomptable $Dossiercomptable
 * @property Devise $Devise
 * @property Naturebanque $Naturebanque
 * @property Typecaisse $Typecaisse
 * @property Plancomptable $Plancomptable
 * @property Doctrine_Collection $Carnetcheque
 * @property Doctrine_Collection $Carnetordrepostal
 * @property Doctrine_Collection $Lignebanquecaisse
 * @property Doctrine_Collection $Bordereauvirement
 * @property Doctrine_Collection $Mouvementbanciare
 * @property Doctrine_Collection $Ligneoperationcaisse
 * @property Doctrine_Collection $Typeoperation
 * 
 * @method string              getLibelle()              Returns the current record's "libelle" value
 * @method string              getCodecb()               Returns the current record's "codecb" value
 * @method string              getReferencecb()          Returns the current record's "referencecb" value
 * @method decimal             getMntouverture()         Returns the current record's "mntouverture" value
 * @method decimal             getMntprov()              Returns the current record's "mntprov" value
 * @method decimal             getMntdefini()            Returns the current record's "mntdefini" value
 * @method date                getDateouvert()           Returns the current record's "dateouvert" value
 * @method string              getRib()                  Returns the current record's "rib" value
 * @method string              getDescription()          Returns the current record's "description" value
 * @method string              getAdresse()              Returns the current record's "adresse" value
 * @method integer             getIdTypecb()             Returns the current record's "id_typecb" value
 * @method string              getLibellebanque()        Returns the current record's "libellebanque" value
 * @method integer             getId()                   Returns the current record's "id" value
 * @method integer             getIdNature()             Returns the current record's "id_nature" value
 * @method string              getIban()                 Returns the current record's "iban" value
 * @method string              getCodebic()              Returns the current record's "codebic" value
 * @method integer             getIdDevise()             Returns the current record's "id_devise" value
 * @method integer             getIdPlancomptable()      Returns the current record's "id_plancomptable" value
 * @method integer             getIdDossier()            Returns the current record's "id_dossier" value
 * @method Dossiercomptable    getDossiercomptable()     Returns the current record's "Dossiercomptable" value
 * @method Typecaisse          getTypecaisse()           Returns the current record's "Typecaisse" value
 * @method Naturebanque        getNaturebanque()         Returns the current record's "Naturebanque" value
 * @method Devise              getDevise()               Returns the current record's "Devise" value
 * @method Plancomptable       getPlancomptable()        Returns the current record's "Plancomptable" value
 * @method Doctrine_Collection getCarnetcheque()         Returns the current record's "Carnetcheque" collection
 * @method Doctrine_Collection getCarnetordrepostal()    Returns the current record's "Carnetordrepostal" collection
 * @method Doctrine_Collection getMouvementbanciare()    Returns the current record's "Mouvementbanciare" collection
 * @method Doctrine_Collection getLigneoperationcaisse() Returns the current record's "Ligneoperationcaisse" collection
 * @method Doctrine_Collection getLignebanquecaisse()    Returns the current record's "Lignebanquecaisse" collection
 * @method Doctrine_Collection getBordereauvirement()    Returns the current record's "Bordereauvirement" collection
 * @method Doctrine_Collection getTypeoperation()        Returns the current record's "Typeoperation" collection
 * @method Caissesbanques      setLibelle()              Sets the current record's "libelle" value
 * @method Caissesbanques      setCodecb()               Sets the current record's "codecb" value
 * @method Caissesbanques      setReferencecb()          Sets the current record's "referencecb" value
 * @method Caissesbanques      setMntouverture()         Sets the current record's "mntouverture" value
 * @method Caissesbanques      setMntprov()              Sets the current record's "mntprov" value
 * @method Caissesbanques      setMntdefini()            Sets the current record's "mntdefini" value
 * @method Caissesbanques      setDateouvert()           Sets the current record's "dateouvert" value
 * @method Caissesbanques      setRib()                  Sets the current record's "rib" value
 * @method Caissesbanques      setDescription()          Sets the current record's "description" value
 * @method Caissesbanques      setAdresse()              Sets the current record's "adresse" value
 * @method Caissesbanques      setIdTypecb()             Sets the current record's "id_typecb" value
 * @method Caissesbanques      setLibellebanque()        Sets the current record's "libellebanque" value
 * @method Caissesbanques      setId()                   Sets the current record's "id" value
 * @method Caissesbanques      setIdNature()             Sets the current record's "id_nature" value
 * @method Caissesbanques      setIban()                 Sets the current record's "iban" value
 * @method Caissesbanques      setCodebic()              Sets the current record's "codebic" value
 * @method Caissesbanques      setIdDevise()             Sets the current record's "id_devise" value
 * @method Caissesbanques      setIdPlancomptable()      Sets the current record's "id_plancomptable" value
 * @method Caissesbanques      setIdDossier()            Sets the current record's "id_dossier" value
 * @method Caissesbanques      setDossiercomptable()     Sets the current record's "Dossiercomptable" value
 * @method Caissesbanques      setTypecaisse()           Sets the current record's "Typecaisse" value
 * @method Caissesbanques      setNaturebanque()         Sets the current record's "Naturebanque" value
 * @method Caissesbanques      setDevise()               Sets the current record's "Devise" value
 * @method Caissesbanques      setPlancomptable()        Sets the current record's "Plancomptable" value
 * @method Caissesbanques      setCarnetcheque()         Sets the current record's "Carnetcheque" collection
 * @method Caissesbanques      setCarnetordrepostal()    Sets the current record's "Carnetordrepostal" collection
 * @method Caissesbanques      setMouvementbanciare()    Sets the current record's "Mouvementbanciare" collection
 * @method Caissesbanques      setLigneoperationcaisse() Sets the current record's "Ligneoperationcaisse" collection
 * @method Caissesbanques      setLignebanquecaisse()    Sets the current record's "Lignebanquecaisse" collection
 * @method Caissesbanques      setBordereauvirement()    Sets the current record's "Bordereauvirement" collection
 * @method Caissesbanques      setTypeoperation()        Sets the current record's "Typeoperation" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCaissesbanques extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('caissesbanques');
        $this->hasColumn('libelle', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('codecb', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('referencecb', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('mntouverture', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntprov', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntdefini', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('dateouvert', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('rib', 'string', 50, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 50,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('adresse', 'string', 254, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 254,
             ));
        $this->hasColumn('id_typecb', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('libellebanque', 'string', 150, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 150,
             ));
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'caissesbanques_id',
             'length' => 4,
             ));
        $this->hasColumn('id_nature', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('iban', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('codebic', 'string', 100, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 100,
             ));
        $this->hasColumn('id_devise', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_plancomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Typecaisse', array(
             'local' => 'id_typecb',
             'foreign' => 'id'));

        $this->hasOne('Naturebanque', array(
             'local' => 'id_nature',
             'foreign' => 'id'));

        $this->hasOne('Devise', array(
             'local' => 'id_devise',
             'foreign' => 'id'));

        $this->hasMany('Carnetcheque', array(
             'local' => 'id',
             'foreign' => 'id_banque'));
        
        $this->hasMany('Carnetordrepostal', array(
             'local' => 'id',
             'foreign' => 'id_compte'));

        $this->hasMany('Mouvementbanciare', array(
             'local' => 'id',
             'foreign' => 'id_banque'));

        $this->hasMany('Ligneoperationcaisse', array(
             'local' => 'id',
             'foreign' => 'id_caisse'));

        $this->hasMany('Lignebanquecaisse', array(
             'local' => 'id',
             'foreign' => 'id_caissebanque'));
        
        $this->hasMany('Bordereauvirement', array(
             'local' => 'id',
             'foreign' => 'id_compte'));

        $this->hasMany('Typeoperation', array(
             'local' => 'id',
             'foreign' => 'id_banque'));
        
        $this->hasOne('Plancomptable', array(
             'local' => 'id_plancomptable',
             'foreign' => 'id'));
        
        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));
    }
}