<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Utilisateur', 'doctrine');

/**
 * BaseUtilisateur
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property string $login
 * @property string $pwd
 * @property integer $id_parent
 * @property integer $id_profil
 * @property string $remember_token
 * @property string $password
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * * @property timestamp $delated_at
 * @property boolean $is_admin

 * @property boolean $is_active
 * @property Profil $Profil
 * @property Agents $Agents
 * @property Doctrine_Collection $Maquette
 * @property Doctrine_Collection $Dossiercomptable
 * @property Doctrine_Collection $Courrier
 * @property Doctrine_Collection $Immobilisation
 * @property Doctrine_Collection $Client
 * @property Doctrine_Collection $Parametragedesseigne
 * @property Doctrine_Collection $Documentachatannulation
 * @property Doctrine_Collection $Marches
 * @property Doctrine_Collection $Rolemodule
 * @property Doctrine_Collection $Piececomptable
 * @property Doctrine_Collection $Parcourcourier
 * @property Doctrine_Collection $Documentachat
 * @property Doctrine_Collection $Dossierexercice
 * @property Doctrine_Collection $Plancomptable
 * @property Doctrine_Collection $Documentod
 * @property Doctrine_Collection $Article
 * @property Doctrine_Collection $Referentielcomptable
 * @property Doctrine_Collection $Ligneoperationcaisse
 * @property Doctrine_Collection $Contratachat
 * @property Doctrine_Collection $Fournisseur
 * @property Doctrine_Collection $Titrebudjet
 *
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getLogin()                   Returns the current record's "login" value
 * @method string              getPwd()                     Returns the current record's "pwd" value
 * @method integer             getIdParent()                Returns the current record's "id_parent" value
 * @method integer             getIdProfil()                Returns the current record's "id_profil" value
 * @method string              getRememberToken()           Returns the current record's "remember_token" value

 * @method string              getPassword()                Returns the current record's "password" value
 * @method timestamp           getCreatedAt()               Returns the current record's "created_at" value
 * @method timestamp           getUpdatedAt()               Returns the current record's "updated_at" value
 * * @method timestamp           getDelatedAt()               Returns the current record's "delated_at" value
 *
 * @method boolean             getIsAdmin()                 Returns the current record's "is_admin" value
 * @method boolean             getIsActive()                Returns the current record's "is_active" value
 * @method Profil              getProfil()                  Returns the current record's "Profil" value
 * @method Agents              getAgents()                  Returns the current record's "Agents" value
 * @method Doctrine_Collection getMaquette()                Returns the current record's "Maquette" collection
 * @method Doctrine_Collection getDossiercomptable()        Returns the current record's "Dossiercomptable" collection
 * @method Doctrine_Collection getCourrier()                Returns the current record's "Courrier" collection
 * @method Doctrine_Collection getImmobilisation()          Returns the current record's "Immobilisation" collection
 * @method Doctrine_Collection getClient()                  Returns the current record's "Client" collection
 * @method Doctrine_Collection getParametragedesseigne()    Returns the current record's "Parametragedesseigne" collection
 * @method Doctrine_Collection getDocumentachatannulation() Returns the current record's "Documentachatannulation" collection
 * @method Doctrine_Collection getMarches()                 Returns the current record's "Marches" collection
 * @method Doctrine_Collection getRolemodule()              Returns the current record's "Rolemodule" collection
 * @method Doctrine_Collection getPiececomptable()          Returns the current record's "Piececomptable" collection
 * @method Doctrine_Collection getParcourcourier()          Returns the current record's "Parcourcourier" collection
 * @method Doctrine_Collection getDocumentachat()           Returns the current record's "Documentachat" collection
 * @method Doctrine_Collection getDossierexercice()         Returns the current record's "Dossierexercice" collection
 * @method Doctrine_Collection getPlancomptable()           Returns the current record's "Plancomptable" collection
 * @method Doctrine_Collection getDocumentod()              Returns the current record's "Documentod" collection
 * @method Doctrine_Collection getArticle()                 Returns the current record's "Article" collection
 * @method Doctrine_Collection getReferentielcomptable()    Returns the current record's "Referentielcomptable" collection
 * @method Doctrine_Collection getLigneoperationcaisse()    Returns the current record's "Ligneoperationcaisse" collection
 * @method Doctrine_Collection getContratachat()            Returns the current record's "Contratachat" collection
 * @method Doctrine_Collection getFournisseur()             Returns the current record's "Fournisseur" collection
 * @method Doctrine_Collection getTitrebudjet()             Returns the current record's "Titrebudjet" collection
 * @method Utilisateur         setId()                      Sets the current record's "id" value
 * @method Utilisateur         setLogin()                   Sets the current record's "login" value
 * @method Utilisateur         setPwd()                     Sets the current record's "pwd" value
 * @method Utilisateur         setIdParent()                Sets the current record's "id_parent" value
 * @method Utilisateur         setIdProfil()                Sets the current record's "id_profil" value
 * @method Utilisateur         setRememberToken()           Sets the current record's "remember_token" value
 * @method Utilisateur         setPassword()                Sets the current record's "password" value
 * @method Utilisateur         setCreatedAt()               Sets the current record's "created_at" value
 * @method Utilisateur         setUpdatedAt()               Sets the current record's "updated_at" value
 * * @method Utilisateur         setDelatedAt()               Sets the current record's "delated_at" value

 * @method Utilisateur         setIsAdmin()                 Sets the current record's "is_admin" value
 * @method Utilisateur         setIsActive()                Sets the current record's "is_active" value
 * @method Utilisateur         setProfil()                  Sets the current record's "Profil" value
 * @method Utilisateur         setAgents()                  Sets the current record's "Agents" value
 * @method Utilisateur         setMaquette()                Sets the current record's "Maquette" collection
 * @method Utilisateur         setDossiercomptable()        Sets the current record's "Dossiercomptable" collection
 * @method Utilisateur         setCourrier()                Sets the current record's "Courrier" collection
 * @method Utilisateur         setImmobilisation()          Sets the current record's "Immobilisation" collection
 * @method Utilisateur         setClient()                  Sets the current record's "Client" collection
 * @method Utilisateur         setParametragedesseigne()    Sets the current record's "Parametragedesseigne" collection
 * @method Utilisateur         setDocumentachatannulation() Sets the current record's "Documentachatannulation" collection
 * @method Utilisateur         setMarches()                 Sets the current record's "Marches" collection
 * @method Utilisateur         setRolemodule()              Sets the current record's "Rolemodule" collection
 * @method Utilisateur         setPiececomptable()          Sets the current record's "Piececomptable" collection
 * @method Utilisateur         setParcourcourier()          Sets the current record's "Parcourcourier" collection
 * @method Utilisateur         setDocumentachat()           Sets the current record's "Documentachat" collection
 * @method Utilisateur         setDossierexercice()         Sets the current record's "Dossierexercice" collection
 * @method Utilisateur         setPlancomptable()           Sets the current record's "Plancomptable" collection
 * @method Utilisateur         setDocumentod()              Sets the current record's "Documentod" collection
 * @method Utilisateur         setArticle()                 Sets the current record's "Article" collection
 * @method Utilisateur         setReferentielcomptable()    Sets the current record's "Referentielcomptable" collection
 * @method Utilisateur         setLigneoperationcaisse()    Sets the current record's "Ligneoperationcaisse" collection
 * @method Utilisateur         setContratachat()            Sets the current record's "Contratachat" collection
 * @method Utilisateur         setFournisseur()             Sets the current record's "Fournisseur" collection
 * @method Utilisateur         setTitrebudjet()             Sets the current record's "Titrebudjet" collection

 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUtilisateur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('utilisateur');
        $this->hasColumn('id', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'primary' => true,
            'sequence' => 'utilisateur_id',
            'length' => 4,
        ));
        $this->hasColumn('login', 'string', null, array(
            'type' => 'string',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => '',
        ));
        $this->hasColumn('pwd', 'string', null, array(
            'type' => 'string',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => '',
        ));
        $this->hasColumn('id_parent', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('id_profil', 'integer', 4, array(
            'type' => 'integer',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 4,
        ));
        $this->hasColumn('remember_token', 'string', 255, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 255,
        ));
        $this->hasColumn('password', 'string', 255, array(
            'type' => 'string',
            'fixed' => 1,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 255,
        ));
        $this->hasColumn('created_at', 'timestamp', 25, array(
            'type' => 'timestamp',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));

        $this->hasColumn('delated_at', 'timestamp', 25, array(
            'type' => 'timestamp',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('updated_at', 'timestamp', 25, array(
            'type' => 'timestamp',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 25,
        ));
        $this->hasColumn('is_admin', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));
        $this->hasColumn('is_active', 'boolean', 1, array(
            'type' => 'boolean',
            'fixed' => 0,
            'unsigned' => false,
            'notnull' => false,
            'primary' => false,
            'length' => 1,
        ));

    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Profil', array(
            'local' => 'id_profil',
            'foreign' => 'id'));

        $this->hasOne('Agents', array(
            'local' => 'id_parent',
            'foreign' => 'id'));

        $this->hasMany('Maquette', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Dossiercomptable', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Courrier', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Immobilisation', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Client', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Parametragedesseigne', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Documentachatannulation', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Marches', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Rolemodule', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Piececomptable', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Parcourcourier', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Documentachat', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Dossierexercice', array(
            'local' => 'id',
            'foreign' => 'id_usercloture'));

        $this->hasMany('Plancomptable', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Documentod', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Article', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Referentielcomptable', array(
            'local' => 'id',
            'foreign' => 'id_utilisateur'));

        $this->hasMany('Ligneoperationcaisse', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Contratachat', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Fournisseur', array(
            'local' => 'id',
            'foreign' => 'id_user'));

        $this->hasMany('Titrebudjet', array(
            'local' => 'id',
            'foreign' => 'id_user'));
    }
}
