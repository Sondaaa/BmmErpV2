<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Parametreuniterepartition', 'doctrine');

/**
 * BaseParametreuniterepartition
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $typemecanisation
 * @property integer $id_chantierrepartition
 * @property integer $id_rapporttravaux
 * @property integer $id_uniterepartition
 * @property Chantierrepartitionsalaireouvrier $Chantierrepartitionsalaireouvrier
 * @property Rapporttravaux $Rapporttravaux
 * @property Uniterepartitioncharge $Uniterepartitioncharge
 * 
 * @method integer                           getId()                                Returns the current record's "id" value
 * @method string                            getTypemecanisation()                  Returns the current record's "typemecanisation" value
 * @method integer                           getIdChantierrepartition()             Returns the current record's "id_chantierrepartition" value
 * @method integer                           getIdRapporttravaux()                  Returns the current record's "id_rapporttravaux" value
 * @method integer                           getIdUniterepartition()                Returns the current record's "id_uniterepartition" value
 * @method Chantierrepartitionsalaireouvrier getChantierrepartitionsalaireouvrier() Returns the current record's "Chantierrepartitionsalaireouvrier" value
 * @method Rapporttravaux                    getRapporttravaux()                    Returns the current record's "Rapporttravaux" value
 * @method Uniterepartitioncharge            getUniterepartitioncharge()            Returns the current record's "Uniterepartitioncharge" value
 * @method Parametreuniterepartition         setId()                                Sets the current record's "id" value
 * @method Parametreuniterepartition         setTypemecanisation()                  Sets the current record's "typemecanisation" value
 * @method Parametreuniterepartition         setIdChantierrepartition()             Sets the current record's "id_chantierrepartition" value
 * @method Parametreuniterepartition         setIdRapporttravaux()                  Sets the current record's "id_rapporttravaux" value
 * @method Parametreuniterepartition         setIdUniterepartition()                Sets the current record's "id_uniterepartition" value
 * @method Parametreuniterepartition         setChantierrepartitionsalaireouvrier() Sets the current record's "Chantierrepartitionsalaireouvrier" value
 * @method Parametreuniterepartition         setRapporttravaux()                    Sets the current record's "Rapporttravaux" value
 * @method Parametreuniterepartition         setUniterepartitioncharge()            Sets the current record's "Uniterepartitioncharge" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseParametreuniterepartition extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('parametreuniterepartition');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'parametreuniterepartition_id',
             'length' => 4,
             ));
        $this->hasColumn('typemecanisation', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 20,
             ));
        $this->hasColumn('id_chantierrepartition', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_rapporttravaux', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_uniterepartition', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Chantierrepartitionsalaireouvrier', array(
             'local' => 'id_chantierrepartition',
             'foreign' => 'id'));

        $this->hasOne('Rapporttravaux', array(
             'local' => 'id_rapporttravaux',
             'foreign' => 'id'));

        $this->hasOne('Uniterepartitioncharge', array(
             'local' => 'id_uniterepartition',
             'foreign' => 'id'));
    }
}