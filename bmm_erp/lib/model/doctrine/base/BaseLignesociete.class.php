<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lignesociete', 'doctrine');

/**
 * BaseLignesociete
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_societe
 * @property integer $codemois
 * @property string $libelle
 * @property integer $moiscalendiarle
 * @property integer $nordre
 * @property integer $annee
 * @property integer $nbrmois
 * @property Societe $Societe
 * 
 * @method integer      getId()              Returns the current record's "id" value
 * @method integer      getIdSociete()       Returns the current record's "id_societe" value
 * @method integer      getCodemois()        Returns the current record's "codemois" value
 * @method string       getLibelle()         Returns the current record's "libelle" value
 * @method integer      getMoiscalendiarle() Returns the current record's "moiscalendiarle" value
 * @method integer      getNordre()          Returns the current record's "nordre" value
 * @method integer      getAnnee()           Returns the current record's "annee" value
 * @method integer      getNbrmois()         Returns the current record's "nbrmois" value
 * @method Societe      getSociete()         Returns the current record's "Societe" value
 * @method Lignesociete setId()              Sets the current record's "id" value
 * @method Lignesociete setIdSociete()       Sets the current record's "id_societe" value
 * @method Lignesociete setCodemois()        Sets the current record's "codemois" value
 * @method Lignesociete setLibelle()         Sets the current record's "libelle" value
 * @method Lignesociete setAnnee()           Sets the current record's "annee" value
 * @method Lignesociete setNbrmois()         Sets the current record's "nbrmois" value
 * @method Lignesociete setMoiscalendiarle() Sets the current record's "moiscalendiarle" value
 * @method Lignesociete setNordre()          Sets the current record's "nordre" value
 * @method Lignesociete setSociete()         Sets the current record's "Societe" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLignesociete extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lignesociete');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'lignesociete_id',
             'length' => 4,
             ));
        $this->hasColumn('id_societe', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('codemois', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 2555, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2555,
             ));
        $this->hasColumn('moiscalendiarle', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nordre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
			  $this->hasColumn('annee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nbrmois', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Societe', array(
             'local' => 'id_societe',
             'foreign' => 'id'));
    }
}