<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Evaluation', 'doctrine');

/**
 * BaseEvaluation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property string $competance
 * @property string $connaissanceaquise
 * @property string $conditionslogement
 * @property string $notecomposant
 * @property string $observation
 * @property string $signatureagents
 * @property string $cahcetresponsable
 * @property string $noteformateur
 * @property integer $id_formation
 * @property string $degreobjectif
 * @property string $structureprog
 * @property Agents $Agents
 * @property Besoinsdeformation $Besoinsdeformation
 * 
 * @method integer            getId()                 Returns the current record's "id" value
 * @method integer            getIdAgents()           Returns the current record's "id_agents" value
 * @method string             getCompetance()         Returns the current record's "competance" value
 * @method string             getConnaissanceaquise() Returns the current record's "connaissanceaquise" value
 * @method string             getConditionslogement() Returns the current record's "conditionslogement" value
 * @method string             getNotecomposant()      Returns the current record's "notecomposant" value
 * @method string             getObservation()        Returns the current record's "observation" value
 * @method string             getSignatureagents()    Returns the current record's "signatureagents" value
 * @method string             getCahcetresponsable()  Returns the current record's "cahcetresponsable" value
 * @method string             getNoteformateur()      Returns the current record's "noteformateur" value
 * @method integer            getIdFormation()        Returns the current record's "id_formation" value
 * @method string             getDegreobjectif()      Returns the current record's "degreobjectif" value
 * @method string             getStructureprog()      Returns the current record's "structureprog" value
 * @method Agents             getAgents()             Returns the current record's "Agents" value
 * @method Besoinsdeformation getBesoinsdeformation() Returns the current record's "Besoinsdeformation" value
 * @method Evaluation         setId()                 Sets the current record's "id" value
 * @method Evaluation         setIdAgents()           Sets the current record's "id_agents" value
 * @method Evaluation         setCompetance()         Sets the current record's "competance" value
 * @method Evaluation         setConnaissanceaquise() Sets the current record's "connaissanceaquise" value
 * @method Evaluation         setConditionslogement() Sets the current record's "conditionslogement" value
 * @method Evaluation         setNotecomposant()      Sets the current record's "notecomposant" value
 * @method Evaluation         setObservation()        Sets the current record's "observation" value
 * @method Evaluation         setSignatureagents()    Sets the current record's "signatureagents" value
 * @method Evaluation         setCahcetresponsable()  Sets the current record's "cahcetresponsable" value
 * @method Evaluation         setNoteformateur()      Sets the current record's "noteformateur" value
 * @method Evaluation         setIdFormation()        Sets the current record's "id_formation" value
 * @method Evaluation         setDegreobjectif()      Sets the current record's "degreobjectif" value
 * @method Evaluation         setStructureprog()      Sets the current record's "structureprog" value
 * @method Evaluation         setAgents()             Sets the current record's "Agents" value
 * @method Evaluation         setBesoinsdeformation() Sets the current record's "Besoinsdeformation" value
 * 
 * @package    PhpProjecttest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEvaluation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('evaluation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'evaluation_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('competance', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('connaissanceaquise', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('conditionslogement', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('notecomposant', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('signatureagents', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('cahcetresponsable', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('noteformateur', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_formation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('degreobjectif', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('structureprog', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Besoinsdeformation', array(
             'local' => 'id_formation',
             'foreign' => 'id'));
    }
}