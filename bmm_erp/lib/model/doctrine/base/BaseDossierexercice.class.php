<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Dossierexercice', 'doctrine');

/**
 * BaseDossierexercice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_dossier
 * @property integer $id_exercice
 * @property date $date
 * @property boolean $cloture
 * @property date $datecloture
 * @property integer $id_usercloture
 * @property boolean $exporte
 * @property Dossiercomptable $Dossiercomptable
 * @property Exercice $Exercice
 * @property Utilisateur $Utilisateur
 * @property Doctrine_Collection $Dossierexerciceutilisateur
 * 
 * @method integer          getId()               Returns the current record's "id" value
 * @method integer          getIdDossier()        Returns the current record's "id_dossier" value
 * @method integer          getIdExercice()       Returns the current record's "id_exercice" value
 * @method date             getDate()             Returns the current record's "date" value
 * @method boolean          getCloture()          Returns the current record's "cloture" value
 * @method date             getDatecloture()      Returns the current record's "datecloture" value
 * @method integer          getIdUsercloture()    Returns the current record's "id_usercloture" value
 * @method boolean          getExporte()          Returns the current record's "exporte" value
 * @method Dossiercomptable getDossiercomptable() Returns the current record's "Dossiercomptable" value
 * @method Exercice         getExercice()         Returns the current record's "Exercice" value
 * @method Utilisateur      getUtilisateur()      Returns the current record's "Utilisateur" value
 * @method Doctrine_Collection getDossierexerciceutilisateur() Returns the current record's "Dossierexerciceutilisateur" collection
 * @method Dossierexercice  setId()               Sets the current record's "id" value
 * @method Dossierexercice  setIdDossier()        Sets the current record's "id_dossier" value
 * @method Dossierexercice  setIdExercice()       Sets the current record's "id_exercice" value
 * @method Dossierexercice  setDate()             Sets the current record's "date" value
 * @method Dossierexercice  setCloture()          Sets the current record's "cloture" value
 * @method Dossierexercice  setDatecloture()      Sets the current record's "datecloture" value
 * @method Dossierexercice  setIdUsercloture()    Sets the current record's "id_usercloture" value
 * @method Dossierexercice  setExporte()          Sets the current record's "exporte" value
 * @method Dossierexercice  setDossiercomptable() Sets the current record's "Dossiercomptable" value
 * @method Dossierexercice  setExercice()         Sets the current record's "Exercice" value
 * @method Dossierexercice  setUtilisateur()      Sets the current record's "Utilisateur" value
 * @method Dossierexercice  setDossierexerciceutilisateur() Sets the current record's "Dossierexerciceutilisateur" collection
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDossierexercice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dossierexercice');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'dossierexercice_id',
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_exercice', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('cloture', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('datecloture', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_usercloture', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('exporte', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Exercice', array(
             'local' => 'id_exercice',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur', array(
             'local' => 'id_usercloture',
             'foreign' => 'id'));
        
        $this->hasMany('Dossierexerciceutilisateur', array(
             'local' => 'id',
             'foreign' => 'id_dossierexercice'));
    }
}