<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lignemaquette', 'doctrine');

/**
 * BaseLignemaquette
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $numero
 * @property integer $obligatoirecompte
 * @property integer $obligatoiremontant
 * @property integer $obligatoirecontre
 * @property string $specificationcompte
 * @property string $specificationmontant
 * @property string $specificationcontre
 * @property decimal $montant
 * @property integer $numerolignemontant
 * @property decimal $taux
 * @property string $type
 * @property integer $id_maquette
 * @property integer $id_comptecomptable
 * @property integer $id_contrepartie
 * @property integer $tiers
 * @property Maquette $Maquette
  * @property Plancomptable $Plancomptable
  * @property Plancomptable $Plancomptable_4
 * @property Plandossiercomptable $Plandossiercomptable
 * @property Plandossiercomptable $Plandossiercomptable_3
 * 
 * @method integer       getId()                   Returns the current record's "id" value
 * @method integer       getNumero()               Returns the current record's "numero" value
 * @method integer       getObligatoirecompte()    Returns the current record's "obligatoirecompte" value
 * @method integer       getObligatoiremontant()   Returns the current record's "obligatoiremontant" value
 * @method integer       getObligatoirecontre()    Returns the current record's "obligatoirecontre" value
 * @method string        getSpecificationcompte()  Returns the current record's "specificationcompte" value
 * @method string        getSpecificationmontant() Returns the current record's "specificationmontant" value
 * @method string        getSpecificationcontre()  Returns the current record's "specificationcontre" value
 * @method decimal       getMontant()              Returns the current record's "montant" value
 * @method integer       getNumerolignemontant()   Returns the current record's "numerolignemontant" value
 * @method decimal       getTaux()                 Returns the current record's "taux" value
 * @method string        getType()                 Returns the current record's "type" value
 * @method integer       getIdMaquette()           Returns the current record's "id_maquette" value
 * @method integer       getIdComptecomptable()    Returns the current record's "id_comptecomptable" value
 * @method integer       getIdContrepartie()       Returns the current record's "id_contrepartie" value
 * @method integer       getTiers()                Returns the current record's "tiers" value
 
 * @method integer       getCompteretenue()        Returns the current record's "compteretenue" value
 * @method integer       getIdCompteretenue()      Returns the current record's "id_compteretenue" value
 * @method Maquette      getMaquette()             Returns the current record's "Maquette" value
  * @method Plancomptable getPlancomptable()        Returns the current record's "Plancomptable" value
   * @method Plancomptable getPlancomptable4()       Returns the current record's "Plancomptable_4" value
 * @method Plandossiercomptable getPlandossiercomptable()        Returns the current record's "Plancomptable" value
 * @method Plandossiercomptable getPlandossiercomptable3()       Returns the current record's "Plancomptable_3" value
 * @method Lignemaquette setId()                   Sets the current record's "id" value
 * @method Lignemaquette setNumero()               Sets the current record's "numero" value
 * @method Lignemaquette setObligatoirecompte()    Sets the current record's "obligatoirecompte" value
 * @method Lignemaquette setObligatoiremontant()   Sets the current record's "obligatoiremontant" value
 * @method Lignemaquette setObligatoirecontre()    Sets the current record's "obligatoirecontre" value
 * @method Lignemaquette setSpecificationcompte()  Sets the current record's "specificationcompte" value
 * @method Lignemaquette setSpecificationmontant() Sets the current record's "specificationmontant" value
 * @method Lignemaquette setSpecificationcontre()  Sets the current record's "specificationcontre" value
 * @method Lignemaquette setMontant()              Sets the current record's "montant" value
 * @method Lignemaquette setNumerolignemontant()   Sets the current record's "numerolignemontant" value
 * @method Lignemaquette setTaux()                 Sets the current record's "taux" value
 * @method Lignemaquette setType()                 Sets the current record's "type" value
 * @method Lignemaquette setIdMaquette()           Sets the current record's "id_maquette" value
 * @method Lignemaquette setIdComptecomptable()    Sets the current record's "id_comptecomptable" value
 * @method Lignemaquette setIdContrepartie()       Sets the current record's "id_contrepartie" value
 * @method Lignemaquette setTiers()                Sets the current record's "tiers" value
 * @method Lignemaquette setCompteretenue()        Sets the current record's "compteretenue" value
 * @method Lignemaquette setIdCompteretenue()      Sets the current record's "id_compteretenue" value
 * @method Lignemaquette setMaquette()             Sets the current record's "Maquette" value
  * @method Lignemaquette setPlancomptable()        Sets the current record's "Plancomptable" value
 * @method Lignemaquette setPlancdossieromptable()        Sets the current record's "Plancomptable" value
 * @method Lignemaquette setPlancomptable4()       Sets the current record's "Plancomptable_4" value
 * @method Lignemaquette setPlandossiercomptable3()       Sets the current record's "Plancomptable_3" value
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLignemaquette extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lignemaquette');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'lignemaquette_id',
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('obligatoirecompte', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('obligatoiremontant', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('obligatoirecontre', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('specificationcompte', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 200,
             ));
        $this->hasColumn('specificationmontant', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 200,
             ));
        $this->hasColumn('specificationcontre', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 200,
             ));
        $this->hasColumn('montant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('numerolignemontant', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('taux', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('type', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 200,
             ));
        $this->hasColumn('id_maquette', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_comptecomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_contrepartie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tiers', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
			  $this->hasColumn('compteretenue', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_compteretenue', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Maquette', array(
             'local' => 'id_maquette',
             'foreign' => 'id'));

          $this->hasOne('Plancomptable as Plancomptable_4', array(
             'local' => 'id_compteretenue',
             'foreign' => 'id'));
	 $this->hasOne('Plancomptable', array(
             'local' => 'id_comptecomptable',
             'foreign' => 'id'));

        $this->hasOne('Plandossiercomptable as Plandossiercomptable_3', array(
             'local' => 'id_contrepartie',
             'foreign' => 'id'));
    }
}