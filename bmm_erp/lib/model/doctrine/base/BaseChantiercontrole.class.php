<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Chantiercontrole', 'doctrine');

/**
 * BaseChantiercontrole
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $datecreation
 * @property string $libelle
 * @property string $reference
 * @property string $objet
 * @property string $attributaire
 * @property integer $id_lieuchantier
 * @property string $dureeprobable
 * @property date $datedemarrage
 * @property decimal $montant
 * @property Lieuchantier $Lieuchantier
 * @property Doctrine_Collection $Rapportcontrole
 * 
 * @method integer             getId()              Returns the current record's "id" value
 * @method date                getDatecreation()    Returns the current record's "datecreation" value
 * @method string              getLibelle()         Returns the current record's "libelle" value
 * @method string              getReference()       Returns the current record's "reference" value
 * @method string              getObjet()           Returns the current record's "objet" value
 * @method string              getAttributaire()    Returns the current record's "attributaire" value
 * @method integer             getIdLieuchantier()  Returns the current record's "id_lieuchantier" value
 * @method string              getDureeprobable()   Returns the current record's "dureeprobable" value
 * @method date                getDatedemarrage()   Returns the current record's "datedemarrage" value
 * @method decimal             getMontant()         Returns the current record's "montant" value
 * @method Lieuchantier        getLieuchantier()    Returns the current record's "Lieuchantier" value
 * @method Doctrine_Collection getRapportcontrole() Returns the current record's "Rapportcontrole" collection
 * @method Chantiercontrole    setId()              Sets the current record's "id" value
 * @method Chantiercontrole    setDatecreation()    Sets the current record's "datecreation" value
 * @method Chantiercontrole    setLibelle()         Sets the current record's "libelle" value
 * @method Chantiercontrole    setReference()       Sets the current record's "reference" value
 * @method Chantiercontrole    setObjet()           Sets the current record's "objet" value
 * @method Chantiercontrole    setAttributaire()    Sets the current record's "attributaire" value
 * @method Chantiercontrole    setIdLieuchantier()  Sets the current record's "id_lieuchantier" value
 * @method Chantiercontrole    setDureeprobable()   Sets the current record's "dureeprobable" value
 * @method Chantiercontrole    setDatedemarrage()   Sets the current record's "datedemarrage" value
 * @method Chantiercontrole    setMontant()         Sets the current record's "montant" value
 * @method Chantiercontrole    setLieuchantier()    Sets the current record's "Lieuchantier" value
 * @method Chantiercontrole    setRapportcontrole() Sets the current record's "Rapportcontrole" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChantiercontrole extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('chantiercontrole');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'chantiercontrole_id',
             'length' => 4,
             ));
        $this->hasColumn('datecreation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('reference', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('objet', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('attributaire', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_lieuchantier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dureeprobable', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('datedemarrage', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('montant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0.000',
             'primary' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Lieuchantier', array(
             'local' => 'id_lieuchantier',
             'foreign' => 'id'));

        $this->hasMany('Rapportcontrole', array(
             'local' => 'id',
             'foreign' => 'id_chantiercontrole'));
    }
}