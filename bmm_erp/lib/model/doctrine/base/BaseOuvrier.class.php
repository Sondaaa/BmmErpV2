<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ouvrier', 'doctrine');

/**
 * BaseOuvrier
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $matricule
 * @property string $nom
 * @property string $prenom
 * @property integer $cin
 * @property string $idcnrps
 * @property date $dateafficliation
 * @property string $adresse
 * @property date $datenaissance
 * @property string $rib
 * @property integer $id_gouv
 * @property integer $id_pays
 * @property integer $id_situation
 * @property integer $id_sexe
 * @property integer $nbrenfant
 * @property integer $id_lieunaissance
 * @property Gouvernera $Gouvernera
 * @property Pays $Pays
 * @property Sexe $Sexe
 * @property Etatcivil $Etatcivil
 * @property Gouvernera $Gouvernera_5
 * @property Doctrine_Collection $Attestationouvrier
 * @property Doctrine_Collection $Mission
 * @property Doctrine_Collection $Ligneattestationouvrier
 * @property Doctrine_Collection $Tenues
 * @property Doctrine_Collection $Contratouvrier
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method string              getMatricule()               Returns the current record's "matricule" value
 * @method string              getNom()                     Returns the current record's "nom" value
 * @method string              getPrenom()                  Returns the current record's "prenom" value
 * @method integer             getCin()                     Returns the current record's "cin" value
 * @method string              getIdcnrps()                 Returns the current record's "idcnrps" value
 * @method date                getDateafficliation()        Returns the current record's "dateafficliation" value
 * @method string              getAdresse()                 Returns the current record's "adresse" value
 * @method date                getDatenaissance()           Returns the current record's "datenaissance" value
 * @method string             getRib()                     Returns the current record's "rib" value
 * @method integer             getIdGouv()                  Returns the current record's "id_gouv" value
 * @method integer             getIdPays()                  Returns the current record's "id_pays" value
 * @method integer             getIdSituation()             Returns the current record's "id_situation" value
 * @method integer             getIdSexe()                  Returns the current record's "id_sexe" value
 * @method integer             getNbrenfant()               Returns the current record's "nbrenfant" value
 * @method integer             getIdLieunaissance()         Returns the current record's "id_lieunaissance" value
 * @method Gouvernera          getGouvernera()              Returns the current record's "Gouvernera" value
 * @method Pays                getPays()                    Returns the current record's "Pays" value
 * @method Sexe                getSexe()                    Returns the current record's "Sexe" value
 * @method Etatcivil           getEtatcivil()               Returns the current record's "Etatcivil" value
 * @method Gouvernera          getGouvernera5()             Returns the current record's "Gouvernera_5" value
 * @method Doctrine_Collection getAttestationouvrier()      Returns the current record's "Attestationouvrier" collection
 * @method Doctrine_Collection getMission()                 Returns the current record's "Mission" collection
 * @method Doctrine_Collection getLigneattestationouvrier() Returns the current record's "Ligneattestationouvrier" collection
 * @method Doctrine_Collection getTenues()                  Returns the current record's "Tenues" collection
 * @method Doctrine_Collection getContratouvrier()          Returns the current record's "Contratouvrier" collection
 * @method Ouvrier             setId()                      Sets the current record's "id" value
 * @method Ouvrier             setMatricule()               Sets the current record's "matricule" value
 * @method Ouvrier             setNom()                     Sets the current record's "nom" value
 * @method Ouvrier             setPrenom()                  Sets the current record's "prenom" value
 * @method Ouvrier             setCin()                     Sets the current record's "cin" value
 * @method Ouvrier             setIdcnrps()                 Sets the current record's "idcnrps" value
 * @method Ouvrier             setDateafficliation()        Sets the current record's "dateafficliation" value
 * @method Ouvrier             setAdresse()                 Sets the current record's "adresse" value
 * @method Ouvrier             setDatenaissance()           Sets the current record's "datenaissance" value
 * @method Ouvrier             setRib()                     Sets the current record's "rib" value
 * @method Ouvrier             setIdGouv()                  Sets the current record's "id_gouv" value
 * @method Ouvrier             setIdPays()                  Sets the current record's "id_pays" value
 * @method Ouvrier             setIdSituation()             Sets the current record's "id_situation" value
 * @method Ouvrier             setIdSexe()                  Sets the current record's "id_sexe" value
 * @method Ouvrier             setNbrenfant()               Sets the current record's "nbrenfant" value
 * @method Ouvrier             setIdLieunaissance()         Sets the current record's "id_lieunaissance" value
 * @method Ouvrier             setGouvernera()              Sets the current record's "Gouvernera" value
 * @method Ouvrier             setPays()                    Sets the current record's "Pays" value
 * @method Ouvrier             setSexe()                    Sets the current record's "Sexe" value
 * @method Ouvrier             setEtatcivil()               Sets the current record's "Etatcivil" value
 * @method Ouvrier             setGouvernera5()             Sets the current record's "Gouvernera_5" value
 * @method Ouvrier             setAttestationouvrier()      Sets the current record's "Attestationouvrier" collection
 * @method Ouvrier             setMission()                 Sets the current record's "Mission" collection
 * @method Ouvrier             setLigneattestationouvrier() Sets the current record's "Ligneattestationouvrier" collection
 * @method Ouvrier             setTenues()                  Sets the current record's "Tenues" collection
 * @method Ouvrier             setContratouvrier()          Sets the current record's "Contratouvrier" collection
 * 
 * @package    PhpProjecttest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOuvrier extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ouvrier');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'length' => 4,
             'sequence' => 'ouvrier_id',
             ));
        $this->hasColumn('matricule', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('nom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('prenom', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('cin', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('idcnrps', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('dateafficliation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('adresse', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('datenaissance', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('rib', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_gouv', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_pays', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_situation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_sexe', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nbrenfant', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_lieunaissance', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Gouvernera', array(
             'local' => 'id_gouv',
             'foreign' => 'id'));

        $this->hasOne('Pays', array(
             'local' => 'id_pays',
             'foreign' => 'id'));

        $this->hasOne('Sexe', array(
             'local' => 'id_sexe',
             'foreign' => 'id'));

        $this->hasOne('Etatcivil', array(
             'local' => 'id_situation',
             'foreign' => 'id'));

        $this->hasOne('Gouvernera as Gouvernera_5', array(
             'local' => 'id_lieunaissance',
             'foreign' => 'id'));

        $this->hasMany('Attestationouvrier', array(
             'local' => 'id',
             'foreign' => 'id_ouvrier'));

        $this->hasMany('Mission', array(
             'local' => 'id',
             'foreign' => 'id_ouvrier'));

        $this->hasMany('Ligneattestationouvrier', array(
             'local' => 'id',
             'foreign' => 'id_ouvrier'));

        $this->hasMany('Tenues', array(
             'local' => 'id',
             'foreign' => 'id_ouvrier'));

        $this->hasMany('Contratouvrier', array(
             'local' => 'id',
             'foreign' => 'id_ouvrier'));
    }
}