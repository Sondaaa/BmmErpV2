<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Client', 'doctrine');

/**
 * BaseClient
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $reference
 * @property string $nom
 * @property string $prenom
 * @property string $rs
 * @property string $mail
 * @property string $tel
 * @property string $gsm
 * @property integer $id_activite
 * @property string $nfiche
 * @property integer $id_user
 * @property date $datecreation
 * @property string $codeclt
 * @property string $observation
 * @property integer $id_plancomptable
 * @property integer $id_dossier
 * @property Dossiercomptable $Dossiercomptable
 * @property Activitetiers $Activitetiers
 * @property Utilisateur $Utilisateur
 * @property Plancomptable $Plancomptable
 * 
 * @method integer             getId()                         Returns the current record's "id" value
 * @method string              getReference()                  Returns the current record's "reference" value
 * @method string              getNom()                        Returns the current record's "nom" value
 * @method string              getPrenom()                     Returns the current record's "prenom" value
 * @method string              getRs()                         Returns the current record's "rs" value
 * @method string              getMail()                       Returns the current record's "mail" value
 * @method string              getTel()                        Returns the current record's "tel" value
 * @method string              getGsm()                        Returns the current record's "gsm" value
 * @method integer             getIdActivite()                 Returns the current record's "id_activite" value
 * @method string              getNfiche()                     Returns the current record's "nfiche" value
 * @method integer             getIdUser()                     Returns the current record's "id_user" value
 * @method date                getDatecreation()               Returns the current record's "datecreation" value
 * @method string              getCodeclt()                    Returns the current record's "codeclt" value
 * @method string              getObservation()                Returns the current record's "observation" value
 * @method integer             getIdPlancomptable()            Returns the current record's "id_plancomptable" value
 * @method integer             getIdDossier()                  Returns the current record's "id_dossier" value
 * @method Dossiercomptable    getDossiercomptable()           Returns the current record's "Dossiercomptable" value
 * @method Activitetiers       getActivitetiers()              Returns the current record's "Activitetiers" value
 * @method Utilisateur         getUtilisateur()                Returns the current record's "Utilisateur" value
 * @method Plancomptable       getPlancomptable()              Returns the current record's "Plancomptable" value
 * @method Client              setId()                         Sets the current record's "id" value
 * @method Client              setReference()                  Sets the current record's "reference" value
 * @method Client              setNom()                        Sets the current record's "nom" value
 * @method Client              setPrenom()                     Sets the current record's "prenom" value
 * @method Client              setRs()                         Sets the current record's "rs" value
 * @method Client              setMail()                       Sets the current record's "mail" value
 * @method Client              setTel()                        Sets the current record's "tel" value
 * @method Client              setGsm()                        Sets the current record's "gsm" value
 * @method Client              setIdActivite()                 Sets the current record's "id_activite" value
 * @method Client              setNfiche()                     Sets the current record's "nfiche" value
 * @method Client              setIdUser()                     Sets the current record's "id_user" value
 * @method Client              setDatecreation()               Sets the current record's "datecreation" value
 * @method Client              setCodeclt()                    Sets the current record's "codeclt" value
 * @method Client              setObservation()                Sets the current record's "observation" value
 * @method Client              setIdPlancomptable()            Sets the current record's "id_plancomptable" value
 * @method Client              setIdDossier()                  Sets the current record's "id_dossier" value
 * @method Client              setDossiercomptable()           Sets the current record's "Dossiercomptable" value
 * @method Client              setPlancomptable()              Sets the current record's "Plancomptable" value
 * @method Client              setActivitetiers()              Sets the current record's "Activitetiers" value
 * @method Client              setUtilisateur()                Sets the current record's "Utilisateur" value
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClient extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('client');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'client_id',
             'length' => 4,
             ));
        $this->hasColumn('reference', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('nom', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('prenom', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('rs', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('mail', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('tel', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('gsm', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_activite', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('nfiche', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 10,
             ));
        $this->hasColumn('id_user', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datecreation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('codeclt', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 10,
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_plancomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Activitetiers', array(
             'local' => 'id_activite',
             'foreign' => 'id'));

        $this->hasOne('Utilisateur', array(
             'local' => 'id_user',
             'foreign' => 'id'));

        $this->hasOne('Plancomptable', array(
             'local' => 'id_plancomptable',
             'foreign' => 'id'));
        
        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));
    }
}