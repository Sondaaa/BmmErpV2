<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Direction', 'doctrine');

/**
 * BaseDirection
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_site
 * @property integer $id_projet
 * @property Projet $Projet
 * @property Site $Site
 * @property Doctrine_Collection $Bureaux
 * @property Doctrine_Collection $Demandeur
 * @property Doctrine_Collection $Documentachat
 * @property Doctrine_Collection $Sousdirection
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getLibelle()       Returns the current record's "libelle" value
 * @method integer             getIdSite()        Returns the current record's "id_site" value
 * @method integer             getIdProjet()      Returns the current record's "id_projet" value
 * @method Projet              getProjet()        Returns the current record's "Projet" value
 * @method Site                getSite()          Returns the current record's "Site" value
 * @method Doctrine_Collection getBureaux()       Returns the current record's "Bureaux" collection
 * @method Doctrine_Collection getDemandeur()     Returns the current record's "Demandeur" collection
 * @method Doctrine_Collection getDocumentachat() Returns the current record's "Documentachat" collection
 * @method Doctrine_Collection getSousdirection() Returns the current record's "Sousdirection" collection
 * @method Direction           setId()            Sets the current record's "id" value
 * @method Direction           setLibelle()       Sets the current record's "libelle" value
 * @method Direction           setIdSite()        Sets the current record's "id_site" value
 * @method Direction           setIdProjet()      Sets the current record's "id_projet" value
 * @method Direction           setProjet()        Sets the current record's "Projet" value
 * @method Direction           setSite()          Sets the current record's "Site" value
 * @method Direction           setBureaux()       Sets the current record's "Bureaux" collection
 * @method Direction           setDemandeur()     Sets the current record's "Demandeur" collection
 * @method Direction           setDocumentachat() Sets the current record's "Documentachat" collection
 * @method Direction           setSousdirection() Sets the current record's "Sousdirection" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDirection extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('direction');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'direction_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 254, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 254,
             ));
        $this->hasColumn('id_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_projet', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Projet', array(
             'local' => 'id_projet',
             'foreign' => 'id'));

        $this->hasOne('Site', array(
             'local' => 'id_site',
             'foreign' => 'id'));

        $this->hasMany('Bureaux', array(
             'local' => 'id',
             'foreign' => 'id_direction'));

        $this->hasMany('Demandeur', array(
             'local' => 'id',
             'foreign' => 'id_direction'));

        $this->hasMany('Documentachat', array(
             'local' => 'id',
             'foreign' => 'id_lignedirectionsite'));

        $this->hasMany('Sousdirection', array(
             'local' => 'id',
             'foreign' => 'id_direction'));
    }
}