<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Detailprix', 'doctrine');

/**
 * BaseDetailprix
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property decimal $totalgeneral
 * @property decimal $rrr
 * @property decimal $totalapresremise
 * @property integer $id_tva
 * @property decimal $tauxtva
 * @property decimal $mnttva
 * @property decimal $retenuegarentie
 * @property decimal $total
 * @property decimal $deponseantirieur
 * @property decimal $netapayer
 * @property decimal $htva
 * @property date $datecreation
 * @property integer $id_lots
 * @property integer $id_typedetailprix
 * @property decimal $mntavance
 * @property decimal $mntretenue
 * @property integer $numero
 * @property integer $etat
 * @property Lots $Lots
 * @property Typedetailprix $Typedetailprix
 * @property Doctrine_Collection $Sousdetailprix
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method decimal             getTotalgeneral()      Returns the current record's "totalgeneral" value
 * @method decimal             getRrr()               Returns the current record's "rrr" value
 * @method decimal             getTotalapresremise()  Returns the current record's "totalapresremise" value
 * @method integer             getIdTva()             Returns the current record's "id_tva" value
 * @method decimal             getTauxtva()           Returns the current record's "tauxtva" value
 * @method decimal             getMnttva()            Returns the current record's "mnttva" value
 * @method decimal             getRetenuegarentie()   Returns the current record's "retenuegarentie" value
 * @method decimal             getTotal()             Returns the current record's "total" value
 * @method decimal             getDeponseantirieur()  Returns the current record's "deponseantirieur" value
 * @method decimal             getNetapayer()         Returns the current record's "netapayer" value
 * @method decimal             getHtva()              Returns the current record's "htva" value
 * @method date                getDatecreation()      Returns the current record's "datecreation" value
 * @method integer             getIdLots()            Returns the current record's "id_lots" value
 * @method integer             getIdTypedetailprix()  Returns the current record's "id_typedetailprix" value
 * @method decimal             getMntavance()         Returns the current record's "mntavance" value
 * @method decimal             getMntretenue()        Returns the current record's "mntretenue" value
 * @method integer             getNumero()            Returns the current record's "numero" value
 * @method integer             getEtat()              Returns the current record's "etat" value
 * @method Lots                getLots()              Returns the current record's "Lots" value
 * @method Typedetailprix      getTypedetailprix()    Returns the current record's "Typedetailprix" value
 * @method Doctrine_Collection getSousdetailprix()    Returns the current record's "Sousdetailprix" collection
 * @method Detailprix          setId()                Sets the current record's "id" value
 * @method Detailprix          setTotalgeneral()      Sets the current record's "totalgeneral" value
 * @method Detailprix          setRrr()               Sets the current record's "rrr" value
 * @method Detailprix          setTotalapresremise()  Sets the current record's "totalapresremise" value
 * @method Detailprix          setIdTva()             Sets the current record's "id_tva" value
 * @method Detailprix          setTauxtva()           Sets the current record's "tauxtva" value
 * @method Detailprix          setMnttva()            Sets the current record's "mnttva" value
 * @method Detailprix          setRetenuegarentie()   Sets the current record's "retenuegarentie" value
 * @method Detailprix          setTotal()             Sets the current record's "total" value
 * @method Detailprix          setDeponseantirieur()  Sets the current record's "deponseantirieur" value
 * @method Detailprix          setNetapayer()         Sets the current record's "netapayer" value
 * @method Detailprix          setHtva()              Sets the current record's "htva" value
 * @method Detailprix          setDatecreation()      Sets the current record's "datecreation" value
 * @method Detailprix          setIdLots()            Sets the current record's "id_lots" value
 * @method Detailprix          setIdTypedetailprix()  Sets the current record's "id_typedetailprix" value
 * @method Detailprix          setMntavance()         Sets the current record's "mntavance" value
 * @method Detailprix          setMntretenue()        Sets the current record's "mntretenue" value
 * @method Detailprix          setNumero()            Sets the current record's "numero" value
 * @method Detailprix          setEtat()              Sets the current record's "etat" value
 * @method Detailprix          setLots()              Sets the current record's "Lots" value
 * @method Detailprix          setTypedetailprix()    Sets the current record's "Typedetailprix" value
 * @method Detailprix          setSousdetailprix()    Sets the current record's "Sousdetailprix" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDetailprix extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('detailprix');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'detailprix_id',
             'length' => 4,
             ));
        $this->hasColumn('totalgeneral', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('rrr', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totalapresremise', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_tva', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tauxtva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mnttva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('retenuegarentie', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('total', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('deponseantirieur', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('netapayer', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('htva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('datecreation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_lots', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_typedetailprix', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('mntavance', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntretenue', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('etat', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Lots', array(
             'local' => 'id_lots',
             'foreign' => 'id'));

        $this->hasOne('Typedetailprix', array(
             'local' => 'id_typedetailprix',
             'foreign' => 'id'));

        $this->hasMany('Sousdetailprix', array(
             'local' => 'id',
             'foreign' => 'id_detail'));
    }
}