<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bordereauvirement', 'doctrine');

/**
 * BaseBordereauvirement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property integer $id_compte
 * @property integer $id_typeoperation
 * @property integer $id_naturecompte
 * @property decimal $total
 * @property integer $id_papierordrepostal
 * @property boolean $valide
 * @property Caissesbanques $Caissesbanques
 * @property Typeoperation $Typeoperation
 * @property Papierordrepostal $Papierordrepostal
 * @property Naturebanque $Naturebanque
 * @property Doctrine_Collection $Mouvementbanciare
 * 
 * @method integer             getId()                   Returns the current record's "id" value
 * @method date                getDate()                 Returns the current record's "date" value
 * @method integer             getIdCompte()             Returns the current record's "id_compte" value
 * @method integer             getIdTypeoperation()      Returns the current record's "id_typeoperation" value
 * @method integer             getIdNaturecompte()       Returns the current record's "id_naturecompte" value
 * @method decimal             getTotal()                Returns the current record's "total" value
 * @method integer             getIdPapierordrepostal()  Returns the current record's "id_papierordrepostal" value
 * @method boolean             getValide()               Returns the current record's "valide" value
 * @method Caissesbanques      getCaissesbanques()       Returns the current record's "Caissesbanques" value
 * @method Typeoperation       getTypeoperation()        Returns the current record's "Typeoperation" value
 * @method Papierordrepostal   getPapierordrepostal()    Returns the current record's "Papierordrepostal" value
 * @method Naturebanque        getNaturebanque()         Returns the current record's "Naturebanque" value
 * @method Doctrine_Collection getMouvementbanciare()    Returns the current record's "Mouvementbanciare" collection
 * @method Bordereauvirement   setId()                   Sets the current record's "id" value
 * @method Bordereauvirement   setDate()                 Sets the current record's "date" value
 * @method Bordereauvirement   setIdCompte()             Sets the current record's "id_compte" value
 * @method Bordereauvirement   setIdTypeoperation()      Sets the current record's "id_typeoperation" value
 * @method Bordereauvirement   setIdNaturecompte()       Sets the current record's "id_naturecompte" value
 * @method Bordereauvirement   setTotal()                Sets the current record's "total" value
 * @method Bordereauvirement   setIdPapierordrepostal()  Sets the current record's "id_papierordrepostal" value
 * @method Bordereauvirement   setValide()               Sets the current record's "valide" value
 * @method Bordereauvirement   setCaissesbanques()       Sets the current record's "Caissesbanques" value
 * @method Bordereauvirement   setTypeoperation()        Sets the current record's "Typeoperation" value
 * @method Bordereauvirement   setPapierordrepostal()    Sets the current record's "Papierordrepostal" value
 * @method Bordereauvirement   setNaturebanque()         Sets the current record's "Naturebanque" value
 * @method Bordereauvirement   setMouvementbanciare()    Sets the current record's "Mouvementbanciare" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBordereauvirement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bordereauvirement');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'bordereauvirement_id',
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_compte', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_typeoperation', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_naturecompte', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('total', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_papierordrepostal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('valide', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Caissesbanques', array(
             'local' => 'id_compte',
             'foreign' => 'id'));

        $this->hasOne('Typeoperation', array(
             'local' => 'id_typeoperation',
             'foreign' => 'id'));

        $this->hasOne('Papierordrepostal', array(
             'local' => 'id_papierordrepostal',
             'foreign' => 'id'));

        $this->hasOne('Naturebanque', array(
             'local' => 'id_naturecompte',
             'foreign' => 'id'));

        $this->hasMany('Mouvementbanciare', array(
             'local' => 'id',
             'foreign' => 'id_bordereauvirement'));
    }
}