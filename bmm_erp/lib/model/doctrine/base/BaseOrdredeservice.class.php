<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ordredeservice', 'doctrine');

/**
 * BaseOrdredeservice
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $referece
 * @property string $object
 * @property string $description
 * @property integer $id_type
 * @property date $dateios
 * @property integer $id_benificaire
 * @property integer $delaios
 * @property Typeios $Typeios
 * @property Lots $Lots
 * 
 * @method integer        getId()             Returns the current record's "id" value
 * @method string         getReferece()       Returns the current record's "referece" value
 * @method string         getObject()         Returns the current record's "object" value
 * @method string         getDescription()    Returns the current record's "description" value
 * @method integer        getIdType()         Returns the current record's "id_type" value
 * @method date           getDateios()        Returns the current record's "dateios" value
 * @method integer        getIdBenificaire()  Returns the current record's "id_benificaire" value
 * @method integer        getDelaios()        Returns the current record's "delaios" value
 * @method Typeios        getTypeios()        Returns the current record's "Typeios" value
 * @method Lots           getLots()           Returns the current record's "Lots" value
 * @method Ordredeservice setId()             Sets the current record's "id" value
 * @method Ordredeservice setReferece()       Sets the current record's "referece" value
 * @method Ordredeservice setObject()         Sets the current record's "object" value
 * @method Ordredeservice setDescription()    Sets the current record's "description" value
 * @method Ordredeservice setIdType()         Sets the current record's "id_type" value
 * @method Ordredeservice setDateios()        Sets the current record's "dateios" value
 * @method Ordredeservice setIdBenificaire()  Sets the current record's "id_benificaire" value
 * @method Ordredeservice setDelaios()        Sets the current record's "delaios" value
 * @method Ordredeservice setTypeios()        Sets the current record's "Typeios" value
 * @method Ordredeservice setLots()           Sets the current record's "Lots" value
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseOrdredeservice extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ordredeservice');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'ordredeservice_id',
             'length' => 4,
             ));
        $this->hasColumn('referece', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('object', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dateios', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_benificaire', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('delaios', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Typeios', array(
             'local' => 'id_type',
             'foreign' => 'id'));

        $this->hasOne('Lots', array(
             'local' => 'id_benificaire',
             'foreign' => 'id'));
    }
}