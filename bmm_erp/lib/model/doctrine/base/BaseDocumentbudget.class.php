<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Documentbudget', 'doctrine');

/**
 * BaseDocumentbudget
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $numero
 * @property date $datecreation
 * @property integer $id_type
 * @property integer $id_budget
 * @property decimal $mnt
 * @property decimal $mntengage
 * @property decimal $mntrelicat
 * @property decimal $mntnet
 * @property integer $id_documentbudget
 * @property integer $id_declaration
 * @property string $description
 * @property boolean $annule
 * @property decimal $mntresteresilier
 * @property decimal $mntconsomme
 * @property Ligprotitrub $Ligprotitrub
 * @property Typedocbudget $Typedocbudget
 * @property Declaration $Declaration
 * @property Doctrine_Collection $Documentbudget
 * @property Doctrine_Collection $Certificatretenue
 * @property Doctrine_Collection $Piecejoint
 * @property Doctrine_Collection $Mouvementbanciare
 * @property Doctrine_Collection $Piecejointbudget
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getNumero()            Returns the current record's "numero" value
 * @method date                getDatecreation()      Returns the current record's "datecreation" value
 * @method integer             getIdType()            Returns the current record's "id_type" value
 * @method integer             getIdBudget()          Returns the current record's "id_budget" value
 * @method decimal             getMnt()               Returns the current record's "mnt" value
 * @method decimal             getMntengage()         Returns the current record's "mntengage" value
 * @method decimal             getMntrelicat()        Returns the current record's "mntrelicat" value
 * @method decimal             getMntnet()            Returns the current record's "mntnet" value
 * @method integer             getIdDocumentbudget()  Returns the current record's "id_documentbudget" value
 * @method integer             getIdDeclaration()     Returns the current record's "id_declaration" value
 * @method boolean             getAnnule()            Returns the current record's "annule" value
 * @method string              getDescription()       Returns the current record's "description" value
 * @method decimal             getMntresteresilier()  Returns the current record's "mntresteresilier" value
 * @method decimal             getMntconsomme()       Returns the current record's "mntconsomme" value
 * @method Ligprotitrub        getLigprotitrub()      Returns the current record's "Ligprotitrub" value
 * @method Typedocbudget       getTypedocbudget()     Returns the current record's "Typedocbudget" value
 * @method Declaration         getDeclaration()       Returns the current record's "Declaration" value
 * @method Doctrine_Collection getDocumentbudget()    Returns the current record's "Documentbudget" collection
 * @method Doctrine_Collection getCertificatretenue() Returns the current record's "Certificatretenue" collection
 * @method Doctrine_Collection getPiecejoint()        Returns the current record's "Piecejoint" collection
 * @method Doctrine_Collection getMouvementbanciare() Returns the current record's "Mouvementbanciare" collection
 * @method Doctrine_Collection getPiecejointbudget()  Returns the current record's "Piecejointbudget" collection
 * @method Documentbudget      setId()                Sets the current record's "id" value
 * @method Documentbudget      setNumero()            Sets the current record's "numero" value
 * @method Documentbudget      setDatecreation()      Sets the current record's "datecreation" value
 * @method Documentbudget      setIdType()            Sets the current record's "id_type" value
 * @method Documentbudget      setIdBudget()          Sets the current record's "id_budget" value
 * @method Documentbudget      setMnt()               Sets the current record's "mnt" value
 * @method Documentbudget      setMntengage()         Sets the current record's "mntengage" value
 * @method Documentbudget      setMntrelicat()        Sets the current record's "mntrelicat" value
 * @method Documentbudget      setMntnet()            Sets the current record's "mntnet" value
 * @method Documentbudget      setIdDocumentbudget()  Sets the current record's "id_documentbudget" value
 * @method Documentbudget      setDescription()       Sets the current record's "description" value
 * @method Documentbudget      setIdDeclaration()     Sets the current record's "id_declaration" value
 * @method Documentbudget      setAnnule()            Sets the current record's "annule" value
 * @method Documentbudget      setMntresteresilier()  Sets the current record's "mntresteresilier" value
 * @method Documentbudget      setMntconsomme()       Sets the current record's "mntconsomme" value
 * @method Documentbudget      setLigprotitrub()      Sets the current record's "Ligprotitrub" value
 * @method Documentbudget      setTypedocbudget()     Sets the current record's "Typedocbudget" value
 * @method Documentbudget      setDeclaration()       Sets the current record's "Declaration" value
 * @method Documentbudget      setDocumentbudget()    Sets the current record's "Documentbudget" collection
 * @method Documentbudget      setCertificatretenue() Sets the current record's "Certificatretenue" collection
 * @method Documentbudget      setPiecejoint()        Sets the current record's "Piecejoint" collection
 * @method Documentbudget      setMouvementbanciare() Sets the current record's "Mouvementbanciare" collection
 * @method Documentbudget      setPiecejointbudget()  Sets the current record's "Piecejointbudget" collection
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDocumentbudget extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('documentbudget');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'documentbudget_id',
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datecreation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_budget', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('mnt', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntengage', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntrelicat', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntnet', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_documentbudget', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_declaration', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('annule', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => 'false',
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('mntresteresilier', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('mntconsomme', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
			   $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Ligprotitrub', array(
             'local' => 'id_budget',
             'foreign' => 'id'));

        $this->hasOne('Typedocbudget', array(
             'local' => 'id_type',
             'foreign' => 'id'));

        $this->hasOne('Declaration', array(
             'local' => 'id_declaration',
             'foreign' => 'id'));

        $this->hasMany('Documentbudget', array(
             'local' => 'id',
             'foreign' => 'id_documentbudget'));

        $this->hasMany('Certificatretenue', array(
             'local' => 'id',
             'foreign' => 'id_documentbudget'));

        $this->hasMany('Piecejoint', array(
             'local' => 'id',
             'foreign' => 'id_docbudget'));

        $this->hasMany('Mouvementbanciare', array(
             'local' => 'id',
             'foreign' => 'id_documentbudget'));

        $this->hasMany('Piecejointbudget', array(
             'local' => 'id',
             'foreign' => 'id_documentbudget'));
    }
}