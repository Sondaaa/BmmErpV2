<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Movementpiece', 'doctrine');

/**
 * BaseMovementpiece
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $reference
 * @property decimal $montant
 * @property date $dateimportation
 * @property integer $saisie
 * @property integer $id_piececomptable
 * @property integer $numero
 * @property date $datevaleur
 * @property string $libelle
 * @property integer $id_comptecomptable
 * @property integer $id_dossier
 * @property string $type
 * @property Dossiercomptable $Dossiercomptable
 * @property Plandossiercomptable $Plandossiercomptable
 * @property Piececomptable $Piececomptable
 * @property Doctrine_Collection $Lignepiececomptable
 * 
 * @method integer              getId()                   Returns the current record's "id" value
 * @method date                 getDate()                 Returns the current record's "date" value
 * @method string               getReference()            Returns the current record's "reference" value
 * @method decimal              getMontant()              Returns the current record's "montant" value
 * @method date                 getDateimportation()      Returns the current record's "dateimportation" value
 * @method integer              getSaisie()               Returns the current record's "saisie" value
 * @method integer              getIdPiececomptable()     Returns the current record's "id_piececomptable" value
 * @method integer              getNumero()               Returns the current record's "numero" value
 * @method date                 getDatevaleur()           Returns the current record's "datevaleur" value
 * @method string               getLibelle()              Returns the current record's "libelle" value
 * @method integer              getIdComptecomptable()    Returns the current record's "id_comptecomptable" value
 * @method integer              getIdDossier()            Returns the current record's "id_dossier" value
 * @method string               getType()                 Returns the current record's "type" value
 * @method Dossiercomptable     getDossiercomptable()     Returns the current record's "Dossiercomptable" value
 * @method Plandossiercomptable getPlandossiercomptable() Returns the current record's "Plandossiercomptable" value
 * @method Piececomptable       getPiececomptable()       Returns the current record's "Piececomptable" value
 * @method Doctrine_Collection  getLignepiececomptable()  Returns the current record's "Lignepiececomptable" collection
 * @method Movementpiece        setId()                   Sets the current record's "id" value
 * @method Movementpiece        setDate()                 Sets the current record's "date" value
 * @method Movementpiece        setReference()            Sets the current record's "reference" value
 * @method Movementpiece        setMontant()              Sets the current record's "montant" value
 * @method Movementpiece        setDateimportation()      Sets the current record's "dateimportation" value
 * @method Movementpiece        setSaisie()               Sets the current record's "saisie" value
 * @method Movementpiece        setIdPiececomptable()     Sets the current record's "id_piececomptable" value
 * @method Movementpiece        setNumero()               Sets the current record's "numero" value
 * @method Movementpiece        setDatevaleur()           Sets the current record's "datevaleur" value
 * @method Movementpiece        setLibelle()              Sets the current record's "libelle" value
 * @method Movementpiece        setIdComptecomptable()    Sets the current record's "id_comptecomptable" value
 * @method Movementpiece        setIdDossier()            Sets the current record's "id_dossier" value
 * @method Movementpiece        setType()                 Sets the current record's "type" value
 * @method Movementpiece        setDossiercomptable()     Sets the current record's "Dossiercomptable" value
 * @method Movementpiece        setPlandossiercomptable() Sets the current record's "Plandossiercomptable" value
 * @method Movementpiece        setPiececomptable()       Sets the current record's "Piececomptable" value
 * @method Movementpiece        setLignepiececomptable()  Sets the current record's "Lignepiececomptable" collection
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseMovementpiece extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('movementpiece');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'movementpiece_id',
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('montant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('dateimportation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('saisie', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('id_piececomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datevaleur', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('libelle', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_comptecomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('type', 'string', 25, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Plandossiercomptable', array(
             'local' => 'id_comptecomptable',
             'foreign' => 'id'));

        $this->hasOne('Piececomptable', array(
             'local' => 'id_piececomptable',
             'foreign' => 'id'));

        $this->hasMany('Lignepiececomptable', array(
             'local' => 'id',
             'foreign' => 'id_mouvementcomptable'));
    }
}