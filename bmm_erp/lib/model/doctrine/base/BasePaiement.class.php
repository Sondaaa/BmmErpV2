<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Paiement', 'doctrine');

/**
 * BasePaiement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property integer $id_contribution
 * @property boolean $tfp
 * @property boolean $foprolos
 * @property integer $mois
 * @property integer $annee
 * @property decimal $salairenet
 * @property decimal $netapayer
 * @property integer $id_dossier
 * @property decimal $netsociale
 * @property decimal $salaireimposable
 * @property decimal $abattementfraaisprof
 * @property decimal $abattement
 * @property decimal $retenueimposable
 * @property decimal $imposablemensuel
 * @property decimal $abattementenfant
 * @property decimal $salairebrut
 * @property decimal $totalretenue
 * @property integer $id_entetpaie
 * @property Agents $Agents
 * @property Contribitionpatronale $Contribitionpatronale
 * @property Dossiercomptable $Dossiercomptable
 * @property Entetepaie $Entetepaie
 * 
 * @method integer               getId()                    Returns the current record's "id" value
 * @method integer               getIdAgents()              Returns the current record's "id_agents" value
 * @method integer               getIdContribution()        Returns the current record's "id_contribution" value
 * @method boolean               getTfp()                   Returns the current record's "tfp" value
 * @method boolean               getFoprolos()              Returns the current record's "foprolos" value
 * @method integer               getMois()                  Returns the current record's "mois" value
 * @method integer               getAnnee()                 Returns the current record's "annee" value
 * @method decimal               getSalairenet()            Returns the current record's "salairenet" value
 * @method decimal               getNetapayer()             Returns the current record's "netapayer" value
 * @method integer               getIdDossier()             Returns the current record's "id_dossier" value
 * @method decimal               getNetsociale()            Returns the current record's "netsociale" value
 * @method decimal               getSalaireimposable()      Returns the current record's "salaireimposable" value
 * @method decimal               getAbattementfraaisprof()  Returns the current record's "abattementfraaisprof" value
 * @method decimal               getAbattement()            Returns the current record's "abattement" value
 * @method decimal               getRetenueimposable()      Returns the current record's "retenueimposable" value
 * @method decimal               getImposablemensuel()      Returns the current record's "imposablemensuel" value
 * @method decimal               getAbattementenfant()      Returns the current record's "abattementenfant" value
 * @method decimal               getSalairebrut()           Returns the current record's "salairebrut" value
 * @method decimal               getTotalretenue()          Returns the current record's "totalretenue" value
 * @method integer               getIdEntetpaie()           Returns the current record's "id_entetpaie" value
 * @method Agents                getAgents()                Returns the current record's "Agents" value
 * @method Contribitionpatronale getContribitionpatronale() Returns the current record's "Contribitionpatronale" value
 * @method Dossiercomptable      getDossiercomptable()      Returns the current record's "Dossiercomptable" value
 * @method Entetepaie            getEntetepaie()            Returns the current record's "Entetepaie" value
 * @method Paiement              setId()                    Sets the current record's "id" value
 * @method Paiement              setIdAgents()              Sets the current record's "id_agents" value
 * @method Paiement              setIdContribution()        Sets the current record's "id_contribution" value
 * @method Paiement              setTfp()                   Sets the current record's "tfp" value
 * @method Paiement              setFoprolos()              Sets the current record's "foprolos" value
 * @method Paiement              setMois()                  Sets the current record's "mois" value
 * @method Paiement              setAnnee()                 Sets the current record's "annee" value
 * @method Paiement              setSalairenet()            Sets the current record's "salairenet" value
 * @method Paiement              setNetapayer()             Sets the current record's "netapayer" value
 * @method Paiement              setIdDossier()             Sets the current record's "id_dossier" value
 * @method Paiement              setNetsociale()            Sets the current record's "netsociale" value
 * @method Paiement              setSalaireimposable()      Sets the current record's "salaireimposable" value
 * @method Paiement              setAbattementfraaisprof()  Sets the current record's "abattementfraaisprof" value
 * @method Paiement              setAbattement()            Sets the current record's "abattement" value
 * @method Paiement              setRetenueimposable()      Sets the current record's "retenueimposable" value
 * @method Paiement              setImposablemensuel()      Sets the current record's "imposablemensuel" value
 * @method Paiement              setAbattementenfant()      Sets the current record's "abattementenfant" value
 * @method Paiement              setSalairebrut()           Sets the current record's "salairebrut" value
 * @method Paiement              setTotalretenue()          Sets the current record's "totalretenue" value
 * @method Paiement              setIdEntetpaie()           Sets the current record's "id_entetpaie" value
 * @method Paiement              setAgents()                Sets the current record's "Agents" value
 * @method Paiement              setContribitionpatronale() Sets the current record's "Contribitionpatronale" value
 * @method Paiement              setDossiercomptable()      Sets the current record's "Dossiercomptable" value
 * @method Paiement              setEntetepaie()            Sets the current record's "Entetepaie" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePaiement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('paiement');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'paiement_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_contribution', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tfp', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('foprolos', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('mois', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('annee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('salairenet', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('netapayer', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('netsociale', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('salaireimposable', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('abattementfraaisprof', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('abattement', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('retenueimposable', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('imposablemensuel', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('abattementenfant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('salairebrut', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totalretenue', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_entetpaie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Contribitionpatronale', array(
             'local' => 'id_contribution',
             'foreign' => 'id'));

        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Entetepaie', array(
             'local' => 'id_entetpaie',
             'foreign' => 'id'));
    }
}