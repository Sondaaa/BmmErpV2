<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Rapporttravaux', 'doctrine');

/**
 * BaseRapporttravaux
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $libelle
 * @property integer $id_type
 * @property integer $annee
 * @property decimal $montant
 * @property Typerapport $Typerapport
 * @property Doctrine_Collection $Travailrapporttravaux
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method date                getDate()                  Returns the current record's "date" value
 * @method string              getLibelle()               Returns the current record's "libelle" value
 * @method integer             getIdType()                Returns the current record's "id_type" value
 * @method integer             getAnnee()                 Returns the current record's "annee" value
 * @method decimal             getMontant()               Returns the current record's "montant" value
 * @method Typerapport         getTyperapport()           Returns the current record's "Typerapport" value
 * @method Doctrine_Collection getTravailrapporttravaux() Returns the current record's "Travailrapporttravaux" collection
 * @method Rapporttravaux      setId()                    Sets the current record's "id" value
 * @method Rapporttravaux      setDate()                  Sets the current record's "date" value
 * @method Rapporttravaux      setLibelle()               Sets the current record's "libelle" value
 * @method Rapporttravaux      setIdType()                Sets the current record's "id_type" value
 * @method Rapporttravaux      setAnnee()                 Sets the current record's "annee" value
 * @method Rapporttravaux      setMontant()               Sets the current record's "montant" value
 * @method Rapporttravaux      setTyperapport()           Sets the current record's "Typerapport" value
 * @method Rapporttravaux      setTravailrapporttravaux() Sets the current record's "Travailrapporttravaux" collection
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRapporttravaux extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rapporttravaux');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'rapporttravaux_id',
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_type', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('annee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('montant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Typerapport', array(
             'local' => 'id_type',
             'foreign' => 'id'));

        $this->hasMany('Travailrapporttravaux', array(
             'local' => 'id',
             'foreign' => 'id_rapporttravaux'));
        
        $this->hasMany('Articlerapporttravaux', array(
             'local' => 'id',
             'foreign' => 'id_rapporttravaux'));
    }
}