<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Journalcentralisateur', 'doctrine');

/**
 * BaseJournalcentralisateur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_exercice
 * @property integer $id_journal
 * @property integer $mois
 * @property decimal $debit
 * @property decimal $credit
 * @property Exercice $Exercice
 * @property Journalcomptable $Journalcomptable
 * 
 * @method integer               getId()               Returns the current record's "id" value
 * @method integer               getIdExercice()       Returns the current record's "id_exercice" value
 * @method integer               getIdJournal()        Returns the current record's "id_journal" value
 * @method integer               getMois()             Returns the current record's "mois" value
 * @method decimal               getDebit()            Returns the current record's "debit" value
 * @method decimal               getCredit()           Returns the current record's "credit" value
 * @method Exercice              getExercice()         Returns the current record's "Exercice" value
 * @method Journalcomptable      getJournalcomptable() Returns the current record's "Journalcomptable" value
 * @method Journalcentralisateur setId()               Sets the current record's "id" value
 * @method Journalcentralisateur setIdExercice()       Sets the current record's "id_exercice" value
 * @method Journalcentralisateur setIdJournal()        Sets the current record's "id_journal" value
 * @method Journalcentralisateur setMois()             Sets the current record's "mois" value
 * @method Journalcentralisateur setDebit()            Sets the current record's "debit" value
 * @method Journalcentralisateur setCredit()           Sets the current record's "credit" value
 * @method Journalcentralisateur setExercice()         Sets the current record's "Exercice" value
 * @method Journalcentralisateur setJournalcomptable() Sets the current record's "Journalcomptable" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJournalcentralisateur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('journalcentralisateur');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'journalcentralisateur_id',
             'length' => 4,
             ));
        $this->hasColumn('id_exercice', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_journal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('mois', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('debit', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('credit', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Exercice', array(
             'local' => 'id_exercice',
             'foreign' => 'id'));

        $this->hasOne('Journalcomptable', array(
             'local' => 'id_journal',
             'foreign' => 'id'));
    }
}