<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lignemouvementfacturation', 'doctrine');

/**
 * BaseLignemouvementfacturation
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $ordre
 * @property date $date
 * @property string $numerofacture
 * @property decimal $montant
 * @property integer $id_documentachat
 * @property string $rrs
 * @property string $pvr
 * @property date $daterrspvr
 * @property integer $id_fournisseur
 * @property string $etatfrs
 * @property boolean $valide
 * @property decimal $tauxpourcetage
 * @property Documentachat $Documentachat
 * @property Fournisseur $Fournisseur
 * @property Doctrine_Collection $Annulationengagement
 * 
 * @method integer                   getId()                   Returns the current record's "id" value
 * @method integer                   getOrdre()                Returns the current record's "ordre" value
 * @method date                      getDate()                 Returns the current record's "date" value
 * @method string                    getNumerofacture()        Returns the current record's "numerofacture" value
 * @method decimal                   getMontant()              Returns the current record's "montant" value
 * @method integer                   getIdDocumentachat()      Returns the current record's "id_documentachat" value
 * @method string                    getRrs()                  Returns the current record's "rrs" value
 * @method string                    getPvr()                  Returns the current record's "pvr" value
 * @method string                    getEtatfrs()              Returns the current record's "etatfrs" value
 * @method date                      getDaterrspvr()           Returns the current record's "daterrspvr" value
 * @method integer                   getIdFournisseur()        Returns the current record's "id_fournisseur" value
 * @method boolean                   getValide()               Returns the current record's "valide" value
 * @method decimal                   getTauxpourcetage()       Returns the current record's "tauxpourcetage" value
 * @method Documentachat             getDocumentachat()        Returns the current record's "Documentachat" value
 * @method Fournisseur               getFournisseur()          Returns the current record's "Fournisseur" value
 * @method Doctrine_Collection       getAnnulationengagement() Returns the current record's "Annulationengagement" collection
 * @method Lignemouvementfacturation setId()                   Sets the current record's "id" value
 * @method Lignemouvementfacturation setOrdre()                Sets the current record's "ordre" value
 * @method Lignemouvementfacturation setDate()                 Sets the current record's "date" value
 * @method Lignemouvementfacturation setNumerofacture()        Sets the current record's "numerofacture" value
 * @method Lignemouvementfacturation setMontant()              Sets the current record's "montant" value
 * @method Lignemouvementfacturation setIdDocumentachat()      Sets the current record's "id_documentachat" value
 * @method Lignemouvementfacturation setRrs()                  Sets the current record's "rrs" value
 * @method Lignemouvementfacturation setPvr()                  Sets the current record's "pvr" value
 * @method Lignemouvementfacturation setDaterrspvr()           Sets the current record's "daterrspvr" value
 * @method Lignemouvementfacturation setIdFournisseur()        Sets the current record's "id_fournisseur" value
 * @method Lignemouvementfacturation setValide()               Sets the current record's "valide" value
 * @method Lignemouvementfacturation setTauxpourcetage()       Sets the current record's "tauxpourcetage" value
 * @method Lignemouvementfacturation setEtatfrs()              Sets the current record's "etatfrs" value
 * @method Lignemouvementfacturation setDocumentachat()        Sets the current record's "Documentachat" value
 * @method Lignemouvementfacturation setFournisseur()          Sets the current record's "Fournisseur" value
 * @method Lignemouvementfacturation setAnnulationengagement() Sets the current record's "Annulationengagement" collection
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLignemouvementfacturation extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lignemouvementfacturation');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
			  'sequence' => 'lignemouvementfacturation_id',
             'length' => 4,
             ));
        $this->hasColumn('ordre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('numerofacture', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 20,
             ));
        $this->hasColumn('montant', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_documentachat', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('rrs', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 20,
             ));
        $this->hasColumn('pvr', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 20,
             ));
        $this->hasColumn('daterrspvr', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_fournisseur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('valide', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('tauxpourcetage', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
			   $this->hasColumn('etatfrs', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Documentachat', array(
             'local' => 'id_documentachat',
             'foreign' => 'id'));

        $this->hasOne('Fournisseur', array(
             'local' => 'id_fournisseur',
             'foreign' => 'id'));

        $this->hasMany('Annulationengagement', array(
             'local' => 'id',
             'foreign' => 'id_lignemouvementfacturation'));
    }
}