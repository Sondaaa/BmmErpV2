<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Demandederemboursement', 'doctrine');

/**
 * BaseDemandederemboursement
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property integer $id_posterh
 * @property string $chemin
 * @property date $date
 * @property string $bloc
 * @property string $hopital
 * @property string $observation
 * @property integer $id_unite
 * @property string $signature
 * @property integer $id_hopital
 * @property Agents $Agents
 * @property Posterh $Posterh
 * @property Unite $Unite
 * @property Hopital $Hopital
 * 
 * @method integer                getId()          Returns the current record's "id" value
 * @method integer                getIdAgents()    Returns the current record's "id_agents" value
 * @method integer                getIdPosterh()   Returns the current record's "id_posterh" value
 * @method string              getChemin()      Returns the current record's "chemin" value
 * @method date                   getDate()        Returns the current record's "date" value
 * @method string                 getBloc()        Returns the current record's "bloc" value
 * @method string                 getHopital()     Returns the current record's "hopital" value
 * @method string                 getObservation() Returns the current record's "observation" value
 * @method integer                getIdUnite()     Returns the current record's "id_unite" value
 * @method string                 getSignature()   Returns the current record's "signature" value
 * @method integer                getIdHopital()   Returns the current record's "id_hopital" value
 * @method Agents                 getAgents()      Returns the current record's "Agents" value
 * @method Posterh                getPosterh()     Returns the current record's "Posterh" value
 * @method Unite                  getUnite()       Returns the current record's "Unite" value
 * @method Hopital                getHopital()     Returns the current record's "Hopital" value
 * @method Demandederemboursement setId()          Sets the current record's "id" value
 * @method Demandederemboursement setIdAgents()    Sets the current record's "id_agents" value
 * @method Demandederemboursement setIdPosterh()   Sets the current record's "id_posterh" value
 * @method Demandederemboursement setDate()        Sets the current record's "date" value
 * @method Visaachat           setChemin()      Sets the current record's "chemin" value
 * @method Demandederemboursement setBloc()        Sets the current record's "bloc" value
 * @method Demandederemboursement setHopital()     Sets the current record's "hopital" value
 * @method Demandederemboursement setObservation() Sets the current record's "observation" value
 * @method Demandederemboursement setIdUnite()     Sets the current record's "id_unite" value
 * @method Demandederemboursement setSignature()   Sets the current record's "signature" value
 * @method Demandederemboursement setIdHopital()   Sets the current record's "id_hopital" value
 * @method Demandederemboursement setAgents()      Sets the current record's "Agents" value
 * @method Demandederemboursement setPosterh()     Sets the current record's "Posterh" value
 * @method Demandederemboursement setUnite()       Sets the current record's "Unite" value
 * @method Demandederemboursement setHopital()     Sets the current record's "Hopital" value
 * 
 * @package    PhpProjecttest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDemandederemboursement extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('demandederemboursement');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
            'sequence' => 'demandederemboursement_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_posterh', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
	    $this->hasColumn('chemin', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('bloc', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('hopital', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_unite', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('signature', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_hopital', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Posterh', array(
             'local' => 'id_posterh',
             'foreign' => 'id'));

        $this->hasOne('Unite', array(
             'local' => 'id_unite',
             'foreign' => 'id'));

        $this->hasOne('Hopital', array(
             'local' => 'id_hopital',
             'foreign' => 'id'));
    }
}