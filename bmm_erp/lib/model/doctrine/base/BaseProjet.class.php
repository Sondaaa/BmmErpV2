<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Projet', 'doctrine');

/**
 * BaseProjet
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $libelle
 * @property integer $id_site
 * @property Site $Site
 * @property Doctrine_Collection $Storemag
 * @property Doctrine_Collection $Sousprojet
 * @property Doctrine_Collection $Direction
 * @property Doctrine_Collection $Documentachat
 * @property Doctrine_Collection $Titrebudjet
 * @property Doctrine_Collection $Lignedocachat
 * @property Doctrine_Collection $Marches
 * 
 * @method integer             getId()            Returns the current record's "id" value
 * @method string              getLibelle()       Returns the current record's "libelle" value
 * @method integer             getIdSite()        Returns the current record's "id_site" value
 * @method Site                getSite()          Returns the current record's "Site" value
 * @method Doctrine_Collection getStoremag()      Returns the current record's "Storemag" collection
 * @method Doctrine_Collection getSousprojet()    Returns the current record's "Sousprojet" collection
 * @method Doctrine_Collection getDirection()     Returns the current record's "Direction" collection
 * @method Doctrine_Collection getDocumentachat() Returns the current record's "Documentachat" collection
 * @method Doctrine_Collection getTitrebudjet()   Returns the current record's "Titrebudjet" collection
 * @method Doctrine_Collection getLignedocachat() Returns the current record's "Lignedocachat" collection
 * @method Doctrine_Collection getMarches()       Returns the current record's "Marches" collection
 * @method Projet              setId()            Sets the current record's "id" value
 * @method Projet              setLibelle()       Sets the current record's "libelle" value
 * @method Projet              setIdSite()        Sets the current record's "id_site" value
 * @method Projet              setSite()          Sets the current record's "Site" value
 * @method Projet              setStoremag()      Sets the current record's "Storemag" collection
 * @method Projet              setSousprojet()    Sets the current record's "Sousprojet" collection
 * @method Projet              setDirection()     Sets the current record's "Direction" collection
 * @method Projet              setDocumentachat() Sets the current record's "Documentachat" collection
 * @method Projet              setTitrebudjet()   Sets the current record's "Titrebudjet" collection
 * @method Projet              setLignedocachat() Sets the current record's "Lignedocachat" collection
 * @method Projet              setMarches()       Sets the current record's "Marches" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProjet extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('projet');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'projet_id',
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', 254, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 254,
             ));
        $this->hasColumn('id_site', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Site', array(
             'local' => 'id_site',
             'foreign' => 'id'));

        $this->hasMany('Storemag', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Sousprojet', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Direction', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Documentachat', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Titrebudjet', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Lignedocachat', array(
             'local' => 'id',
             'foreign' => 'id_projet'));

        $this->hasMany('Marches', array(
             'local' => 'id',
             'foreign' => 'id_projet'));
    }
}