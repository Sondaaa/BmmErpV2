<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Enfants', 'doctrine');

/**
 * BaseEnfants
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $nom
 * @property string $prenom
 * @property string $observation
 * @property integer $id_agents
 * @property date $datenaissance
 * @property integer $nordre
 * @property integer $datemajeur
 * @property integer $id_deduction
 * @property boolean $etat
 * @property boolean $etudiant
 * @property boolean $boursie
 * @property Agents $Agents
 * @property Deductioncommune $Deductioncommune
 * 
 * @method integer          getId()               Returns the current record's "id" value
 * @method string           getNom()              Returns the current record's "nom" value
 * @method string           getPrenom()           Returns the current record's "prenom" value
 * @method string           getObservation()      Returns the current record's "observation" value
 * @method integer          getIdAgents()         Returns the current record's "id_agents" value
 * @method date             getDatenaissance()    Returns the current record's "datenaissance" value
 * @method integer          getNordre()           Returns the current record's "nordre" value
 * @method integer          getDatemajeur()       Returns the current record's "datemajeur" value
 * @method integer          getIdDeduction()      Returns the current record's "id_deduction" value
 * @method boolean          getEtat()             Returns the current record's "etat" value
 * @method boolean          getEtudiant()         Returns the current record's "etudiant" value
 * @method boolean          getBoursie()          Returns the current record's "boursie" value
 * @method Agents           getAgents()           Returns the current record's "Agents" value
 * @method Deductioncommune getDeductioncommune() Returns the current record's "Deductioncommune" value
 * @method Enfants          setId()               Sets the current record's "id" value
 * @method Enfants          setNom()              Sets the current record's "nom" value
 * @method Enfants          setPrenom()           Sets the current record's "prenom" value
 * @method Enfants          setObservation()      Sets the current record's "observation" value
 * @method Enfants          setIdAgents()         Sets the current record's "id_agents" value
 * @method Enfants          setDatenaissance()    Sets the current record's "datenaissance" value
 * @method Enfants          setNordre()           Sets the current record's "nordre" value
 * @method Enfants          setDatemajeur()       Sets the current record's "datemajeur" value
 * @method Enfants          setIdDeduction()      Sets the current record's "id_deduction" value
 * @method Enfants          setEtat()             Sets the current record's "etat" value
 * @method Enfants          setEtudiant()         Sets the current record's "etudiant" value
 * @method Enfants          setBoursie()          Sets the current record's "boursie" value
 * @method Enfants          setAgents()           Sets the current record's "Agents" value
 * @method Enfants          setDeductioncommune() Sets the current record's "Deductioncommune" value
 * 
 * @package    Tes
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseEnfants extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('enfants');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'enfants_id',
             'length' => 4,
             ));
        $this->hasColumn('nom', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('prenom', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 30,
             ));
        $this->hasColumn('observation', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datenaissance', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('nordre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datemajeur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_deduction', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('etat', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('etudiant', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
        $this->hasColumn('boursie', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Deductioncommune', array(
             'local' => 'id_deduction',
             'foreign' => 'id'));
    }
}