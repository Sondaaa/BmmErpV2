<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Demandeur', 'doctrine');


/**
 * BaseDemandeur
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agent
 * @property integer $id_service
 * @property integer $id_unite
 * @property string $libelle
 * @property integer $id_direction
 * @property integer $id_sousdirection
 * @property Agents $Agents
 * @property Servicerh $Servicerh
 * @property Unite $Unite
 * @property Direction $Direction
 * @property Sousdirection $Sousdirection
 * @property Doctrine_Collection $Documentachat
 * 
 * @method integer             getId()               Returns the current record's "id" value
 * @method integer             getIdAgent()          Returns the current record's "id_agent" value
 * @method integer             getIdService()        Returns the current record's "id_service" value
 * @method integer             getIdUnite()          Returns the current record's "id_unite" value
 * @method string              getLibelle()          Returns the current record's "libelle" value
 * @method integer             getIdDirection()      Returns the current record's "id_direction" value
 * @method integer             getIdSousdirection()  Returns the current record's "id_sousdirection" value
 * @method Agents              getAgents()           Returns the current record's "Agents" value
 * @method Servicerh           getServicerh()        Returns the current record's "Servicerh" value
 * @method Unite               getUnite()            Returns the current record's "Unite" value
 * @method Direction           getDirection()        Returns the current record's "Direction" value
 * @method Sousdirection       getSousdirection()    Returns the current record's "Sousdirection" value
 * @method Doctrine_Collection getDocumentachat()    Returns the current record's "Documentachat" collection
 * @method Demandeur           setId()               Sets the current record's "id" value
 * @method Demandeur           setIdAgent()          Sets the current record's "id_agent" value
 * @method Demandeur           setIdService()        Sets the current record's "id_service" value
 * @method Demandeur           setIdUnite()          Sets the current record's "id_unite" value
 * @method Demandeur           setLibelle()          Sets the current record's "libelle" value
 * @method Demandeur           setIdDirection()      Sets the current record's "id_direction" value
 * @method Demandeur           setIdSousdirection()  Sets the current record's "id_sousdirection" value
 * @method Demandeur           setAgents()           Sets the current record's "Agents" value
 * @method Demandeur           setServicerh()        Sets the current record's "Servicerh" value
 * @method Demandeur           setUnite()            Sets the current record's "Unite" value
 * @method Demandeur           setDirection()        Sets the current record's "Direction" value
 * @method Demandeur           setSousdirection()    Sets the current record's "Sousdirection" value
 * @method Demandeur           setDocumentachat()    Sets the current record's "Documentachat" collection
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDemandeur extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('demandeur');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'demandeur_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agent', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_service', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_unite', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('id_direction', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_sousdirection', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agent',
             'foreign' => 'id'));

        $this->hasOne('Servicerh', array(
             'local' => 'id_service',
             'foreign' => 'id'));

        $this->hasOne('Unite', array(
             'local' => 'id_unite',
             'foreign' => 'id'));

        $this->hasOne('Direction', array(
             'local' => 'id_direction',
             'foreign' => 'id'));

        $this->hasOne('Sousdirection', array(
             'local' => 'id_sousdirection',
             'foreign' => 'id'));

        $this->hasMany('Documentachat', array(
             'local' => 'id',
             'foreign' => 'id_demandeur'));
    }
}