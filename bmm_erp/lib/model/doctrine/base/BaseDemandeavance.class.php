<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Demandeavance', 'doctrine');

/**
 * BaseDemandeavance
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property decimal $montanttotal
 * @property decimal $montantmensielle
 * @property integer $id_typeavance
 * @property integer $annee
 * @property integer $mois
 * @property date $datedebutretenue
 * @property date $datefinretenue
 * @property boolean $paye
 * @property Agents $Agents
 * @property Avance $Avance
 * @property Doctrine_Collection $Historiqueretenue
 * 
 * @method integer             getId()                Returns the current record's "id" value
 * @method integer             getIdAgents()          Returns the current record's "id_agents" value
 * @method decimal             getMontanttotal()      Returns the current record's "montanttotal" value
 * @method decimal             getMontantmensielle()  Returns the current record's "montantmensielle" value
 * @method integer             getIdTypeavance()      Returns the current record's "id_typeavance" value
 * @method integer             getAnnee()             Returns the current record's "annee" value
 * @method integer             getMois()              Returns the current record's "mois" value
 * @method date                getDatedebutretenue()  Returns the current record's "datedebutretenue" value
 * @method date                getDatefinretenue()    Returns the current record's "datefinretenue" value
 * @method boolean             getPaye()              Returns the current record's "paye" value
 * @method Agents              getAgents()            Returns the current record's "Agents" value
 * @method Avance              getAvance()            Returns the current record's "Avance" value
 * @method Doctrine_Collection getHistoriqueretenue() Returns the current record's "Historiqueretenue" collection
 * @method Demandeavance       setId()                Sets the current record's "id" value
 * @method Demandeavance       setIdAgents()          Sets the current record's "id_agents" value
 * @method Demandeavance       setMontanttotal()      Sets the current record's "montanttotal" value
 * @method Demandeavance       setMontantmensielle()  Sets the current record's "montantmensielle" value
 * @method Demandeavance       setIdTypeavance()      Sets the current record's "id_typeavance" value
 * @method Demandeavance       setAnnee()             Sets the current record's "annee" value
 * @method Demandeavance       setMois()              Sets the current record's "mois" value
 * @method Demandeavance       setDatedebutretenue()  Sets the current record's "datedebutretenue" value
 * @method Demandeavance       setDatefinretenue()    Sets the current record's "datefinretenue" value
 * @method Demandeavance       setPaye()              Sets the current record's "paye" value
 * @method Demandeavance       setAgents()            Sets the current record's "Agents" value
 * @method Demandeavance       setAvance()            Sets the current record's "Avance" value
 * @method Demandeavance       setHistoriqueretenue() Sets the current record's "Historiqueretenue" collection
 * 
 * @package    PhpProjecttest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDemandeavance extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('demandeavance');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'demandeavance_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('montanttotal', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('montantmensielle', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_typeavance', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('annee', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('mois', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('datedebutretenue', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('datefinretenue', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('paye', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Avance', array(
             'local' => 'id_typeavance',
             'foreign' => 'id'));

        $this->hasMany('Historiqueretenue', array(
             'local' => 'id',
             'foreign' => 'id_demandeavance'));
    }
}