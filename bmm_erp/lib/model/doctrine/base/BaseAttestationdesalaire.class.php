<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Attestationdesalaire', 'doctrine');

/**
 * BaseAttestationdesalaire
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $id_agents
 * @property integer $id_contrat
 * @property integer $id_lieu
 * @property Agents $Agents
 * @property Contrat $Contrat
 * @property Lieutravail $Lieutravail
 * 
 * @method integer              getId()          Returns the current record's "id" value
 * @method integer              getIdAgents()    Returns the current record's "id_agents" value
 * @method integer              getIdContrat()   Returns the current record's "id_contrat" value
 * @method integer              getIdLieu()      Returns the current record's "id_lieu" value
 * @method Agents               getAgents()      Returns the current record's "Agents" value
 * @method Contrat              getContrat()     Returns the current record's "Contrat" value
 * @method Lieutravail          getLieutravail() Returns the current record's "Lieutravail" value
 * @method Attestationdesalaire setId()          Sets the current record's "id" value
 * @method Attestationdesalaire setIdAgents()    Sets the current record's "id_agents" value
 * @method Attestationdesalaire setIdContrat()   Sets the current record's "id_contrat" value
 * @method Attestationdesalaire setIdLieu()      Sets the current record's "id_lieu" value
 * @method Attestationdesalaire setAgents()      Sets the current record's "Agents" value
 * @method Attestationdesalaire setContrat()     Sets the current record's "Contrat" value
 * @method Attestationdesalaire setLieutravail() Sets the current record's "Lieutravail" value
 * 
 * @package    PhpProjectTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAttestationdesalaire extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('attestationdesalaire');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'attestationdesalaire_id',
             'length' => 4,
             ));
        $this->hasColumn('id_agents', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_contrat', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_lieu', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Agents', array(
             'local' => 'id_agents',
             'foreign' => 'id'));

        $this->hasOne('Contrat', array(
             'local' => 'id_contrat',
             'foreign' => 'id'));

        $this->hasOne('Lieutravail', array(
             'local' => 'id_lieu',
             'foreign' => 'id'));
    }
}