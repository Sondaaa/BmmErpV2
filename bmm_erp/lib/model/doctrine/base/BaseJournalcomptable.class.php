<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Journalcomptable', 'doctrine');

/**
 * BaseJournalcomptable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $code
 * @property string $libelle
 * @property integer $numerotation
 * @property integer $issimule
 * @property integer $isintegrer
 * @property date $date
 * @property integer $iscloture
 * @property date $datedebutcloture
 * @property date $datefincloture
 * @property integer $isbloque
 * @property integer $isvalide
 * @property date $datedebutbloque
 * @property date $detefinbloque
 * @property integer $id_type_journal
 * @property integer $id_comptecontrepartie
 * @property integer $id_dossier
 * @property integer $id_exercice
 * @property Dossiercomptable $Dossiercomptable
 * @property Exercice $Exercice
 * @property Plancomptable $Plancomptable
 * @property Typejournal $Typejournal
 * @property Doctrine_Collection $Souscomptejournal
 * @property Doctrine_Collection $Piececomptable
 * @property Doctrine_Collection $Numeroseriejournal
 * 
 * @method integer             getId()                    Returns the current record's "id" value
 * @method string              getCode()                  Returns the current record's "code" value
 * @method string              getLibelle()               Returns the current record's "libelle" value
 * @method integer             getNumerotation()          Returns the current record's "numerotation" value
 * @method integer             getIssimule()              Returns the current record's "issimule" value
 * @method integer             getIsintegrer()            Returns the current record's "isintegrer" value
 * @method date                getDate()                  Returns the current record's "date" value
 * @method integer             getIscloture()             Returns the current record's "iscloture" value
 * @method date                getDatedebutcloture()      Returns the current record's "datedebutcloture" value
 * @method date                getDatefincloture()        Returns the current record's "datefincloture" value
 * @method integer             getIsbloque()              Returns the current record's "isbloque" value
 * @method integer             getIsvalide()              Returns the current record's "isvalide" value
 * @method date                getDatedebutbloque()       Returns the current record's "datedebutbloque" value
 * @method date                getDetefinbloque()         Returns the current record's "detefinbloque" value
 * @method integer             getIdTypeJournal()         Returns the current record's "id_type_journal" value
 * @method integer             getIdComptecontrepartie()  Returns the current record's "id_comptecontrepartie" value
 * @method integer             getIdDossier()             Returns the current record's "id_dossier" value
 * @method integer             getIdExercice()            Returns the current record's "id_exercice" value
 * @method Dossiercomptable    getDossiercomptable()      Returns the current record's "Dossiercomptable" value
 * @method Exercice            getExercice()              Returns the current record's "Exercice" value
 * @method Plancomptable       getPlancomptable()         Returns the current record's "Plancomptable" value
 * @method Typejournal         getTypejournal()           Returns the current record's "Typejournal" value
 * @method Doctrine_Collection getSouscomptejournal()     Returns the current record's "Souscomptejournal" collection
 * @method Doctrine_Collection getPiececomptable()        Returns the current record's "Piececomptable" collection
 * @method Doctrine_Collection getNumeroseriejournal()    Returns the current record's "Numeroseriejournal" collection
 * @method Journalcomptable    setId()                    Sets the current record's "id" value
 * @method Journalcomptable    setCode()                  Sets the current record's "code" value
 * @method Journalcomptable    setLibelle()               Sets the current record's "libelle" value
 * @method Journalcomptable    setNumerotation()          Sets the current record's "numerotation" value
 * @method Journalcomptable    setIssimule()              Sets the current record's "issimule" value
 * @method Journalcomptable    setIsintegrer()            Sets the current record's "isintegrer" value
 * @method Journalcomptable    setDate()                  Sets the current record's "date" value
 * @method Journalcomptable    setIscloture()             Sets the current record's "iscloture" value
 * @method Journalcomptable    setDatedebutcloture()      Sets the current record's "datedebutcloture" value
 * @method Journalcomptable    setDatefincloture()        Sets the current record's "datefincloture" value
 * @method Journalcomptable    setIsbloque()              Sets the current record's "isbloque" value
 * @method Journalcomptable    setIsvalide()              Sets the current record's "isvalide" value
 * @method Journalcomptable    setDatedebutbloque()       Sets the current record's "datedebutbloque" value
 * @method Journalcomptable    setDetefinbloque()         Sets the current record's "detefinbloque" value
 * @method Journalcomptable    setIdTypeJournal()         Sets the current record's "id_type_journal" value
 * @method Journalcomptable    setIdComptecontrepartie()  Sets the current record's "id_comptecontrepartie" value
 * @method Journalcomptable    setIdDossier()             Sets the current record's "id_dossier" value
 * @method Journalcomptable    setIdExercice()            Sets the current record's "id_exercice" value
 * @method Journalcomptable    setDossiercomptable()      Sets the current record's "Dossiercomptable" value
 * @method Journalcomptable    setExercice()              Sets the current record's "Exercice" value
 * @method Journalcomptable    setPlancomptable()         Sets the current record's "Plancomptable" value
 * @method Journalcomptable    setTypejournal()           Sets the current record's "Typejournal" value
 * @method Journalcomptable    setSouscomptejournal()     Sets the current record's "Souscomptejournal" collection
 * @method Journalcomptable    setPiececomptable()        Sets the current record's "Piececomptable" collection
 * @method Journalcomptable    setNumeroseriejournal()    Sets the current record's "Numeroseriejournal" collection
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseJournalcomptable extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('journalcomptable');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'journalcomptable_id',
             'length' => 4,
             ));
        $this->hasColumn('code', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 15,
             ));
        $this->hasColumn('libelle', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('numerotation', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('issimule', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '3',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('isintegrer', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('iscloture', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('datedebutcloture', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('datefincloture', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('isbloque', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('isvalide', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('datedebutbloque', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('detefinbloque', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('id_type_journal', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_comptecontrepartie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_exercice', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Exercice', array(
             'local' => 'id_exercice',
             'foreign' => 'id'));

        $this->hasOne('Plancomptable', array(
             'local' => 'id_comptecontrepartie',
             'foreign' => 'id'));

        $this->hasOne('Typejournal', array(
             'local' => 'id_type_journal',
             'foreign' => 'id'));

        $this->hasMany('Souscomptejournal', array(
             'local' => 'id',
             'foreign' => 'id_journal'));

        $this->hasMany('Piececomptable', array(
             'local' => 'id',
             'foreign' => 'id_journalcomptable'));

        $this->hasMany('Numeroseriejournal', array(
             'local' => 'id',
             'foreign' => 'id_journal'));
    }
}