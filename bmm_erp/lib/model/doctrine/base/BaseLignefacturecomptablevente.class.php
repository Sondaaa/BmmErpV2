<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lignefacturecomptablevente', 'doctrine');

/**
 * BaseLignefacturecomptablevente
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property decimal $totalht
 * @property decimal $totaltva
 * @property integer $id_tva
 * @property integer $id_facturecomptablevente
 * @property Tva $Tva
 * @property Facturecomptablevente $Facturecomptablevente
 * 
 * @method integer                    getId()                       Returns the current record's "id" value
 * @method decimal                    getTotalht()                  Returns the current record's "totalht" value
 * @method decimal                    getTotaltva()                 Returns the current record's "totaltva" value
 * @method integer                    getIdTva()                    Returns the current record's "id_tva" value
 * @method integer                    getIdFacturecomptablevente()  Returns the current record's "id_facturecomptablevente" value
 * @method Tva                        getTva()                      Returns the current record's "Tva" value
 * @method Facturecomptablevente      getFacturecomptablevente()    Returns the current record's "Facturecomptablevente" value
 * @method Lignefacturecomptablevente setId()                       Sets the current record's "id" value
 * @method Lignefacturecomptablevente setTotalht()                  Sets the current record's "totalht" value
 * @method Lignefacturecomptablevente setTotaltva()                 Sets the current record's "totaltva" value
 * @method Lignefacturecomptablevente setIdTva()                    Sets the current record's "id_tva" value
 * @method Lignefacturecomptablevente setIdFacturecomptablevente()  Sets the current record's "id_facturecomptablevente" value
 * @method Lignefacturecomptablevente setTva()                      Sets the current record's "Tva" value
 * @method Lignefacturecomptablevente setFacturecomptablevente()    Sets the current record's "Facturecomptablevente" value
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLignefacturecomptablevente extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lignefacturecomptablevente');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'lignefacturecomptablevente_id',
             'length' => 4,
             ));
        $this->hasColumn('totalht', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'default' => '0',
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totaltva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_tva', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_facturecomptablevente', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Tva', array(
             'local' => 'id_tva',
             'foreign' => 'id'));

        $this->hasOne('Facturecomptablevente', array(
             'local' => 'id_facturecomptablevente',
             'foreign' => 'id'));
    }
}