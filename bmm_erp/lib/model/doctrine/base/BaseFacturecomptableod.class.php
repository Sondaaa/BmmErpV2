<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Facturecomptableod', 'doctrine');

/**
 * BaseFacturecomptableod
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property date $date
 * @property string $reference
 * @property decimal $totalht
 * @property decimal $totaltva
 * @property decimal $timbre
 * @property decimal $totalttc
 * @property integer $id_dossier
 * @property date $dateimportation
 * @property integer $saisie
 * @property integer $id_facture
 * @property integer $id_fournisseur
 * @property integer $id_devise
 * @property integer $id_piececomptable
 * @property integer $numero
 * @property integer $id_compteretenue
 * @property integer $id_certfificat
 * @property Plancomptable $Plancomptable
 * @property Devise $Devise
 * @property Dossiercomptable $Dossiercomptable
 * @property Fournisseur $Fournisseur
 * @property Piececomptable $Piececomptable
 * @property Certificatretenue $Certificatretenue
 * @property Doctrine_Collection $Lignefacturecomptableod
 * @property Doctrine_Collection $Lignepiececomptable
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method date                getDate()                    Returns the current record's "date" value
 * @method string              getReference()               Returns the current record's "reference" value
 * @method decimal             getTotalht()                 Returns the current record's "totalht" value
 * @method decimal             getTotaltva()                Returns the current record's "totaltva" value
 * @method decimal             getTimbre()                  Returns the current record's "timbre" value
 * @method decimal             getTotalttc()                Returns the current record's "totalttc" value
 * @method integer             getIdDossier()               Returns the current record's "id_dossier" value
 * @method date                getDateimportation()         Returns the current record's "dateimportation" value
 * @method integer             getSaisie()                  Returns the current record's "saisie" value
 * @method integer             getIdFacture()               Returns the current record's "id_facture" value
 * @method integer             getIdFournisseur()           Returns the current record's "id_fournisseur" value
 * @method integer             getIdDevise()                Returns the current record's "id_devise" value
 * @method integer             getIdPiececomptable()        Returns the current record's "id_piececomptable" value
 * @method integer             getNumero()                  Returns the current record's "numero" value
 * @method integer             getIdCompteretenue()         Returns the current record's "id_compteretenue" value
 * @method integer             getIdCertfificat()           Returns the current record's "id_certfificat" value
 * @method Plancomptable       getPlancomptable()           Returns the current record's "Plancomptable" value
 * @method Devise              getDevise()                  Returns the current record's "Devise" value
 * @method Dossiercomptable    getDossiercomptable()        Returns the current record's "Dossiercomptable" value
 * @method Fournisseur         getFournisseur()             Returns the current record's "Fournisseur" value
 * @method Piececomptable      getPiececomptable()          Returns the current record's "Piececomptable" value
 * @method Certificatretenue   getCertificatretenue()       Returns the current record's "Certificatretenue" value
 * @method Doctrine_Collection getLignefacturecomptableod() Returns the current record's "Lignefacturecomptableod" collection
 * @method Doctrine_Collection getLignepiececomptable()     Returns the current record's "Lignepiececomptable" collection
 * @method Facturecomptableod  setId()                      Sets the current record's "id" value
 * @method Facturecomptableod  setDate()                    Sets the current record's "date" value
 * @method Facturecomptableod  setReference()               Sets the current record's "reference" value
 * @method Facturecomptableod  setTotalht()                 Sets the current record's "totalht" value
 * @method Facturecomptableod  setTotaltva()                Sets the current record's "totaltva" value
 * @method Facturecomptableod  setTimbre()                  Sets the current record's "timbre" value
 * @method Facturecomptableod  setTotalttc()                Sets the current record's "totalttc" value
 * @method Facturecomptableod  setIdDossier()               Sets the current record's "id_dossier" value
 * @method Facturecomptableod  setDateimportation()         Sets the current record's "dateimportation" value
 * @method Facturecomptableod  setSaisie()                  Sets the current record's "saisie" value
 * @method Facturecomptableod  setIdFacture()               Sets the current record's "id_facture" value
 * @method Facturecomptableod  setIdFournisseur()           Sets the current record's "id_fournisseur" value
 * @method Facturecomptableod  setIdDevise()                Sets the current record's "id_devise" value
 * @method Facturecomptableod  setIdPiececomptable()        Sets the current record's "id_piececomptable" value
 * @method Facturecomptableod  setNumero()                  Sets the current record's "numero" value
 * @method Facturecomptableod  setIdCompteretenue()         Sets the current record's "id_compteretenue" value
 * @method Facturecomptableod  setIdCertfificat()           Sets the current record's "id_certfificat" value
 * @method Facturecomptableod  setPlancomptable()           Sets the current record's "Plancomptable" value
 * @method Facturecomptableod  setDevise()                  Sets the current record's "Devise" value
 * @method Facturecomptableod  setDossiercomptable()        Sets the current record's "Dossiercomptable" value
 * @method Facturecomptableod  setFournisseur()             Sets the current record's "Fournisseur" value
 * @method Facturecomptableod  setPiececomptable()          Sets the current record's "Piececomptable" value
 * @method Facturecomptableod  setCertificatretenue()       Sets the current record's "Certificatretenue" value
 * @method Facturecomptableod  setLignefacturecomptableod() Sets the current record's "Lignefacturecomptableod" collection
 * @method Facturecomptableod  setLignepiececomptable()     Sets the current record's "Lignepiececomptable" collection
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFacturecomptableod extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('facturecomptableod');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'facturecomptableod_id',
             'length' => 4,
             ));
        $this->hasColumn('date', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 255,
             ));
        $this->hasColumn('totalht', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totaltva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('timbre', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totalttc', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_dossier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('dateimportation', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('saisie', 'integer', 2, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 2,
             ));
        $this->hasColumn('id_facture', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_fournisseur', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_devise', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_piececomptable', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('numero', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_compteretenue', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_certfificat', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Plancomptable', array(
             'local' => 'id_compteretenue',
             'foreign' => 'id'));

        $this->hasOne('Devise', array(
             'local' => 'id_devise',
             'foreign' => 'id'));

        $this->hasOne('Dossiercomptable', array(
             'local' => 'id_dossier',
             'foreign' => 'id'));

        $this->hasOne('Fournisseur', array(
             'local' => 'id_fournisseur',
             'foreign' => 'id'));

        $this->hasOne('Piececomptable', array(
             'local' => 'id_piececomptable',
             'foreign' => 'id'));

        $this->hasOne('Certificatretenue', array(
             'local' => 'id_certfificat',
             'foreign' => 'id'));

        $this->hasMany('Lignefacturecomptableod', array(
             'local' => 'id',
             'foreign' => 'id_facturecomptableod'));

        $this->hasMany('Lignepiececomptable', array(
             'local' => 'id',
             'foreign' => 'id_factureod'));
    }
}