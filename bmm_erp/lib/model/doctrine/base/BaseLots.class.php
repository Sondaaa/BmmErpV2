<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Lots', 'doctrine');

/**
 * BaseLots
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $nordre
 * @property string $objet
 * @property decimal $totalht
 * @property decimal $rrr
 * @property decimal $totalapresrrr
 * @property integer $id_tva
 * @property decimal $tauxtva
 * @property decimal $ttcnet
 * @property integer $id_frs
 * @property integer $id_marche
 * @property date $dateoservice
 * @property date $datemaxreponse
 * @property date $datereceptionprevesoire
 * @property integer $delaidexucution
 * @property integer $periodejustifier
 * @property integer $delaicontractuelle
 * @property integer $pireodereelexecution
 * @property integer $pirioderetard
 * @property date $anciendateios
 * @property integer $delaigarantie
 * @property Fournisseur $Fournisseur
 * @property Marches $Marches
 * @property Tva $Tva
 * @property Doctrine_Collection $Ordredeservice
 * @property Doctrine_Collection $Detailprix
 * @property Doctrine_Collection $Pvrception
 * 
 * @method integer             getId()                      Returns the current record's "id" value
 * @method integer             getNordre()                  Returns the current record's "nordre" value
 * @method string              getObjet()                   Returns the current record's "objet" value
 * @method decimal             getTotalht()                 Returns the current record's "totalht" value
 * @method decimal             getRrr()                     Returns the current record's "rrr" value
 * @method decimal             getTotalapresrrr()           Returns the current record's "totalapresrrr" value
 * @method integer             getIdTva()                   Returns the current record's "id_tva" value
 * @method decimal             getTauxtva()                 Returns the current record's "tauxtva" value
 * @method decimal             getTtcnet()                  Returns the current record's "ttcnet" value
 * @method integer             getIdFrs()                   Returns the current record's "id_frs" value
 * @method integer             getIdMarche()                Returns the current record's "id_marche" value
 * @method date                getDateoservice()            Returns the current record's "dateoservice" value
 * @method date                getDatemaxreponse()            Returns the current record's "datemaxreponse" value
 
 * @method date                getDatereceptionprevesoire() Returns the current record's "datereceptionprevesoire" value
 * @method integer             getDelaidexucution()         Returns the current record's "delaidexucution" value
 * @method integer             getPeriodejustifier()        Returns the current record's "periodejustifier" value
 * @method integer             getDelaicontractuelle()      Returns the current record's "delaicontractuelle" value
 * @method integer             getPireodereelexecution()    Returns the current record's "pireodereelexecution" value
 * @method integer             getPirioderetard()           Returns the current record's "pirioderetard" value
 * @method date                getAnciendateios()           Returns the current record's "anciendateios" value
 * @method integer             getDelaigarantie()           Returns the current record's "delaigarantie" value
 * @method Fournisseur         getFournisseur()             Returns the current record's "Fournisseur" value
 * @method Marches             getMarches()                 Returns the current record's "Marches" value
 * @method Tva                 getTva()                     Returns the current record's "Tva" value
 * @method Doctrine_Collection getOrdredeservice()          Returns the current record's "Ordredeservice" collection
 * @method Doctrine_Collection getDetailprix()              Returns the current record's "Detailprix" collection
 * @method Doctrine_Collection getPvrception()              Returns the current record's "Pvrception" collection
 * @method Lots                setId()                      Sets the current record's "id" value
 * @method Lots                setNordre()                  Sets the current record's "nordre" value
 * @method Lots                setObjet()                   Sets the current record's "objet" value
 * @method Lots                setTotalht()                 Sets the current record's "totalht" value
 * @method Lots                setRrr()                     Sets the current record's "rrr" value
 * @method Lots                setTotalapresrrr()           Sets the current record's "totalapresrrr" value
 * @method Lots                setIdTva()                   Sets the current record's "id_tva" value
 * @method Lots                setTauxtva()                 Sets the current record's "tauxtva" value
 * @method Lots                setTtcnet()                  Sets the current record's "ttcnet" value
 * @method Lots                setIdFrs()                   Sets the current record's "id_frs" value
 * @method Lots                setIdMarche()                Sets the current record's "id_marche" value
 * @method Lots                setDateoservice()            Sets the current record's "dateoservice" value
* @method Lots                setDatemaxreponse()            Sets the current record's "datemaxreponse" value
 * @method Lots                setDatereceptionprevesoire() Sets the current record's "datereceptionprevesoire" value
 * @method Lots                setDelaidexucution()         Sets the current record's "delaidexucution" value
 * @method Lots                setPeriodejustifier()        Sets the current record's "periodejustifier" value
 * @method Lots                setDelaicontractuelle()      Sets the current record's "delaicontractuelle" value
 * @method Lots                setPireodereelexecution()    Sets the current record's "pireodereelexecution" value
 * @method Lots                setPirioderetard()           Sets the current record's "pirioderetard" value
 * @method Lots                setAnciendateios()           Sets the current record's "anciendateios" value
 * @method Lots                setDelaigarantie()           Sets the current record's "delaigarantie" value
 * @method Lots                setFournisseur()             Sets the current record's "Fournisseur" value
 * @method Lots                setMarches()                 Sets the current record's "Marches" value
 * @method Lots                setTva()                     Sets the current record's "Tva" value
 * @method Lots                setOrdredeservice()          Sets the current record's "Ordredeservice" collection
 * @method Lots                setDetailprix()              Sets the current record's "Detailprix" collection
 * @method Lots                setPvrception()              Sets the current record's "Pvrception" collection
 * 
 * @package    Bmm
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseLots extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('lots');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'sequence' => 'lots_id',
             'length' => 4,
             ));
        $this->hasColumn('nordre', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('objet', 'string', null, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => '',
             ));
        $this->hasColumn('totalht', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('rrr', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('totalapresrrr', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_tva', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('tauxtva', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('ttcnet', 'decimal', 18, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 18,
             ));
        $this->hasColumn('id_frs', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('id_marche', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
			 
	 $this->hasColumn('datemaxreponse', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));		 
        $this->hasColumn('dateoservice', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('datereceptionprevesoire', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('delaidexucution', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('periodejustifier', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('delaicontractuelle', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pireodereelexecution', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('pirioderetard', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
        $this->hasColumn('anciendateios', 'date', 25, array(
             'type' => 'date',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 25,
             ));
        $this->hasColumn('delaigarantie', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Fournisseur', array(
             'local' => 'id_frs',
             'foreign' => 'id'));

        $this->hasOne('Marches', array(
             'local' => 'id_marche',
             'foreign' => 'id'));

        $this->hasOne('Tva', array(
             'local' => 'id_tva',
             'foreign' => 'id'));

        $this->hasMany('Ordredeservice', array(
             'local' => 'id',
             'foreign' => 'id_benificaire'));

        $this->hasMany('Detailprix', array(
             'local' => 'id',
             'foreign' => 'id_lots'));

        $this->hasMany('Pvrception', array(
             'local' => 'id',
             'foreign' => 'id_lots'));
    }
}