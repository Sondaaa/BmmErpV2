<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Fabricant', 'doctrine');

/**
 * BaseFabricant
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $fabricant
 * @property string $reference
 * @property Doctrine_Collection $Immobilisation
 * 
 * @method integer             getId()             Returns the current record's "id" value
 * @method string              getFabricant()      Returns the current record's "fabricant" value
 * @method string              getReference()      Returns the current record's "reference" value
 * @method Doctrine_Collection getImmobilisation() Returns the current record's "Immobilisation" collection
 * @method Fabricant           setId()             Sets the current record's "id" value
 * @method Fabricant           setFabricant()      Sets the current record's "fabricant" value
 * @method Fabricant           setReference()      Sets the current record's "reference" value
 * @method Fabricant           setImmobilisation() Sets the current record's "Immobilisation" collection
 * 
 * @package    InventaireTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseFabricant extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('fabricant');
        $this->hasColumn('id', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             'length' => 4,
             ));
        $this->hasColumn('fabricant', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
        $this->hasColumn('reference', 'string', 255, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             'length' => 255,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Immobilisation', array(
             'local' => 'id',
             'foreign' => 'id_fabricant'));
    }
}