<?php

/**
 * MaquetteTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class MaquetteTable extends Doctrine_Table
{

    /**
     * Returns an instance of this class.
     *
     * @return object MaquetteTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Maquette');
    }

    public function loadAllFiltre($journal = '', $code = '', $nature = '', $libelle = '', $type_tri = '', $tri = '', $journal_id = '', $nature_id = '')
    {
        //       die($_SESSION['exercice_id']);
        $q = $this->createQuery('m')
            ->leftJoin('m.Journalcomptable j')
            ->leftJoin('m.Naturepiece n')
            ->Where('j.id_exercice = ?', $_SESSION['exercice_id'])
            ->andWhere('j.id_dossier = ?', $_SESSION['dossier_id']);

        if ($journal != '')
            $q = $q->andWhere('UPPER(j.libelle) like ?', '%' . strtoupper($journal) . '%');
        if ($code != '')
            $q = $q->andWhere('UPPER(m.code) like ?', '%' . strtoupper($code) . '%');
        if ($libelle != '')
            $q = $q->andWhere('UPPER(m.libelle) like ?', '%' . strtoupper($libelle) . '%');
        if ($nature != '')
            $q = $q->andWhere('UPPER(n.libelle) like ?', '%' . strtoupper($nature) . '%');

        if ($journal_id != '') {
            $jounalcomptable = JournalcomptableTable::getInstance()->findOneById($journal_id);
            if ($jounalcomptable)
                $q = $q->andWhere('j.code = ?', $jounalcomptable->getCode());
            else {
                $q = $q->andWhere('m.id_journal = ?', $journal_id);
            }
        }

        if ($nature_id != '')
            $q = $q->andWhere('m.id_naturepiece = ?', $nature_id);
        if ($type_tri != '') {
            switch ($type_tri) {
                case 'journal':
                    $q = $q->orderBy('j.libelle ' . $tri);
                    break;
                case 'code':
                    $q = $q->orderBy('m.code ' . $tri);
                    break;
                case 'libelle':
                    $q = $q->orderBy('m.libelle ' . $tri);
                    break;
                default:
                    break;
            }
        }
        return $q;
    }

    public function getAllFiltre($type = '')
    {
        $q = $this->createQuery('m')
            ->leftJoin('m.Journalcomptable j')

            ->where('j.id_exercice = ?', $_SESSION['exercice_id'])
            ->where('j.id_dossier = ?', $_SESSION['dossier_id']);


        if ($type != '')
            $q = $q->andWhere('j.id_type_journal = ?', $type);

        $q = $q->orderBy('m.libelle');

        return $q->execute();
    }

    public function loadAllFiltreBySasie($journal = '', $code = '', $nature = '', $libelle = '', $type_tri = '', $tri = '', $journal_id = '', $nature_id = '')
    {
        $q = $this->createQuery('m')
            ->leftJoin('m.Journalcomptable j')
            ->leftJoin('m.Naturepiece n')
            ->where('j.id_exercice = ?', $_SESSION['exercice_id'])
            ->andWhere('j.id_dossier = ?', $_SESSION['dossier_id'])
            ;
        //        if ($journal != '')
        //            $q = $q->andWhere('UPPER(j.libelle) like ?', '%' . strtoupper($journal) . '%');
        if ($code != '')
            $q = $q->andWhere('UPPER(m.code) like ?', '%' . strtoupper($code) . '%');
        if ($libelle != '')
            $q = $q->andWhere('UPPER(m.libelle) like ?', '%' . strtoupper($libelle) . '%');
        if ($nature != '')
            $q = $q->andWhere('UPPER(n.libelle) like ?', '%' . strtoupper($nature) . '%');

        if ($journal_id) {
            $q = $q->andWhere('m.id_journal = ' . $journal_id);
        }
        // if ($nature_id != '')
        //     $q = $q->andWhere('m.id_naturepiece = ?', $nature_id);
        if ($type_tri != '') {
            switch ($type_tri) {
                case 'journal':
                    $q = $q->orderBy('j.libelle ' . $tri);
                    break;
                case 'code':
                    $q = $q->orderBy('m.code ' . $tri);
                    break;
                case 'libelle':
                    $q = $q->orderBy('m.libelle ' . $tri);
                    break;
                default:
                    break;
            }
        }
       // die($q);
        return $q;
    }

    public function getByDossierAndExercice($dossier_id, $exercice_id)
    {
        $q = $this->createQuery('m')
            ->leftJoin('m.Journalcomptable j')
            ->where('j.id_exercice = ?', $exercice_id)
            ->andWhere('j.id_dossier = ?', $dossier_id);

        return $q->execute();
    }

    public function getByIdDossierAndExercice($dossier_id, $exercice_id)
    {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT m.id as id
                FROM maquette m 
                LEFT JOIN Journalcomptable j ON j.id = m.id_journal 
                WHERE  j.id_exercice = " . $exercice_id
            . " AND j.id_dossier = " . $dossier_id
            . "order by m.id asc";
        $resultat = $conn->fetchAssoc($query);

        return $resultat;
    }

    public function getAllByDossierAndExercice($dossier_id, $exercice_id)
    {
        $q = $this->createQuery('m')
            ->leftJoin('m.Journalcomptable j')
            ->where('j.id_exercice = ?', $exercice_id)
            ->andWhere('j.id_dossier = ?', $dossier_id);
        return $q->execute();
    }

    public function getByorder($id_maquette)
    {

        $q = $this->createQuery('m')
            ->leftJoin('m.Lignemaquette ligne')
            ->where('m.id = ?', $id_maquette)
            ->orderBy('ligne.id desc');

        return $q->execute();
    }
}
