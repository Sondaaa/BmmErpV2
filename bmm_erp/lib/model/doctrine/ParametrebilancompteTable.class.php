<?php

/**
 * ParametrebilancompteTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class ParametrebilancompteTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object ParametrebilancompteTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Parametrebilancompte');
    }

    public function ChanrgerNouveau($id_para_bilan) {

        $numerocompte_fin = $this->getPlandossiercomptable()->getNumerocompte();
        $compte_comtable_nv_fin = PlandossiercomptableTable::getInstance()->getByNumeroAndDossierAndExercice($numerocompte_fin, $_SESSION['dossier_id'], $_SESSION['exercice_id']);

        $parametre_ancien_nouveu_fin = $compte_comtable_nv_fin->getFirst()->getId();

        $nouveau_para_bilan = new Parametrebilancompte();
        $nouveau_para_bilan->setIdCompte($parametre_ancien_nouveu_fin);
        $nouveau_para_bilan->setIdParametrebilan($id_para_bilan);
//        $nouveau_para_bilan->setType($this->);

        $nouveau_para_bilan->save();
    }

    public function calculSoldeParametreBilan($param_id, $exercice_id) {
        $query = $this->createQuery('pbc')
                ->select('coalesce(sum(c.solde),0) as solde ')
                ->leftJoin('pbc.Plandossiercomptable c')
                ->leftJoin('pbc.Parametrebilan p')
                ->where('pbc.id_parametrebilan = ?', $param_id)
                ->andWhere('p.id_exercice = ?', $exercice_id)
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
        ;

        return $query->execute()->getFirst();
    }

    public function getByIdParametrebilanAndNotRegroupement($param_id) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT c.numerocompte ,concat( c.numerocompte ,' - ', c.libelle) as comptecomptable,sum(c.solde) as solde , sum(c.soldeouv) as soldeprec
                FROM Parametrebilancompte pbc 
                INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                WHERE pbc.id_parametrebilan = " . $param_id
                . " AND p.id_exercice = " . $_SESSION['exercice_id']
                . " AND c.id_dossier = " . $_SESSION['dossier_id']
                . "AND pbc.regrouppement is NULL "
                . "GROUP BY c.numerocompte,c.libelle";



        $resultat = $conn->fetchAssoc($query);

        return $resultat;
    }

    public function getByIdParametrebilanAndNoRegroupementResultat($param_id, $param_id_prece, $exercice_prece) {
//die($exercice_prece.'id');
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT c.numerocompte ,concat( c.numerocompte ,' - ', c.libelle) as comptecomptable,
                 sum(c.solde) as solde, sum(c.solde) as soldeprec
                 FROM Parametrebilancompte pbc 
                 INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                 LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                 WHERE pbc.id_parametrebilan = " . $param_id
                . " AND p.id_exercice = " . $_SESSION['exercice_id']
                . " AND c.id_dossier = " . $_SESSION['dossier_id']
                . " AND pbc.regrouppement is NULL "
                . "GROUP BY c.numerocompte,c.libelle"
                . " UNION SELECT
                    c.numerocompte ,concat( c.numerocompte ,' - ', c.libelle) as comptecomptable,
                    sum(c.soldeouv) as solde,  sum(c.solde) as soldeprec
                 FROM Parametrebilancompte pbc 
                 INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                 LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                 WHERE pbc.id_parametrebilan = " . $param_id_prece
                . " AND p.id_exercice = " . $exercice_prece
                . " AND c.id_dossier = " . $_SESSION['dossier_id']
                . " AND pbc.regrouppement is NULL "
                . "GROUP BY c.numerocompte,c.libelle"
        ;
        $resultat = $conn->fetchAssoc($query);
        return $resultat;
    }

    public function getByIdParametrebilanAndNoRegResultat($param_id) {
//die($exercice_prece.'id');
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT c.numerocompte ,concat( c.numerocompte ,' - ', c.libelle) as comptecomptable,
                 sum(c.solde) as solde, sum(c.soldeouv) as soldeprec
                 FROM Parametrebilancompte pbc 
                 INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                 LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                 WHERE pbc.id_parametrebilan = " . $param_id
                . " AND p.id_exercice = " . $_SESSION['exercice_id']
                . " AND c.id_dossier = " . $_SESSION['dossier_id']
                . " AND pbc.regrouppement is NULL "
                . "GROUP BY c.numerocompte,c.libelle"

        ;
        $resultat = $conn->fetchAssoc($query);
        return $resultat;
    }

    public function getByIdParametrebilanAndRegroupement($param_id) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT pbc.regrouppement,sum(c.solde) as solde ,sum(soldeouv) as soldeprec
                FROM Parametrebilancompte pbc 
                INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                WHERE pbc.id_parametrebilan = " . $param_id . " "
                . "AND p.id_exercice = " . $_SESSION['exercice_id'] . " "
                . "AND c.id_dossier = " . $_SESSION['dossier_id'] . ""
                . "AND pbc.regrouppement is not NULL "
                . "GROUP BY pbc.regrouppement";



        $resultat = $conn->fetchAssoc($query);

        return $resultat;
    }

    public function getByIdParametrebilanAndRegroupementResutat($param_id, $param_id_prece, $exercice_prece) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT pbc.regrouppement,sum(c.solde) as solde ,sum(soldeouv) as soldeprec
                FROM Parametrebilancompte pbc 
                INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                WHERE pbc.id_parametrebilan = " . $param_id . " "
                . "AND p.id_exercice = " . $_SESSION['exercice_id'] . " "
                . "AND c.id_dossier = " . $_SESSION['dossier_id'] . ""
                . "AND pbc.regrouppement is not NULL "
                . "GROUP BY pbc.regrouppement"
                . " UNION SELECT pbc.regrouppement,
                    sum(c.soldeouv) as solde ,sum(solde) as soldeprec
                FROM Parametrebilancompte pbc 
                INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                WHERE pbc.id_parametrebilan = " . $param_id_prece . " "
                . "AND p.id_exercice = " . $exercice_prece . " "
                . "AND c.id_dossier = " . $_SESSION['dossier_id'] . ""
                . "AND pbc.regrouppement is not NULL "
                . "GROUP BY pbc.regrouppement";



        $resultat = $conn->fetchAssoc($query);

        return $resultat;
    }

    public function getByIdParametrebilanAndRegResutat($param_id) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT pbc.regrouppement,sum(c.solde) as solde ,sum(soldeouv) as soldeprec
                FROM Parametrebilancompte pbc 
                INNER JOIN Plandossiercomptable c ON c.id = pbc.id_compte 
                LEFT JOIN Parametrebilan p ON p.id = pbc.id_parametrebilan 
                WHERE pbc.id_parametrebilan = " . $param_id . " "
                . "AND p.id_exercice = " . $_SESSION['exercice_id'] . " "
                . "AND c.id_dossier = " . $_SESSION['dossier_id'] . ""
                . "AND pbc.regrouppement is not NULL "
                . "GROUP BY pbc.regrouppement"
        ;



        $resultat = $conn->fetchAssoc($query);

        return $resultat;
    }

    public function calculSoldeParametreBilanPrec($param_id, $exercice_id) {
        $query = $this->createQuery('pbc')
                ->select('coalesce(sum(c.solde),0) as solde ')
                ->leftJoin('pbc.Plandossiercomptable c')
                ->leftJoin('pbc.Parametrebilan p')
                ->where('pbc.id_parametrebilan = ?', $param_id)
                ->andWhere('p.id_exercice = ?', $exercice_id)
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
        ;

        return $query->execute()->getFirst();
    }

//    public function getTotal($pa)

    public function getRegroupementbycompte($param_id, $id_compte) {
        $query = $this->createQuery('pbc')
                ->select('* ')
                ->from('Parametrebilancompte pbc')
                ->innerJoin('pbc.Plandossiercomptable c')
                ->leftJoin('pbc.Parametrebilan p')
                ->where('pbc.id_parametrebilan = ?', $param_id)
                ->andWhere('p.id_exercice = ?', $_SESSION['exercice_id'])
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
                ->andWhere(" pbc.regrouppement is NOT NULL and pbc.regrouppement <> '' ")
                ->andWhere('pbc.id_compte =?', $id_compte)
//                  ->groupBy('id,regrouppement')
//                ->orderBy('regrouppement asc ')
//                ->groupBy('pbc.id,pbc.regrouppement')
//                ->HAVING ('COUNT(regrouppement) == 1')
        ;

        return $query->execute();
    }

//    public function getRegroupement($param_id) {
//        $query = $this->createQuery('pbc')
//                ->select('pbc.id as idp ,p.id as id ,c.solde,'
//                        . 'pbc.regrouppement as regrouppement ')
//               ->from('Parametrebilancompte pbc')
//                ->leftJoin('pbc.Plandossiercomptable c')
//                ->leftJoin('pbc.Parametrebilan p')
//                ->where('pbc.id_parametrebilan = ?', $param_id)
////                ->andWhere('p.id_exercice = ?', $_SESSION['exercice_id'])
////                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
//                //->andWhere(' pbc.regrouppement is NOT NULL ' )
////                ->groupBy('id,regrouppement')
////                ->orderBy('regrouppement asc ')
////                ->groupBy('pbc.id,pbc.regrouppement')
//                ;
//
//        return $query;
//    }

    public function getRegroupementByParametre($param_id) {
        $query = $this->createQuery('pbc')
                ->select('pbc.id as idp ,p.id as id ,c.solde,'
                        . 'pbc.regrouppement as regrouppement ')
                ->from('Parametrebilancompte pbc')
                ->leftJoin('pbc.Plandossiercomptable c')
                ->leftJoin('pbc.Parametrebilan p')
                ->where('pbc.id_parametrebilan = ?', $param_id)
                ->andWhere('p.id_exercice = ?', $_SESSION['exercice_id'])
                ->andWhere('c.id_dossier = ?', $_SESSION['dossier_id'])
                ->andWhere(' pbc.regrouppement is NOT NULL ')
//                ->groupBy('id,regrouppement')
                ->orderBy('regrouppement asc ')
                ->groupBy('pbc.id,pbc.regrouppement')
        ;

        return $query;
    }

}
