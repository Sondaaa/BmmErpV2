<?php

/**
 * Piececomptable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    PhpProject1
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Piececomptable extends BasePiececomptable {

    public function ReadHtmlPieceComptable($id) {

       $societe = Doctrine_Core::getTable('dossiercomptable')->findOneById($_SESSION['dossier_id']);
        $piece = PiececomptableTable::getInstance()->findOneById($id);

        $html = '<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr align="center" style="font-size: 12px;">
                            <td colspan="3" style="font-weight:bold;font-size:18px;width:100%;">' . $societe->getRaisonsociale() . '</td>
                        </tr>
                        <tr><td colspan="3" style="width:100%;height:40px;" align="center"><b>Pièce Comptable ' . $piece->getNumero() . '</b></td></tr>
                    </table>
                </div>';

        $html.= '<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr>
                            <td colspan="3" style="width:100%;" align="left"><b>Journal</b> : ' . $piece->getJournalcomptable()->getCode() . ' - ' . $piece->getJournalcomptable()->getLibelle() . '</td>
                        </tr>
                        <tr>
                            <td style="width:35%;"><b>Date</b> : ' . date('d/m/Y', strtotime($piece->getDate())) . '</td>
                            <td style="width:30%;"><b>Série </b> : ' . $piece->getNumeroseriejournal()->getPrefixe() . '</td>
                            <td style="width:35%;"><b>Numéro</b> : ' . $piece->getNumero() . '</td>
                        </tr>
                    </table>
                </div>';

        $solde = $piece->getTotalcredit() - $piece->getTotaldebit();

        if ($solde == 0) {
            $nature_solde = 'Soldé';
        } else {
            if ($solde > 0) {
                $nature_solde = 'Créditeur';
            } else {
                $nature_solde = 'Débiteur';
            }
        }
        $html.= '<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr>
                            <td style="width:55px;font-size:10px"><b>Libellé :</b></td>
                            <td style="width:530px;font-size:10px"><div>' . $piece->getLibelle() . '</div></td>
                            <td style="width:55px;font-size:10px;text-align:center;"><b>Solde :</b></td>
                            <td style="width:100px;font-size:10px;text-align:center;">' . number_format(abs($solde), 3, '.', ' ') . '</td>
                            <td style="width:100px;font-size:10px;text-align:center;"><b>Nature Solde :</b></td>
                            <td style="width:90px;font-size:10px;text-align:center;">' . $nature_solde . '</td>
                         </tr>
                    </table> 
                </div>&nbsp;<br>';

        $html.= '<table cellspacing="0" cellpadding="3" border="1">
                        <tr align="center" style="font-size:12px;font-weight:bold;background-color:#ECECEC;">
                            <td style="width:3%;height:25px;">N°</td>
                            <td style="width:27%;">Numéro du Compte</td>
                            <td style="width:10%;">Débit</td>
                            <td style="width:10%;">Crédit</td>
                            <td style="width:25%;">Contre Partie</td>
                            <td style="width:15%;">Nature Pièce</td>
                            <td style="width:10%;">N° Externe</td>                          
                        </tr>';
        $i = 1;
        $lignes = LignepiececomptableTable::getInstance()->getByPieceInOrderSaisie($piece->getId());
        foreach ($lignes as $ligne) {
            $montant_debit = '';
            if ($ligne->getMontantdebit() != 0)
                $montant_debit = $ligne->getMontantdebit();
            $montant_credit = '';
            if ($ligne->getMontantcredit() != 0)
                $montant_credit = $ligne->getMontantcredit();
            $contre_partie = '';
            if ($ligne->getIdContrepartie() != null)
                $contre_partie = '<b>' . trim($ligne->getPlandossiercomptablecontre()->getNumerocompte()) . '</b> - ' . trim($ligne->getPlandossiercomptablecontre()->getLibelle());
            $nature_piece = '';
            if ($ligne->getNaturepiece() != null)
                $nature_piece = $ligne->getNaturepiece()->getLibelle();
            if (($ligne->getMontantdebit() != 0) || ($ligne->getMontantcredit() != 0)):
                $html.='<tr style="font-size:9px;">
                        <td style="text-align:center;height:25px;">' . $i++ . '</td>
                        <td style="text-align:justify;"><b>' . trim($ligne->getPlandossiercomptable()->getNumeroCompte()) . '</b> - ' . trim($ligne->getPlandossiercomptable()->getLibelle()) . '</td>
                        <td style="text-align:right;">' . number_format($montant_debit, 3, '.', ' ') . '</td>
                        <td style="text-align:right;">' . number_format($montant_credit, 3, '.', ' ') . '</td>
                        <td style="text-align:justify;">' . $contre_partie . '</td>
                        <td style="text-align:center;">' . $nature_piece . '</td>
                        <td style="text-align:center;">' . $ligne->getNumeroexterne() . '</td>
                    </tr>';
            endif;
        }

        $html.='</table>&nbsp;<br>';

        $html.='<table cellspacing="0" cellpadding="3" border="1">
                        <tr style="font-size:11px;background-color:#ECECEC;">
                            <td style="width:30%;text-align:right;height:25px;"><b>Total</b></td>
                            <td style="width:10%;text-align:right;">' . number_format($piece->getTotaldebit(), 3, '.', ' ') . '</td>
                            <td style="width:10%;text-align:right;">' . number_format($piece->getTotalcredit(), 3, '.', ' ') . '</td>
                            <td style="width:50%;"><b>Solde :</b> ' . number_format($solde, 3, '.', ' ') . '</td>                     
                        </tr>
                </table>';

        return $html;
    }

    public function ReadHtmlListePieceComptable(sfWebRequest $request) {

        $journal = $request->getParameter('journal', '');
        $num = $request->getParameter('num', '');
        $date_debut = $request->getParameter('date_debut', '');
        $date_fin = $request->getParameter('date_fin', '');
        $num_debut = $request->getParameter('num_debut', '');
        $num_fin = $request->getParameter('num_fin', '');
        $type_tri = $request->getParameter('type_tri', '');
        $tri = $request->getParameter('tri', '');

        $exercice_id = $_SESSION['exercice_id'];

      $societe = Doctrine_Core::getTable('dossiercomptable')->findOneById($_SESSION['dossier_id']);
        $pieces = PiececomptableTable::getInstance()->loadAllFiltrePrint($journal, $num, $date_debut, $date_fin, $num_debut, $num_fin, $type_tri, $tri, $exercice_id);

        $html = '<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr align="center" style="font-size: 12px;">
                            <td colspan="3" style="font-weight:bold;font-size:18px;width:100%;">' . $societe->getRaisonsociale() . '</td>
                        </tr>
                        <tr><td colspan="3" style="width:100%;" align="center"><b>Liste des Pièces Comptables</b></td></tr>
                    </table>
                </div>';

        if ($num_debut == '')
            $num_debut = '------';
        if ($num_fin == '')
            $num_fin = '------';

        if ($date_debut == '')
            $date_debut = '--/--/----';
        else
            $date_debut = date('d/m/Y', strtotime($date_debut));
        if ($date_fin == '')
            $date_fin = '--/--/----';
        else
            $date_fin = date('d/m/Y', strtotime($date_fin));

        $html.='<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr style="font-size: 11px;">
                            <td style="width:50%;"><b>Numéro du :</b> ' . $num_debut . ' <b>Au :</b> ' . $num_fin . '</td>
                            <td style="width:50%;text-align:right"><b>Période du : </b>' . $date_debut . ' <b>Au :</b> ' . $date_fin . '</td>
                        </tr>
                    </table>
                </div>&nbsp;<br>';

        $html.= '<table cellspacing="0" cellpadding="3" border="1">
                        <tr align="center" style="font-size:11px;font-weight:bold;">
                            <td style="width:5%;">N°</td>
                            <td style="width:25%;">Journal</td>
                            <td style="width:10%;">Date</td>
                            <td style="width:10%;">Numéro</td>
                            <td style="width:8%;">Série</td>
                            <td style="width:11%;">Débit</td>
                            <td style="width:11%;">Crédit</td>
                            <td style="width:20%;">Utilsateur</td>
                        </tr>';
        $i = 1;
        foreach ($pieces as $piece) {
            $html.='<tr style="font-size:9px;">
                        <td style="text-align:center;">' . $i++ . '</td>
                        <td style="text-align:justify;">' . $piece->getJournalcomptable()->getCode() . ' - ' . $piece->getJournalcomptable()->getLibelle() . '</td>
                        <td style="text-align:center;">' . date('d/m/Y', strtotime($piece->getDate())) . '</td>
                        <td style="text-align:center;">' . $piece->getNumero() . '</td>
                        <td style="text-align:center;">' . $piece->getNumeroseriejournal()->getPrefixe() . '</td>
                        <td style="text-align:center;">' . $piece->getTotaldebit() . '</td>
                        <td style="text-align:center;">' . $piece->getTotalcredit() . '</td>
                        <td style="text-align:center;">' . $piece->getUtilisateur()->getAgents()->getNomcomplet() . '</td>
                    </tr>';
        }

        $html.='</table>';


        return $html;
    }

    public function ReadHtmlMulticritereListe(sfWebRequest $request) {
        $societe = Doctrine_Core::getTable('dossiercomptable')->findOneById($_SESSION['dossier_id']);
        $html = '<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr align="center" style="font-size: 12px;">
                            <td colspan="3" style="font-weight:bold;font-size:18px;width:100%;">' . $societe->getRaisonsociale() . '</td>
                        </tr>
                        <tr><td colspan="3" style="width:100%;font-size:14px;" align="center"><b>Liste des Pièces Comptables<br>Recherche Multicritères</b></td></tr>
                    </table>
                </div>';

        $filtre = $request->getParameter('filtre');

        switch ($filtre) {
            case 'date_piece':
                $operation = html_entity_decode(urldecode($request->getParameter('operation', '')));
                if ($operation == 'lt;')
                    $operation = '<=';
                elseif ($operation == 'gt;')
                    $operation = '>=';
                $date = $request->getParameter('date', '');
                $date_debut = $request->getParameter('date_debut', '');
                $date_fin = $request->getParameter('date_fin', '');

                $pieces = PieceComptableTable::getInstance()->loadByDatePiece($date, $date_debut, $date_fin, $operation)->execute();

                if ($date == '')
                    $date = '--/--/----';
                else
                    $date = date('d/m/Y', strtotime($date));

                if ($date_debut == '')
                    $date_debut = '--/--/----';
                else
                    $date_debut = date('d/m/Y', strtotime($date_debut));

                if ($date_fin == '')
                    $date_fin = '--/--/----';
                else
                    $date_fin = date('d/m/Y', strtotime($date_fin));

                $filtre_text = '';
                switch ($operation) {
                    case '=':
                        $filtre_text = 'Egale à ( = ) ' . $date;
                        break;
                    case '<>':
                        $filtre_text = 'Comprise entre ( &lt;= , >= ) ' . $date_debut . ' et ' . $date_fin;
                        break;
                    case '>':
                        $filtre_text = 'Supérieure à ( > ) ' . $date;
                        break;
                    case '<':
                        $filtre_text = 'Inférieure à ( < ) ' . $date;
                        break;
                    case '>=':
                        $filtre_text = 'Supérieure ou égale à ( >= ) ' . $date;
                        break;
                    case '<=':
                        $filtre_text = 'Inférieure ou égale à ( &lt;= ) ' . $date;
                        break;
                }

                $filtre_text = '<b>Date Pièce : </b> ' . $filtre_text;

                break;

            case 'date_saisie':
                $operation = html_entity_decode(urldecode($request->getParameter('operation', '')));
                if ($operation == 'lt;')
                    $operation = '<=';
                elseif ($operation == 'gt;')
                    $operation = '>=';
                $date = $request->getParameter('date', '');
                $date_debut = $request->getParameter('date_debut', '');
                $date_fin = $request->getParameter('date_fin', '');

                $pieces = PieceComptableTable::getInstance()->loadByDateSaisie($date, $date_debut, $date_fin, $operation)->execute();

                if ($date == '')
                    $date = '--/--/----';
                else
                    $date = date('d/m/Y', strtotime($date));

                if ($date_debut == '')
                    $date_debut = '--/--/----';
                else
                    $date_debut = date('d/m/Y', strtotime($date_debut));

                if ($date_fin == '')
                    $date_fin = '--/--/----';
                else
                    $date_fin = date('d/m/Y', strtotime($date_fin));

                $filtre_text = '';
                switch ($operation) {
                    case '=':
                        $filtre_text = 'Egale à ( = ) ' . $date;
                        break;
                    case '<>':
                        $filtre_text = 'Comprise entre ( &lt;= , >= ) ' . $date_debut . ' et ' . $date_fin;
                        break;
                    case '>':
                        $filtre_text = 'Supérieure à ( > ) ' . $date;
                        break;
                    case '<':
                        $filtre_text = 'Inférieure à ( < ) ' . $date;
                        break;
                    case '>=':
                        $filtre_text = 'Supérieure ou égale à ( >= ) ' . $date;
                        break;
                    case '<=':
                        $filtre_text = 'Inférieure ou égale à ( &lt;= ) ' . $date;
                        break;
                }

                $filtre_text = '<b>Date Saisie : </b> ' . $filtre_text;

                break;

            case 'date_modification':
                $operation = html_entity_decode(urldecode($request->getParameter('operation', '')));
                if ($operation == 'lt;')
                    $operation = '<=';
                elseif ($operation == 'gt;')
                    $operation = '>=';
                $date = $request->getParameter('date', '');
                $date_debut = $request->getParameter('date_debut', '');
                $date_fin = $request->getParameter('date_fin', '');

                $pieces = PieceComptableTable::getInstance()->loadByDateModification($date, $date_debut, $date_fin, $operation)->execute();

                if ($date == '')
                    $date = '--/--/----';
                else
                    $date = date('d/m/Y', strtotime($date));

                if ($date_debut == '')
                    $date_debut = '--/--/----';
                else
                    $date_debut = date('d/m/Y', strtotime($date_debut));

                if ($date_fin == '')
                    $date_fin = '--/--/----';
                else
                    $date_fin = date('d/m/Y', strtotime($date_fin));

                $filtre_text = '';
                switch ($operation) {
                    case '=':
                        $filtre_text = 'Egale à ( = ) ' . $date;
                        break;
                    case '<>':
                        $filtre_text = 'Comprise entre ( &lt;= , >= ) ' . $date_debut . ' et ' . $date_fin;
                        break;
                    case '>':
                        $filtre_text = 'Supérieure à ( > ) ' . $date;
                        break;
                    case '<':
                        $filtre_text = 'Inférieure à ( < ) ' . $date;
                        break;
                    case '>=':
                        $filtre_text = 'Supérieure ou égale à ( >= ) ' . $date;
                        break;
                    case '<=':
                        $filtre_text = 'Inférieure ou égale à ( &lt;= ) ' . $date;
                        break;
                }

                $filtre_text = '<b>Date Modification : </b> ' . $filtre_text;

                break;

            case 'montant':
                $operation = html_entity_decode(urldecode($request->getParameter('operation', '')));
                if ($operation == 'lt;')
                    $operation = '<=';
                elseif ($operation == 'gt;')
                    $operation = '>=';
                $montant = $request->getParameter('montant');
                $montant_min = $request->getParameter('montant_min');
                $montant_max = $request->getParameter('montant_max');

                $pieces = PieceComptableTable::getInstance()->loadByMontant($montant, $montant_min, $montant_max, $operation)->execute();

                if ($montant == '')
                    $montant = ' - ';
                else
                    $montant = number_format($montant, 3, '.', ' ');

                if ($montant_min == '')
                    $montant_min = ' - ';
                else
                    $montant_min = number_format($montant_min, 3, '.', ' ');

                if ($montant_max == '')
                    $montant_max = ' - ';
                else
                    $montant_max = number_format($montant_max, 3, '.', ' ');

                $filtre_text = '';
                switch ($operation) {
                    case '=':
                        $filtre_text = 'Egale à ( = ) ' . $montant;
                        break;
                    case '<>':
                        $filtre_text = 'Comprise entre ( &lt;= , >= ) ' . $montant_min . ' et ' . $montant_max;
                        break;
                    case '>':
                        $filtre_text = 'Supérieure à ( > ) ' . $montant;
                        break;
                    case '<':
                        $filtre_text = 'Inférieure à ( < ) ' . $montant;
                        break;
                    case '>=':
                        $filtre_text = 'Supérieure ou égale à ( >= ) ' . $montant;
                        break;
                    case '<=':
                        $filtre_text = 'Inférieure ou égale à ( &lt;= ) ' . $montant;
                        break;
                }

                $filtre_text = '<b>Montant : </b> ' . $filtre_text;

                break;

            case 'libelle':
                $libelle = $request->getParameter('libelle');
                $pieces = PieceComptableTable::getInstance()->loadByLibelle($libelle)->execute();
                $filtre_text = '<b>Libellé pièce comptable : </b> ' . $libelle;
                break;

            case 'numero_piece':
                $numero = $request->getParameter('numero');
                $pieces = PieceComptableTable::getInstance()->loadByNumero($numero)->execute();
                $filtre_text = '<b>Numéro pièce comptable : </b> ' . $numero;
                break;

            case 'numero_externe':
                $externe = $request->getParameter('externe');
                $pieces = PieceComptableTable::getInstance()->loadByExterne($externe)->execute();
                $filtre_text = '<b>Numéro externe document : </b> ' . $externe;
                break;

            case 'reference':
                $reference = $request->getParameter('reference');
                $pieces = PieceComptableTable::getInstance()->loadByReference($reference)->execute();
                $filtre_text = '<b>Référence document : </b> ' . $reference;
                break;

            case 'journal':
                $date_debut = $request->getParameter('date_debut', '');
                $date_fin = $request->getParameter('date_fin', '');

                $pieces = PieceComptableTable::getInstance()->loadByJournal($date_debut, $date_fin)->execute();

                if ($date_debut == '')
                    $date_debut = '--/--/----';
                else
                    $date_debut = date('d/m/Y', strtotime($date_debut));

                if ($date_fin == '')
                    $date_fin = '--/--/----';
                else
                    $date_fin = date('d/m/Y', strtotime($date_fin));

                $filtre_text = '<b>Journal du : </b> ' . $date_debut . ' au ' . $date_fin;
                break;

            case 'compte':
                $compte_debut = $request->getParameter('compte_debut', '');
                $compte_fin = $request->getParameter('compte_fin', '');

                $pieces = PieceComptableTable::getInstance()->loadByCompte($compte_debut, $compte_fin)->execute();

                if ($compte_debut == '')
                    $compte_debut = ' - ';

                if ($compte_fin == '')
                    $compte_fin = ' - ';

                $filtre_text = '<b>Compte du : </b> ' . $compte_debut . ' au ' . $compte_fin;
                break;

            case 'devise':
                $devise = $request->getParameter('devise');
                $libelle = DeviseTable::getInstance()->find($devise);
                $pieces = PieceComptableTable::getInstance()->loadByDevise($devise)->execute();
                $filtre_text = '<b>Devise : </b> ' . $libelle;
                break;

            case 'sens':
                $credit = $request->getParameter('credit', '');
                $debit = $request->getParameter('debit', '');
                $creditdebit = $request->getParameter('creditdebit', '');

                $pieces = PieceComptableTable::getInstance()->loadBySens($credit, $debit, $creditdebit)->execute();

                if ($credit == 'true')
                    $credit = '<li>Crédit</li>';
                else
                    $credit = '';
                if ($debit == 'true')
                    $debit = '<li>Débit</li>';
                else
                    $debit = '';

                if ($creditdebit == 'true')
                    $creditdebit = '<li>Crédit et Débit</li>';
                else
                    $creditdebit = '';

                $filtre_text = '<ul><b>Sens : </b> ' . $credit . $debit . $creditdebit . '</ul>';
                break;

            case 'user':
                $user = $request->getParameter('user');
                $libelle = UtilisateurTable::getInstance()->find($user);
                $pieces = PieceComptableTable::getInstance()->loadByUser($user)->execute();
                $filtre_text = '<b>Utilisateur : </b> ' . $libelle;
                break;
        }

        $html.='<div border="1">
                    <table cellspacing="0" cellpadding="3">
                        <tr><td style="width:100%;">' . $filtre_text . '</td></tr>
                    </table>
                </div>&nbsp;<br>';

        $html.= '<table cellspacing="0" cellpadding="3" border="1">
                        <tr align="center" style="font-weight:bold;background-color:#E0E0E0;">
                            <td style="width:5%;height:25px;">N°</td>
                            <td style="width:31%;">Journal Comptable</td>
                            <td style="width:8%;">Date</td>
                            <td style="width:8%;">Numéro</td>
                            <td style="width:6%;">Série</td>
                            <td style="width:11%;">Total Débit</td>
                            <td style="width:11%;">Total Crédit</td>
                            <td style="width:20%;">Utilsateur (Saisie Le)</td>
                        </tr>';
        $i = 1;

        if ($pieces->count() != 0):
            foreach ($pieces as $piece) {
                $html.='<tr style="font-size:11px;">
                        <td style="text-align:center;height:25px;">' . $i++ . '</td>
                        <td style="text-align:justify;">' . $piece->getJournalcomptable()->getCode() . ' - ' . $piece->getJournalcomptable()->getLibelle() . '</td>
                        <td style="text-align:center;">' . date('d/m/Y', strtotime($piece->getDate())) . '</td>
                        <td style="text-align:center;">' . $piece->getNumero() . '</td>
                        <td style="text-align:center;">' . $piece->getNumeroseriejournal()->getPrefixe() . '</td>
                        <td style="text-align:center;">' . $piece->getTotaldebit() . '</td>
                        <td style="text-align:center;">' . $piece->getTotalcredit() . '</td>
                        <td style="text-align:center;">' . $piece->getUtilisateur()->getAgents()->getNomcomplet() . ' (' . date('d/m/Y', strtotime($piece->getDatecreation())) . ')</td>
                    </tr>';
            }
        else:
            $html.='<tr>
                        <td style="text-align:center;font-weight:bold;font-size:16px;width:100%;height:70px;">&nbsp;<br>Liste des Pièces Vide</td>
                    </tr>';
        endif;

        $html.='</table>';


        return $html;
    }
    
    public function getReference() {
       $lignes_piece_comptable= LignepiececomptableTable::getInstance()->findOneByIdPiececomptable($this->getId());
       return $lignes_piece_comptable->getReference();
    }

}
