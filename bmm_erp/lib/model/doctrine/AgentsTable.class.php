<?php

/**
 * AgentsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class AgentsTable extends Doctrine_Table {

    /**
     * Returns an instance of this class.
     *
     * @return object AgentsTable
     */
    public static function getInstance() {
        return Doctrine_Core::getTable('Agents');
    }

    public function getByListeId($ids) {
        $q = $this->createQuery('mv')
                ->whereIn('mv.id', (array) $ids)
                ->orderBy('mv.id')
                ->execute();
        return $q;
    }

    public function getAllOrderByNomComplet() {
        //concat(trim(a.idrh),\' \',trim(a.nomcomplet),\' \',trim(a.prenom) )
        $query = $this->createQuery('a');
        $query->select(" concat(trim(a.nomcomplet),' ',prenom,' ',trim(a.idrh)) as nomcompletss,"
                        . " a.id as id, "
                        . " d.id as id_demandeur")
                ->from('Agents a')
                ->leftJoin('a.Demandeur d')
                ->AndWhere('a.idrh is not NULL')
                ->orderBy('a.nomcomplet');
        // die($query);
        return $query->execute();
    }

    public function getAllByNomCompletAndPaye() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('agents a')
                ->leftJoin('a.Paie p')
                ->where('p.annee=2019')
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function getAgentsacontrat() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('agents a')
                ->leftJoin('a.Contrat c')
                ->where('a.id  IN (select contrat.id_agents from contrat');
        return $query->execute();
    }

    public function getAllCivileOrderByNomComplet() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a,contrat c ')
                ->where('a.id_regrouppement=1')
                ->andWhere('c.id_agents=a.id')
                ->andWhere('c.id_typecontrat=1')
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function load($matricule, $nom, $prenom, $id_regroupement) {
        $query = $this->createQuery('a');
        $query->select('a.*')
                ->from('Agents a');

        if ($matricule != '')
            $query->andWhere("UPPER(a.idrh) LIKE '%" . strtoupper($matricule) . "%'");

        if ($nom != '')
            $query->andWhere("UPPER(a.nomcomplet) LIKE '%" . strtoupper($nom) . "%'");

        if ($prenom != '')
            $query->andWhere("UPPER(a.prenom) LIKE '%" . strtoupper($prenom) . "%'");

        if ($id_regroupement != '' && $id_regroupement != '0')
            $query->andWhere("a.id_regrouppement =" . $id_regroupement);

        $query->orderBy('a.nomcomplet, a.prenom');
        return $query;
    }

    public function getForPersonnalPrintAccueil($matricule, $cin_filtre) {
        $query = $this->createQuery('a');
        $query->select('a.*')
                ->from('Agents a');

        if ($matricule != '')
            $query->andWhere("UPPER(a.idrh) LIKE '%" . strtoupper($matricule) . "%'");
        if ($cin_filtre != '')
            $query->andWhere("UPPER(a.cin) LIKE '%" . $cin_filtre . "%'");


        $query->orderBy('a.nomcomplet, a.prenom');
        //die($query);
        return $query->execute();
    }

    public function getForPersonnalPrint($matricule, $nom, $prenom, $id_regroupement) {
        $query = $this->createQuery('a');
        $query->select('a.*')
                ->from('Agents a');

        if ($matricule != '')
            $query->andWhere("UPPER(a.idrh) LIKE '%" . strtoupper($matricule) . "%'");

        if ($nom != '')
            $query->andWhere("UPPER(a.nomcomplet) LIKE '%" . strtoupper($nom) . "%'");

        if ($prenom != '')
            $query->andWhere("UPPER(a.prenom) LIKE '%" . strtoupper($prenom) . "%'");

        if ($id_regroupement != '' && $id_regroupement != '0')
            $query->andWhere("a.id_regrouppement =" . $id_regroupement);

        $query->orderBy('a.nomcomplet, a.prenom');
        return $query->execute();
    }

    public function getAllByNomComplet() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a')
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function getAllByRegroupemet($id_reg) {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a')
                ->where('a.id_regrouppement=' . $id_reg)
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function getAgents() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a,demandeavance d')
                ->Where("d.id_agents=a.id")
                ->andwhere("a.id NOT IN (select demandeavance.id_agents from historiqueretenue, demandeavance where historiqueretenue.id_demandeavance=demandeavance.id and historiqueretenue.mois = " . intval(date("m")) . " and historiqueretenue.annee = " . intval(date("Y")) . ")")
                ->andwhere('(d.paye = false or d.paye is NULL)')
                ->andwhere("(TO_CHAR(d.datedebutretenue, 'yyyy-mm')) <= '" . date("Y-m") . "'")
                ->andwhere("(TO_CHAR(d.datefinretenue, 'yyyy-mm')) >= '" . date("Y-m") . "'")
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function getAgentsPret() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a,demandepret d')
                ->Where("d.id_agents=a.id")
                ->andwhere('(d.paye = false or d.paye is NULL)')
                ->andwhere("(TO_CHAR(d.datedebutretenue, 'yyyy-mm')) <= '" . date("Y-m") . "'")
                ->andwhere("(TO_CHAR(d.datefinretenue, 'yyyy-mm')) >= '" . date("Y-m") . "'")
                ->orderBy('a.nomcomplet');

        return $query->execute();
    }

    public function getAgentsRetenue() {
        $query = $this->createQuery('a');
        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a,retenuesursalaire d')
                ->Where("d.id_agents=a.id")
                ->andwhere('(d.paye = false or d.paye is NULL)')
                ->andwhere("(TO_CHAR(d.datedebut, 'yyyy-mm')) <= '" . date("Y-m") . "'")
                ->andwhere("(TO_CHAR(d.datefin, 'yyyy-mm')) >= '" . date("Y-m") . "'")
                ->orderBy('a.nomcomplet');
        return $query->execute();
    }

    public function getAllByNomCompletAvecConge($annee) {
        $query = $this->createQuery('a');

        $query->select('a.id as id, a.nomcomplet as nomcomplet')
                ->from('Agents a')
                ->where("a.id IN (select conge.id_agents from conge  where (((TO_CHAR(conge.daterealise, 'yyyy-mm')) ='" . $annee . '-' . date('m') . "' OR( TO_CHAR(conge.datefinrealise, 'yyyy-mm')) = '" . $annee . '-' . date('m') . "')))");
        $query = $query->orderBy('a.nomcomplet')
                ->groupBy('a.id');
        return $query->execute();
    }

    public function getAllPagerAgents($nomcomplet = '', $idrh = '', $cin = '') {
        $q = $this->createQuery('c')
                ->select('c.id as id, c.idrh as idrh, c.cin as cin,c.nomcomplet as nomcomplet')
                ->from('Agents c')
        ;
        if ($nomcomplet != '') {
            $q = $q->andWhere('c.nomcomplet like ?', '%' . $nomcomplet . '%');
        }
        if ($idrh != '') {
            $q = $q->andWhere('c.idrh like ?', '%' . $idrh . '%');
        }
        if ($cin != '') {
            $q = $q->andWhere('c.cin LIKE ?', '%' . $cin . '%');
        }

        return $q;
    }

    public function loadDonneesBase($matricule, $cin, $nom, $prenom, $date_naissance, $lieu_naissance, $sexe, $id_regroupement, $adresse, $situation) {
        $query = $this->createQuery('a');
        $query->select('a.*')
                ->from('Agents a');

        if ($matricule != '')
            $query->andWhere("UPPER(a.idrh) LIKE '%" . strtoupper($matricule) . "%'");

        if ($cin != '')
            $query->andWhere("a.cin LIKE '%" . $cin . "%'");

        if ($nom != '')
            $query->andWhere("UPPER(a.nomcomplet) LIKE '%" . strtoupper($nom) . "%'");

        if ($prenom != '')
            $query->andWhere("UPPER(a.prenom) LIKE '%" . strtoupper($prenom) . "%'");

        if ($date_naissance != '')
            $query->andWhere("a.datenaissance =" . $date_naissance);

        if ($id_regroupement != '' && $id_regroupement != '0' && $id_regroupement != 'null')
            $query->andWhere("a.id_regrouppement =" . $id_regroupement);

        if ($lieu_naissance != '' && $lieu_naissance != '0' && $lieu_naissance != 'null')
            $query->andWhere("a.lieun =" . $lieu_naissance);

        if ($sexe != '' && $sexe != '0' && $sexe != 'null')
            $query->andWhere("a.id_sexe =" . $sexe);

        if ($adresse != '')
            $query->andWhere("UPPER(a.adresse) LIKE '%" . strtoupper($adresse) . "%'");

        if ($situation != '' && $situation != '0' && $situation != 'null')
            $query->andWhere("a.id_etatcivil =" . $situation);

        $query->orderBy('a.nomcomplet, a.prenom');
        return $query;
    }

//    public function getlisteagents($idde,$idfin) {
//        $query = $this->createQuery('a');
//        $query->select('a.id as id, a.nomcomplet as nomcomplet, a.idrh as idrh')
//                ->from('Agents a')
//                ->where('id >=' . $idde)
//                ->andWhere('id <=  ?' , $idfin);
//               
//        return $query->execute();
//    }
//     public function getlisteagents($idd) {
//        $query = $this->createQuery('a');
//        $query->select('a.id as id, a.nomcomplet as nomcomplet, a.idrh as idrh')
//                ->from('Agents a,contrat c ,posterh p,unite ,serviecrh ,sousdirection ,direction ')
//                ->where('c.id_agents=id and c.id_posterh=p.id and p.id_unite=unite.id and unite.id_service=servicerh.id and  servicerh.id_sousdirection=sousdirection.id and sousdirection.id_direction=direction.id' )
//                ->andWhere('direction.id' , $idd);
//               
//        return $query->execute();
//    }
}
