<?php

/**
 * Article
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Article extends BaseArticle {

    public function __toString() {
        return "" . $this->getNumero() . " " . $this->getDesignation();
    }

    public function getNumeroseqfiche() {
        $doc = Doctrine_Query::create()
                        ->select('COALESCE(MAX(a.numero),0) as numero')
                        ->from('article a')->execute();
        if ($doc[0]['numero'] == 0) {
            $datey = date('y') * 100000;
            return sprintf('%06d', $datey + $doc[0]['numero'] + 1);
        } else {
            $datey = 0;
            return sprintf($doc[0]['numero'] + 1);
        }
    }

    public function getSeqCode($codefamille, $codesousfamille, $codenature) {
        $code = "";
        $article = Doctrine_Query::create()
                ->select("COALESCE(MAX(codeart),'0') as code")
                ->where("codefamille='" . $codefamille . "' and codesf='" . $codesousfamille . "' and codenature='" . $codenature . "'")
                ->from('article a');
        //die($article);
        $article = $article->execute();
        $code = $article[0]['code'];
        if ($code == 0)
            $code = $codefamille . $codesousfamille . $codenature . "000";
        return $code + 1;
    }

    public function getPampNew($qte, $puht, $mntttc, $lignedoc) {
        $qteexistant = $this->getStockreel();
        $prixttcnet = 0;
        if ($this->getPamp())
            $prixttcnet = $this->getPamp();
        $puhtreel = $prixttcnet;
        $coutmoyenne = $this->getPamp();

        $total = floatval($qteexistant * $puhtreel) + floatval($qte * $mntttc);
        $totalqte = $qte + $qteexistant;
        $pamp = $total / $totalqte;
        $article = new Article();
        $art = Doctrine_Core::getTable('article')->findOneById($this->getId());
        $article = $art;
        if ($this->getAht())
            $article->setAht($puht);
        $article->setPamp($pamp);
        if ($this->getAttc()) {
            $article->setAttc($mntttc);
        }
        if ($this->getQtetheorique())
            $qtetheorique = $this->getQtetheorique() + $qte;
        else
            $qtetheorique = $qte;
        if ($this->getStockreel())
            $qtereel = $this->getStockreel() + $qte;
        else
            $qtereel = $qte;
        $article->setStockreel($qtereel);
        $article->setQtetheorique($qtetheorique);
        $article->save();
        $stock = new Stock();
        $st = Doctrine_Core::getTable('stock')->findOneByIdArticleAndIdMag($article->getId(), $lignedoc->getIdMag());
        if ($st)
            $stock = $st;
        $stock->setIdMag($lignedoc->getIdMag());
        $stock->setIdArticle($article->getId());
        $stock->setPuht($article->getAht());
        $stock->save();
        if ($stock->getQtetheorique())
            $qtetheorique1 = $stock->getQtetheorique() + $qte;
        else
            $qtetheorique1 = $qte;
        if ($stock->getQtereel())
            $qtereel1 = $stock->getQtereel() + $qte;
        else
            $qtereel1 = $qte;
        $stock->setQtereel($qtereel1);
        $stock->setQtetheorique($qtetheorique1);
        $stock->save();
        $lg = new Lignedocachat();
        $lgs = Doctrine_Core::getTable('lignedocachat')->findOneById($lignedoc->getId());
        $lg = $lgs;
        $lg->setPamp($pamp);
        $lg->save();
    }

    public function UpdateRetour($qte, $idmag, $mntttc) {
        $qteexistant = $this->getStockreel();
        $prixttcnet = 0;
        if ($this->getPamp())
            $prixttcnet = $this->getPamp();
        $puhtreel = $prixttcnet;
        $coutmoyenne = $this->getPamp();

        $total = floatval($qteexistant * $puhtreel) + floatval($qte * $mntttc);
        $totalqte = $qte + $qteexistant;
        $pamp = $total / $totalqte;
        $article = new Article();
        $art = Doctrine_Core::getTable('article')->findOneById($this->getId());
        $article = $art;

        $article->setPamp($pamp);
        if ($this->getAttc()) {
            $article->setAttc($mntttc);
        }
        if ($this->getQtetheorique())
            $qtetheorique = $this->getQtetheorique() + $qte;
        else
            $qtetheorique = $qte;
        if ($this->getStockreel())
            $qtereel = $this->getStockreel() + $qte;
        else
            $qtereel = $qte;
        $article->setStockreel($qtereel);
        $article->setQtetheorique($qtetheorique);
        $article->save();
        $stock = new Stock();
        $st = Doctrine_Core::getTable('stock')->findOneByIdArticleAndIdMag($article->getId(), $idmag);
        if ($st)
            $stock = $st;
        $stock->setIdMag($idmag);
        $stock->setIdArticle($article->getId());
        $stock->setPuht($article->getAht());
        $stock->save();
        if ($stock->getQtetheorique())
            $qtetheorique1 = $stock->getQtetheorique() + $qte;
        else
            $qtetheorique1 = $qte;
        if ($stock->getQtereel())
            $qtereel1 = $stock->getQtereel() + $qte;
        else
            $qtereel1 = $qte;
        $stock->setQtereel($qtereel1);
        $stock->setQtetheorique($qtetheorique1);
        $stock->save();
    }

    public function UpdatePampAvoir($qte, $idmag, $mntttc) {
        $qteexistant = $this->getStockreel();
        $prixttcnet = 0;
        if ($this->getPamp())
            $prixttcnet = $this->getPamp();
        $puhtreel = $prixttcnet;
        $coutmoyenne = $this->getPamp();

        $total = floatval($qteexistant * $puhtreel) + floatval($qte * $mntttc);
        $totalqte = $qte + $qteexistant;
        $pamp = $total / $totalqte;
        $article = new Article();
        $art = Doctrine_Core::getTable('article')->findOneById($this->getId());
        $article = $art;

        $article->setPamp($pamp);
        if ($this->getAttc()) {
            $article->setAttc($mntttc);
        }
        if ($this->getQtetheorique())
            $qtetheorique = $this->getQtetheorique() - $qte;
        else
            $qtetheorique = -$qte;
        if ($this->getStockreel())
            $qtereel = $this->getStockreel() - $qte;
        else
            $qtereel = -$qte;
        $article->setStockreel($qtereel);
        $article->setQtetheorique($qtetheorique);
        $article->save();
        $stock = new Stock();
        $st = Doctrine_Core::getTable('stock')->findOneByIdArticleAndIdMag($article->getId(), $idmag);
        if ($st)
            $stock = $st;
        $stock->setIdMag($idmag);
        $stock->setIdArticle($article->getId());
        $stock->setPuht($article->getAht());
        $stock->save();
        if ($stock->getQtetheorique())
            $qtetheorique1 = $stock->getQtetheorique() - $qte;
        else
            $qtetheorique1 = -$qte;
        if ($stock->getQtereel())
            $qtereel1 = $stock->getQtereel() - $qte;
        else
            $qtereel1 = -$qte;
        $stock->setQtereel($qtereel1);
        $stock->setQtetheorique($qtetheorique1);
        $stock->save();
    }

    public function UpdateStock($qte, $idmag) {
        $article = new Article();
        $article = $this;
        $stock = new Stock();
        $st = Doctrine_Core::getTable('stock')->findOneByIdArticleAndIdMag($this->getId(), $idmag);
        if ($st) {
            $stock = $st;
            $qte_actueil = $stock->getQtetheorique() - $qte;
            if ($qte_actueil >= 0) {
                //$stock->setQtereel($qte_actueil);
                $stock->setQtetheorique($qte_actueil);
                $stock->save();
            }
        }
        $qte_acctueil = $article->getQtetheorique() - $qte;
        $article->setQtetheorique($qte_acctueil);
        //  $article->setStockreel($qte_acctueil);
        $article->save();
    }

    public function UpdateStockTransfert($qte, $stk, $idmagarriver) {
        $stock = new Stock();
        $stock = $stk;
        $strecherche = new Stock();
        $qtereel = 0;
        $qtetheorique = 0;
        $stockrecherche = Doctrine_Core::getTable('stock')->findOneByIdMagAndIdArticle($idmagarriver, $stock->getIdArticle());
        if ($stockrecherche) {
            $strecherche = $stockrecherche;
            $qtereel = $strecherche->getQtereel();
            $qtetheorique = $strecherche->getQtetheorique();
        }

        //_____________________________________________________________________Mis a jour nouveaux stock
        $strecherche->setIdArticle($stock->getIdArticle());
        $strecherche->setIdMag($idmagarriver);
        $strecherche->setQtereel($qte + $qtereel);
        $strecherche->setQtetheorique($qte + $qtetheorique);
        $strecherche->save();

        //______________________________________________________________________Mis ajour ancien stock
        $stock->setQtereel($stock->getQtereel() - $qte);
        $stock->setQtetheorique($stock->getQtetheorique() - $qte);
        $stock->save();
    }

    public function MouvementStock() {
        $query = "SELECT  article.stockreel, lignedocachat.qte,   lignedocachat.pamp,  "
                . " lignedocachat.mntttc,   typedoc.libelle as type,  "
                . " magasin.libelle as magasin,article.codeart,article.designation,  "
                . " documentachat.datecreation "
                . "FROM    article,   documentachat,   typedoc,   lignedocachat,   magasin "
                . "WHERE   documentachat.id_typedoc!=13 and "
                . " documentachat.id_typedoc = typedoc.id AND    lignedocachat.id_doc = documentachat.id "
                . "AND   lignedocachat.id_articlestock = article.id "
                . "AND   lignedocachat.id_mag = magasin.id AND   article.id =" . $this->getId();

        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $listesdocs = $conn->execute($query);
        return $listesdocs;
    }

    public function getStockByDate($lignedoc) {
        $date = $lignedoc['datecreation'];
        $query1 = "SELECT   COALESCE( sum(lignedocachat.qte) ,0) as qte1   "
                . "FROM       documentachat,     lignedocachat "
                . "WHERE      lignedocachat.id_doc = documentachat.id "
                . "AND   (documentachat.id_typedoc=10 or documentachat.id_typedoc=12) "
                . "and documentachat.datecreation <= '" . $date . "' and     "
                . "  lignedocachat.id_articlestock = " . $this->getId();

        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $listesdocs = $conn->execute($query1);

        $qteachat = 0;
        foreach ($listesdocs as $ligne)
            $qteachat = $ligne['qte1'];

        $query2 = "SELECT   COALESCE( sum(lignedocachat.qte) ,0) as qte2   "
                . "FROM       documentachat,     lignedocachat "
                . "WHERE      lignedocachat.id_doc = documentachat.id "
                . "AND   (documentachat.id_typedoc=11 or documentachat.id_typedoc=14) "
                . "and documentachat.datecreation <= '" . $date . "' "
                . "and       lignedocachat.id_articlestock = " . $this->getId();


        $listesdocs2 = $conn->execute($query2);
        $qtesortie = 0;
        foreach ($listesdocs2 as $ligne)
            $qtesortie = $ligne['qte2'];

        return $qteachat - $qtesortie;
    }

    public function ReadHtmlListeArticles(sfWebRequest $request) {
        $code = strtoupper($request->getParameter('code', ''));
        $designation = $request->getParameter('designation', '');
        $famille = strtoupper($request->getParameter('famille', ''));
        $sous_famille = $request->getParameter('sous_famille', '');
        $nature = $request->getParameter('nature', '');

        $liste = ArticleTable::getInstance()->load($code, $designation, $famille, $sous_famille, $nature)->execute();

        if ($famille != '' && $famille != '0' && $famille != 'null')
            $famille_text = FamillearticleTable::getInstance()->find($famille);
        else
            $famille_text = 'Tous';

        if ($sous_famille != '' && $sous_famille != '0' && $sous_famille != 'null')
            $sous_famille_text = SousfamillearticleTable::getInstance()->find($sous_famille);
        else
            $sous_famille_text = 'Tous';

        if ($nature != '' && $nature != '0' && $nature != 'null')
            $nature_text = NaturearticleTable::getInstance()->find($nature);
        else
            $nature_text = 'Tous';

        $html = '<h3 style="font-size:22px;">Liste des Articles</h3>
                <h5 style="font-size:4px;">&nbsp;</h5>
                &nbsp;<br>';
        
        $html.='<table border="1" cellpadding="3" cellspacing="0">
                    <tr>
                        <td style="height:25px;width:25%;"><b>Code :</b> ' . $code . '</td>
                        <td style="width:40%;"><b>Désignation :</b> ' . $designation . '</td>
                        <td style="width:35%;"><b>Nature :</b> ' . $nature_text . '</td>
                    </tr>
                    <tr>
                        <td style="height:25px;width:50%;"><b>Famille :</b> ' . $famille_text . '</td>
                        <td style="width:50%;"><b>Sous Famille :</b> ' . $sous_famille_text . '</td>
                    </tr>
                </table>&nbsp;<br>';

        $html.='<table border="1" cellpadding="3" cellspacing="0">
                    <thead>
                        <tr style="background-color:#DCDCDC;text-align:center;">
                            <td style="height:30px;width:10%;"><b>Code</b></td>
                            <td style="width:25.5%;"><b>Désignation</b></td>
                            <td style="width:14%;"><b>Famille</b></td>
                            <td style="width:13%;"><b>Sous Famille</b></td>
                            <td style="width:8%;"><b>Unité</b></td>
                            <td style="width:8%;"><b>Achat HT</b></td>
                            <td style="width:5.5%;"><b>T.V.A</b></td>
                            <td style="width:8%;"><b>Achat TTC</b></td>
                            <td style="width:8%;"><b>PAMP</b></td>
                        </tr>
                    </thead>
                    <tbody>';

        if ($liste->count() != 0):
            foreach ($liste as $article):
                $html.='<tr>
                            <td style="height:25px;text-align:center;width:10%;">' . $article->getCodeart() . '</td>
                            <td style="width:25.5%;">' . $article->getDesignation() . '</td>
                            <td style="text-align:center;width:14%;">' . $article->getFamillearticle() . '</td>
                            <td style="text-align:center;width:13%;">' . $article->getSousfamillearticle() . '</td>
                            <td style="text-align:center;width:8%;">' . $article->getUnitemarche() . '</td>
                            <td style="text-align:right;width:8%;">' . $article->getAht() . '</td>
                            <td style="text-align:center;width:5.5%;">' . $article->getTva() . '</td>
                            <td style="text-align:right;width:8%;">' . $article->getAttc() . '</td>
                            <td style="text-align:right;width:8%;">' . $article->getPamp() . '</td>
                        </tr>';
            endforeach;
        else:
            $html.='<tr><td style="font-size:14px;text-align:center;height:60px;width:100%;">&nbsp;<br><b>Liste vide</b></td></tr>';
        endif;
        $html.='</tbody>
                </table>';

        return $html;
    }

}
