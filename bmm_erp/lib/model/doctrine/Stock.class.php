<?php

/**
 * Stock
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    BmmErpTest
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Stock extends BaseStock {

    public function MisAJourStockPatrimoine() {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query = "SELECT i.id,i.numero,i.datecreation,i.reference,i.prixhtva,i.tva,i.mntttc,i.tva,v.id as idbureau,"
                . "i.designation,magasin.id as idmag,v.bureaux,magasin.libelle "
                . "FROM immobilisation i,magasin , bureaux v "
                . "WHERE v.id_mag is not null and magasin.libelle = v.bureaux and i.id_bureaux = v.id ";

        $stockPatrimoines = $conn->fetchAssoc($query);
        $nbcountStock = count($stockPatrimoines);
        for ($i = 0; $i < $nbcountStock; $i++) {
            $idmag = $stockPatrimoines[$i]['idmag'];
            if (!$idmag) {
                $mag = new Magasin();
                $mag->MisAjourMagasinParBureau();
            }
            $article = new Article();
            $arts = Doctrine_Core::getTable('article')->findOneByDeseignation($stockPatrimoines[$i]['designation']);
            if ($arts)
                $article = $arts;
            $article->setCodearticle($stockPatrimoines[$i]['reference']);
            $article->setDatecreation($stockPatrimoines[$i]['datecreation']);
            $article->setDeseignation($stockPatrimoines[$i]['designation']);
            $article->setIdTypeartciel(2);
            $article->save();
            $stock = new Stock();
            $sts = Doctrine_Core::getTable('stock')->findOneByIdArticleAndIdMag($article->getId(), $stockPatrimoines[$i]['idmag']);
            $qte = 1;
            if ($sts) {
                $stock = $sts;
                $immob = new Immobilisation();
                $qte = $immob->CalculeNombreImmob($stockPatrimoines[$i]['designation'], $stockPatrimoines[$i]['idbureau']);
            }

            $stock->setIdArticle($article->getId());
            $stock->setDatedentre(date('Y-m-d'));
            $stock->setIdMag($stockPatrimoines[$i]['idmag']);
            $stock->setQte($qte);
            $stock->setQtetheorique($qte);
            $stock->save();
        }
    }

    public function getEntreeStock($date, $idmag) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query1 = "SELECT   COALESCE( sum(lignedocachat.qte) ,0) as qte1   "
                . "FROM       documentachat,     lignedocachat "
                . "WHERE      lignedocachat.id_doc = documentachat.id "
                . "AND   (documentachat.id_typedoc=10 or documentachat.id_typedoc=12) "
                . "and documentachat.datecreation >= '" . $date . "' and     "
                . "  lignedocachat.id_articlestock = " . $this->getIdArticle() . " "
                . "and lignedocachat.id_mag=" . $idmag;

        //die($query1);
        $listesdocs = $conn->execute($query1);

        $qteachat = 0;
        foreach ($listesdocs as $ligne)
            $qteachat = $ligne['qte1'];



        return $qteachat;
    }

    public function getSortieStock($date, $idmag) {
        $conn = Doctrine_Manager::getInstance()->getCurrentConnection();
        $query2 = "SELECT   COALESCE( sum(lignedocachat.qte) ,0) as qte2   "
                . "FROM       documentachat,     lignedocachat "
                . "WHERE      lignedocachat.id_doc = documentachat.id "
                . "AND   (documentachat.id_typedoc=11 or documentachat.id_typedoc=14) "
                . "and documentachat.datecreation >= '" . $date . "' "
                . "and       lignedocachat.id_articlestock = " . $this->getIdArticle()." "
                . " and lignedocachat.id_mag=".$idmag;


        $listesdocs2 = $conn->execute($query2);
        $qtesortie = 0;
        foreach ($listesdocs2 as $ligne)
            $qtesortie = $ligne['qte2'];
        return $qtesortie;
    }

    public function getTypearticlebyarticle() {
        return $this->getArticle()->getTypearticle();
    }

}
